// Compiled by ClojureScript 0.0-2816 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__14612__delegate = function (args){
return console.log.apply(console,(function (){var G__14611 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__14611) : cljs.core.into_array.call(null,G__14611));
})());
};
var G__14612 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14613__i = 0, G__14613__a = new Array(arguments.length -  0);
while (G__14613__i < G__14613__a.length) {G__14613__a[G__14613__i] = arguments[G__14613__i + 0]; ++G__14613__i;}
  args = new cljs.core.IndexedSeq(G__14613__a,0);
} 
return G__14612__delegate.call(this,args);};
G__14612.cljs$lang$maxFixedArity = 0;
G__14612.cljs$lang$applyTo = (function (arglist__14614){
var args = cljs.core.seq(arglist__14614);
return G__14612__delegate(args);
});
G__14612.cljs$core$IFn$_invoke$arity$variadic = G__14612__delegate;
return G__14612;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__14616 = x;
return goog.isString(G__14616);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__14618 = x__$1;
return goog.typeOf(G__14618);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3571__auto__ = ty;
if(cljs.core.truth_(and__3571__auto__)){
return ty.cljs$lang$type;
} else {
return and__3571__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__14620 = obj;
return goog.typeOf(G__14620);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__14622 = Symbol;
return goog.typeOf(G__14622);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4470__auto___14624 = len;
var i_14625 = (0);
while(true){
if((i_14625 < n__4470__auto___14624)){
(new_arr[i_14625] = (arr[i_14625]));

var G__14626 = (i_14625 + (1));
i_14625 = G__14626;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__14627 = (i + (1));
i = G__14627;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__14636__delegate = function (array,i,idxs){
var G__14633 = aget;
var G__14634 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__14635 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__14633,G__14634,G__14635) : cljs.core.apply.call(null,G__14633,G__14634,G__14635));
};
var G__14636 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__14637__i = 0, G__14637__a = new Array(arguments.length -  2);
while (G__14637__i < G__14637__a.length) {G__14637__a[G__14637__i] = arguments[G__14637__i + 2]; ++G__14637__i;}
  idxs = new cljs.core.IndexedSeq(G__14637__a,0);
} 
return G__14636__delegate.call(this,array,i,idxs);};
G__14636.cljs$lang$maxFixedArity = 2;
G__14636.cljs$lang$applyTo = (function (arglist__14638){
var array = cljs.core.first(arglist__14638);
arglist__14638 = cljs.core.next(arglist__14638);
var i = cljs.core.first(arglist__14638);
var idxs = cljs.core.rest(arglist__14638);
return G__14636__delegate(array,i,idxs);
});
G__14636.cljs$core$IFn$_invoke$arity$variadic = G__14636__delegate;
return G__14636;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__14639 = null;
if (arguments.length > 2) {
var G__14640__i = 0, G__14640__a = new Array(arguments.length -  2);
while (G__14640__i < G__14640__a.length) {G__14640__a[G__14640__i] = arguments[G__14640__i + 2]; ++G__14640__i;}
G__14639 = new cljs.core.IndexedSeq(G__14640__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__14639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__14649__delegate = function (array,idx,idx2,idxv){
var G__14645 = aset;
var G__14646 = (array[idx]);
var G__14647 = idx2;
var G__14648 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__14645,G__14646,G__14647,G__14648) : cljs.core.apply.call(null,G__14645,G__14646,G__14647,G__14648));
};
var G__14649 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__14650__i = 0, G__14650__a = new Array(arguments.length -  3);
while (G__14650__i < G__14650__a.length) {G__14650__a[G__14650__i] = arguments[G__14650__i + 3]; ++G__14650__i;}
  idxv = new cljs.core.IndexedSeq(G__14650__a,0);
} 
return G__14649__delegate.call(this,array,idx,idx2,idxv);};
G__14649.cljs$lang$maxFixedArity = 3;
G__14649.cljs$lang$applyTo = (function (arglist__14651){
var array = cljs.core.first(arglist__14651);
arglist__14651 = cljs.core.next(arglist__14651);
var idx = cljs.core.first(arglist__14651);
arglist__14651 = cljs.core.next(arglist__14651);
var idx2 = cljs.core.first(arglist__14651);
var idxv = cljs.core.rest(arglist__14651);
return G__14649__delegate(array,idx,idx2,idxv);
});
G__14649.cljs$core$IFn$_invoke$arity$variadic = G__14649__delegate;
return G__14649;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__14652 = null;
if (arguments.length > 3) {
var G__14653__i = 0, G__14653__a = new Array(arguments.length -  3);
while (G__14653__i < G__14653__a.length) {G__14653__a[G__14653__i] = arguments[G__14653__i + 3]; ++G__14653__i;}
G__14652 = new cljs.core.IndexedSeq(G__14653__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__14652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__14659 = (function (a,x){
a.push(x);

return a;
});
var G__14660 = [];
var G__14661 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14659,G__14660,G__14661) : cljs.core.reduce.call(null,G__14659,G__14660,G__14661));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__14662__i = 0, G__14662__a = new Array(arguments.length -  2);
while (G__14662__i < G__14662__a.length) {G__14662__a[G__14662__i] = arguments[G__14662__i + 2]; ++G__14662__i;}
  args = new cljs.core.IndexedSeq(G__14662__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__14663){
var obj = cljs.core.first(arglist__14663);
arglist__14663 = cljs.core.next(arglist__14663);
var s = cljs.core.first(arglist__14663);
var args = cljs.core.rest(arglist__14663);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj14665 = {};
return obj14665;
})();


cljs.core.IFn = (function (){var obj14667 = {};
return obj14667;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14713 = x__4227__auto__;
return goog.typeOf(G__14713);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14715 = x__4227__auto__;
return goog.typeOf(G__14715);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14717 = x__4227__auto__;
return goog.typeOf(G__14717);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14719 = x__4227__auto__;
return goog.typeOf(G__14719);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14721 = x__4227__auto__;
return goog.typeOf(G__14721);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14723 = x__4227__auto__;
return goog.typeOf(G__14723);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14725 = x__4227__auto__;
return goog.typeOf(G__14725);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14727 = x__4227__auto__;
return goog.typeOf(G__14727);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14729 = x__4227__auto__;
return goog.typeOf(G__14729);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14731 = x__4227__auto__;
return goog.typeOf(G__14731);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14733 = x__4227__auto__;
return goog.typeOf(G__14733);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14735 = x__4227__auto__;
return goog.typeOf(G__14735);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14737 = x__4227__auto__;
return goog.typeOf(G__14737);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14739 = x__4227__auto__;
return goog.typeOf(G__14739);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14741 = x__4227__auto__;
return goog.typeOf(G__14741);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14743 = x__4227__auto__;
return goog.typeOf(G__14743);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14745 = x__4227__auto__;
return goog.typeOf(G__14745);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14747 = x__4227__auto__;
return goog.typeOf(G__14747);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14749 = x__4227__auto__;
return goog.typeOf(G__14749);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14751 = x__4227__auto__;
return goog.typeOf(G__14751);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14753 = x__4227__auto__;
return goog.typeOf(G__14753);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._invoke[(function (){var G__14755 = x__4227__auto__;
return goog.typeOf(G__14755);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._invoke["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj14757 = {};
return obj14757;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3571__auto__ = value;
if(and__3571__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3571__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4227__auto__ = (((value == null))?null:value);
return (function (){var or__3583__auto__ = (cljs.core._clone[(function (){var G__14761 = x__4227__auto__;
return goog.typeOf(G__14761);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._clone["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj14763 = {};
return obj14763;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._count[(function (){var G__14767 = x__4227__auto__;
return goog.typeOf(G__14767);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._count["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj14769 = {};
return obj14769;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._empty[(function (){var G__14773 = x__4227__auto__;
return goog.typeOf(G__14773);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._empty["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj14775 = {};
return obj14775;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._conj[(function (){var G__14779 = x__4227__auto__;
return goog.typeOf(G__14779);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._conj["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj14781 = {};
return obj14781;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._nth[(function (){var G__14787 = x__4227__auto__;
return goog.typeOf(G__14787);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._nth["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._nth[(function (){var G__14789 = x__4227__auto__;
return goog.typeOf(G__14789);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._nth["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj14791 = {};
return obj14791;
})();


cljs.core.ISeq = (function (){var obj14793 = {};
return obj14793;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._first[(function (){var G__14797 = x__4227__auto__;
return goog.typeOf(G__14797);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._first["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._rest[(function (){var G__14801 = x__4227__auto__;
return goog.typeOf(G__14801);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._rest["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj14803 = {};
return obj14803;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._next[(function (){var G__14807 = x__4227__auto__;
return goog.typeOf(G__14807);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._next["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj14809 = {};
return obj14809;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._lookup[(function (){var G__14815 = x__4227__auto__;
return goog.typeOf(G__14815);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._lookup["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._lookup[(function (){var G__14817 = x__4227__auto__;
return goog.typeOf(G__14817);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._lookup["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj14819 = {};
return obj14819;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__14823 = x__4227__auto__;
return goog.typeOf(G__14823);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._assoc[(function (){var G__14827 = x__4227__auto__;
return goog.typeOf(G__14827);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._assoc["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj14829 = {};
return obj14829;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._dissoc[(function (){var G__14833 = x__4227__auto__;
return goog.typeOf(G__14833);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj14835 = {};
return obj14835;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._key[(function (){var G__14839 = x__4227__auto__;
return goog.typeOf(G__14839);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._key["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._val[(function (){var G__14843 = x__4227__auto__;
return goog.typeOf(G__14843);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._val["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj14845 = {};
return obj14845;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._disjoin[(function (){var G__14849 = x__4227__auto__;
return goog.typeOf(G__14849);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj14851 = {};
return obj14851;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._peek[(function (){var G__14855 = x__4227__auto__;
return goog.typeOf(G__14855);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._peek["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._pop[(function (){var G__14859 = x__4227__auto__;
return goog.typeOf(G__14859);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._pop["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj14861 = {};
return obj14861;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._assoc_n[(function (){var G__14865 = x__4227__auto__;
return goog.typeOf(G__14865);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj14867 = {};
return obj14867;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._deref[(function (){var G__14871 = x__4227__auto__;
return goog.typeOf(G__14871);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._deref["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj14873 = {};
return obj14873;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._deref_with_timeout[(function (){var G__14877 = x__4227__auto__;
return goog.typeOf(G__14877);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj14879 = {};
return obj14879;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._meta[(function (){var G__14883 = x__4227__auto__;
return goog.typeOf(G__14883);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._meta["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj14885 = {};
return obj14885;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._with_meta[(function (){var G__14889 = x__4227__auto__;
return goog.typeOf(G__14889);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj14891 = {};
return obj14891;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._reduce[(function (){var G__14897 = x__4227__auto__;
return goog.typeOf(G__14897);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._reduce["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._reduce[(function (){var G__14899 = x__4227__auto__;
return goog.typeOf(G__14899);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._reduce["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj14901 = {};
return obj14901;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._kv_reduce[(function (){var G__14905 = x__4227__auto__;
return goog.typeOf(G__14905);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj14907 = {};
return obj14907;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._equiv[(function (){var G__14911 = x__4227__auto__;
return goog.typeOf(G__14911);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._equiv["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj14913 = {};
return obj14913;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._hash[(function (){var G__14917 = x__4227__auto__;
return goog.typeOf(G__14917);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._hash["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj14919 = {};
return obj14919;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._seq[(function (){var G__14923 = x__4227__auto__;
return goog.typeOf(G__14923);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._seq["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj14925 = {};
return obj14925;
})();


cljs.core.IList = (function (){var obj14927 = {};
return obj14927;
})();


cljs.core.IRecord = (function (){var obj14929 = {};
return obj14929;
})();


cljs.core.IReversible = (function (){var obj14931 = {};
return obj14931;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._rseq[(function (){var G__14935 = x__4227__auto__;
return goog.typeOf(G__14935);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._rseq["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj14937 = {};
return obj14937;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._sorted_seq[(function (){var G__14941 = x__4227__auto__;
return goog.typeOf(G__14941);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._sorted_seq_from[(function (){var G__14945 = x__4227__auto__;
return goog.typeOf(G__14945);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._entry_key[(function (){var G__14949 = x__4227__auto__;
return goog.typeOf(G__14949);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._comparator[(function (){var G__14953 = x__4227__auto__;
return goog.typeOf(G__14953);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._comparator["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj14955 = {};
return obj14955;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3571__auto__ = writer;
if(and__3571__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3571__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4227__auto__ = (((writer == null))?null:writer);
return (function (){var or__3583__auto__ = (cljs.core._write[(function (){var G__14959 = x__4227__auto__;
return goog.typeOf(G__14959);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._write["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3571__auto__ = writer;
if(and__3571__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3571__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4227__auto__ = (((writer == null))?null:writer);
return (function (){var or__3583__auto__ = (cljs.core._flush[(function (){var G__14963 = x__4227__auto__;
return goog.typeOf(G__14963);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._flush["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj14965 = {};
return obj14965;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._pr_writer[(function (){var G__14969 = x__4227__auto__;
return goog.typeOf(G__14969);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj14971 = {};
return obj14971;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3571__auto__ = d;
if(and__3571__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3571__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4227__auto__ = (((d == null))?null:d);
return (function (){var or__3583__auto__ = (cljs.core._realized_QMARK_[(function (){var G__14975 = x__4227__auto__;
return goog.typeOf(G__14975);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj14977 = {};
return obj14977;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._notify_watches[(function (){var G__14981 = x__4227__auto__;
return goog.typeOf(G__14981);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._add_watch[(function (){var G__14985 = x__4227__auto__;
return goog.typeOf(G__14985);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3571__auto__ = this$;
if(and__3571__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3571__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4227__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3583__auto__ = (cljs.core._remove_watch[(function (){var G__14989 = x__4227__auto__;
return goog.typeOf(G__14989);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj14991 = {};
return obj14991;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._as_transient[(function (){var G__14995 = x__4227__auto__;
return goog.typeOf(G__14995);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj14997 = {};
return obj14997;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._conj_BANG_[(function (){var G__15001 = x__4227__auto__;
return goog.typeOf(G__15001);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._persistent_BANG_[(function (){var G__15005 = x__4227__auto__;
return goog.typeOf(G__15005);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj15007 = {};
return obj15007;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._assoc_BANG_[(function (){var G__15011 = x__4227__auto__;
return goog.typeOf(G__15011);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj15013 = {};
return obj15013;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__15017 = x__4227__auto__;
return goog.typeOf(G__15017);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj15019 = {};
return obj15019;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__15023 = x__4227__auto__;
return goog.typeOf(G__15023);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._pop_BANG_[(function (){var G__15027 = x__4227__auto__;
return goog.typeOf(G__15027);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj15029 = {};
return obj15029;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3571__auto__ = tcoll;
if(and__3571__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4227__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3583__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__15033 = x__4227__auto__;
return goog.typeOf(G__15033);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj15035 = {};
return obj15035;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._compare[(function (){var G__15039 = x__4227__auto__;
return goog.typeOf(G__15039);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._compare["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj15041 = {};
return obj15041;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._drop_first[(function (){var G__15045 = x__4227__auto__;
return goog.typeOf(G__15045);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj15047 = {};
return obj15047;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._chunked_first[(function (){var G__15051 = x__4227__auto__;
return goog.typeOf(G__15051);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._chunked_rest[(function (){var G__15055 = x__4227__auto__;
return goog.typeOf(G__15055);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj15057 = {};
return obj15057;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._chunked_next[(function (){var G__15061 = x__4227__auto__;
return goog.typeOf(G__15061);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj15063 = {};
return obj15063;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._name[(function (){var G__15067 = x__4227__auto__;
return goog.typeOf(G__15067);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._name["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._namespace[(function (){var G__15071 = x__4227__auto__;
return goog.typeOf(G__15071);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._namespace["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj15073 = {};
return obj15073;
})();


cljs.core.IReset = (function (){var obj15075 = {};
return obj15075;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._reset_BANG_[(function (){var G__15079 = x__4227__auto__;
return goog.typeOf(G__15079);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj15081 = {};
return obj15081;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._swap_BANG_[(function (){var G__15091 = x__4227__auto__;
return goog.typeOf(G__15091);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._swap_BANG_[(function (){var G__15093 = x__4227__auto__;
return goog.typeOf(G__15093);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._swap_BANG_[(function (){var G__15095 = x__4227__auto__;
return goog.typeOf(G__15095);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._swap_BANG_[(function (){var G__15097 = x__4227__auto__;
return goog.typeOf(G__15097);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj15099 = {};
return obj15099;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3571__auto__ = o;
if(and__3571__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3571__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4227__auto__ = (((o == null))?null:o);
return (function (){var or__3583__auto__ = (cljs.core._vreset_BANG_[(function (){var G__15103 = x__4227__auto__;
return goog.typeOf(G__15103);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj15105 = {};
return obj15105;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3571__auto__ = coll;
if(and__3571__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3571__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4227__auto__ = (((coll == null))?null:coll);
return (function (){var or__3583__auto__ = (cljs.core._iterator[(function (){var G__15109 = x__4227__auto__;
return goog.typeOf(G__15109);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._iterator["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__15112 = (4294967295);
var G__15113 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__15112,G__15113) : Math.imul.call(null,G__15112,G__15113));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__15116 = a;
var G__15117 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__15116,G__15117) : Math.imul.call(null,G__15116,G__15117));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__15118 = (i + (2));
var G__15119 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__15118;
h1 = G__15119;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj15121 = {};
return obj15121;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__15122 = (i + (1));
var G__15123 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__15122;
hash = G__15123;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj15127 = {};
return obj15127;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__15130 = o;
if(G__15130){
var bit__4257__auto__ = (G__15130.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4257__auto__) || (G__15130.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__15131 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15131) : Math.floor.call(null,G__15131));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3571__auto__ = cljs.core.not(a.ns);
if(and__3571__auto__){
return b.ns;
} else {
return and__3571__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__15138 = a.ns;
var G__15139 = b.ns;
return goog.array.defaultCompare(G__15138,G__15139);
})();
if(((0) === nsc)){
var G__15140 = a.name;
var G__15141 = b.name;
return goog.array.defaultCompare(G__15140,G__15141);
} else {
return nsc;
}
}
} else {
var G__15142 = a.name;
var G__15143 = b.name;
return goog.array.defaultCompare(G__15142,G__15143);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4004__auto__ = self__._hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__15145 = null;
var G__15145__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__15145__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__15145 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__15145__2.call(this,self__,coll);
case 3:
return G__15145__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15145.cljs$core$IFn$_invoke$arity$2 = G__15145__2;
G__15145.cljs$core$IFn$_invoke$arity$3 = G__15145__3;
return G__15145;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args15144){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15144)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__15193 = null;
var G__15193__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__15193__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__15193__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__15193__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__15193__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__15193__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__15193__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__15193__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__15193__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__15193__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__15193__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__15193__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__15193__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__15193__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__15193__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__15193__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__15193__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__15193__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__15193__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__15193__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__15193__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__15193__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15149 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__15150 = a;
var G__15151 = b;
var G__15152 = c;
var G__15153 = d;
var G__15154 = e;
var G__15155 = f;
var G__15156 = g;
var G__15157 = h;
var G__15158 = i;
var G__15159 = j;
var G__15160 = k;
var G__15161 = l;
var G__15162 = m;
var G__15163 = n;
var G__15164 = o;
var G__15165 = p;
var G__15166 = q;
var G__15167 = r;
var G__15168 = s;
var G__15169 = t;
var G__15170 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166,G__15167,G__15168,G__15169,G__15170) : cljs.core.apply.call(null,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166,G__15167,G__15168,G__15169,G__15170));
});
G__15193 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15193__1.call(this,self__);
case 2:
return G__15193__2.call(this,self__,a);
case 3:
return G__15193__3.call(this,self__,a,b);
case 4:
return G__15193__4.call(this,self__,a,b,c);
case 5:
return G__15193__5.call(this,self__,a,b,c,d);
case 6:
return G__15193__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15193__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15193__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15193__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15193__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15193__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15193__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15193__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15193__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15193__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15193__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15193__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15193__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15193__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15193__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15193__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15193__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15193.cljs$core$IFn$_invoke$arity$1 = G__15193__1;
G__15193.cljs$core$IFn$_invoke$arity$2 = G__15193__2;
G__15193.cljs$core$IFn$_invoke$arity$3 = G__15193__3;
G__15193.cljs$core$IFn$_invoke$arity$4 = G__15193__4;
G__15193.cljs$core$IFn$_invoke$arity$5 = G__15193__5;
G__15193.cljs$core$IFn$_invoke$arity$6 = G__15193__6;
G__15193.cljs$core$IFn$_invoke$arity$7 = G__15193__7;
G__15193.cljs$core$IFn$_invoke$arity$8 = G__15193__8;
G__15193.cljs$core$IFn$_invoke$arity$9 = G__15193__9;
G__15193.cljs$core$IFn$_invoke$arity$10 = G__15193__10;
G__15193.cljs$core$IFn$_invoke$arity$11 = G__15193__11;
G__15193.cljs$core$IFn$_invoke$arity$12 = G__15193__12;
G__15193.cljs$core$IFn$_invoke$arity$13 = G__15193__13;
G__15193.cljs$core$IFn$_invoke$arity$14 = G__15193__14;
G__15193.cljs$core$IFn$_invoke$arity$15 = G__15193__15;
G__15193.cljs$core$IFn$_invoke$arity$16 = G__15193__16;
G__15193.cljs$core$IFn$_invoke$arity$17 = G__15193__17;
G__15193.cljs$core$IFn$_invoke$arity$18 = G__15193__18;
G__15193.cljs$core$IFn$_invoke$arity$19 = G__15193__19;
G__15193.cljs$core$IFn$_invoke$arity$20 = G__15193__20;
G__15193.cljs$core$IFn$_invoke$arity$21 = G__15193__21;
G__15193.cljs$core$IFn$_invoke$arity$22 = G__15193__22;
return G__15193;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args15148){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15148)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__15171 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__15172 = a;
var G__15173 = b;
var G__15174 = c;
var G__15175 = d;
var G__15176 = e;
var G__15177 = f;
var G__15178 = g;
var G__15179 = h;
var G__15180 = i;
var G__15181 = j;
var G__15182 = k;
var G__15183 = l;
var G__15184 = m;
var G__15185 = n;
var G__15186 = o;
var G__15187 = p;
var G__15188 = q;
var G__15189 = r;
var G__15190 = s;
var G__15191 = t;
var G__15192 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192) : cljs.core.apply.call(null,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__15195 = x;
if(G__15195){
var bit__4264__auto__ = null;
if(cljs.core.truth_((function (){var or__3583__auto__ = bit__4264__auto__;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return G__15195.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__15195.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__15195);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__15195);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__15197 = value;
if(G__15197){
var bit__4264__auto__ = (G__15197.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4264__auto__) || (G__15197.cljs$core$ICloneable$)){
return true;
} else {
if((!G__15197.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__15197);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__15197);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15199 = coll;
if(G__15199){
var bit__4257__auto__ = (G__15199.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4257__auto__) || (G__15199.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15201 = coll;
if(G__15201){
var bit__4257__auto__ = (G__15201.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4257__auto__) || (G__15201.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__15203 = coll;
if(G__15203){
var bit__4257__auto__ = (G__15203.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4257__auto__) || (G__15203.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15205 = coll;
if(G__15205){
var bit__4257__auto__ = (G__15205.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4257__auto__) || (G__15205.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__15210__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__15211 = y;
var G__15212 = cljs.core.first(more);
var G__15213 = cljs.core.next(more);
x = G__15211;
y = G__15212;
more = G__15213;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__15210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15214__i = 0, G__15214__a = new Array(arguments.length -  2);
while (G__15214__i < G__15214__a.length) {G__15214__a[G__15214__i] = arguments[G__15214__i + 2]; ++G__15214__i;}
  more = new cljs.core.IndexedSeq(G__15214__a,0);
} 
return G__15210__delegate.call(this,x,y,more);};
G__15210.cljs$lang$maxFixedArity = 2;
G__15210.cljs$lang$applyTo = (function (arglist__15215){
var x = cljs.core.first(arglist__15215);
arglist__15215 = cljs.core.next(arglist__15215);
var y = cljs.core.first(arglist__15215);
var more = cljs.core.rest(arglist__15215);
return G__15210__delegate(x,y,more);
});
G__15210.cljs$core$IFn$_invoke$arity$variadic = G__15210__delegate;
return G__15210;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__15216 = null;
if (arguments.length > 2) {
var G__15217__i = 0, G__15217__a = new Array(arguments.length -  2);
while (G__15217__i < G__15217__a.length) {G__15217__a[G__15217__i] = arguments[G__15217__i + 2]; ++G__15217__i;}
G__15216 = new cljs.core.IndexedSeq(G__15217__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__15218 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__15218) : cljs.core.es6_iterator_seq.call(null,G__15218));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__15219 = (n + (1));
var G__15220 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__15221 = cljs.core.next(coll__$1);
n = G__15219;
hash_code = G__15220;
coll__$1 = G__15221;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__15222 = (n + (1));
var G__15223 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__15224 = cljs.core.next(coll__$1);
n = G__15222;
hash_code = G__15223;
coll__$1 = G__15224;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__15225 = o;
return goog.getUid(G__15225);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__15227 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15227) : cljs.core.deref.call(null,G__15227));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__15234 = val;
var G__15235 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15234,G__15235) : f.call(null,G__15234,G__15235));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15240 = nval;
var G__15241 = (n + (1));
val = G__15240;
n = G__15241;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__15236 = val__$1;
var G__15237 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15236,G__15237) : f.call(null,G__15236,G__15237));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15242 = nval;
var G__15243 = (n + (1));
val__$1 = G__15242;
n = G__15243;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__15238 = val__$1;
var G__15239 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15238,G__15239) : f.call(null,G__15238,G__15239));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15244 = nval;
var G__15245 = (n + (1));
val__$1 = G__15244;
n = G__15245;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__15252 = val;
var G__15253 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15252,G__15253) : f.call(null,G__15252,G__15253));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15258 = nval;
var G__15259 = (n + (1));
val = G__15258;
n = G__15259;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__15254 = val__$1;
var G__15255 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15254,G__15255) : f.call(null,G__15254,G__15255));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15260 = nval;
var G__15261 = (n + (1));
val__$1 = G__15260;
n = G__15261;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__15256 = val__$1;
var G__15257 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15256,G__15257) : f.call(null,G__15256,G__15257));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15262 = nval;
var G__15263 = (n + (1));
val__$1 = G__15262;
n = G__15263;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__15265 = x;
if(G__15265){
var bit__4264__auto__ = (G__15265.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4264__auto__) || (G__15265.cljs$core$ICounted$)){
return true;
} else {
if((!G__15265.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__15265);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__15265);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__15267 = x;
if(G__15267){
var bit__4264__auto__ = (G__15267.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4264__auto__) || (G__15267.cljs$core$IIndexed$)){
return true;
} else {
if((!G__15267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__15267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__15267);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__15268 = coll__$1;
var G__15269 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__15268,G__15269) : cljs.core.equiv_sequential.call(null,G__15268,G__15269));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15270 = o;
var G__15271 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__15270,G__15271) : cljs.core.cons.call(null,G__15270,G__15271));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__15274 = coll__$1;
var G__15275 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__15274,G__15275) : cljs.core.equiv_sequential.call(null,G__15274,G__15275));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15276 = cljs.core.List.EMPTY;
var G__15277 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__15276,G__15277) : cljs.core.with_meta.call(null,G__15276,G__15277));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__15278 = f;
var G__15279 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__15278,G__15279) : cljs.core.seq_reduce.call(null,G__15278,G__15279));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__15280 = f;
var G__15281 = start;
var G__15282 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__15280,G__15281,G__15282) : cljs.core.seq_reduce.call(null,G__15280,G__15281,G__15282));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15283 = o;
var G__15284 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__15283,G__15284) : cljs.core.cons.call(null,G__15283,G__15284));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__15285 = sn;
s = G__15285;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__15290__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__15291 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__15292 = cljs.core.first(xs);
var G__15293 = cljs.core.next(xs);
coll = G__15291;
x = G__15292;
xs = G__15293;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__15290 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__15294__i = 0, G__15294__a = new Array(arguments.length -  2);
while (G__15294__i < G__15294__a.length) {G__15294__a[G__15294__i] = arguments[G__15294__i + 2]; ++G__15294__i;}
  xs = new cljs.core.IndexedSeq(G__15294__a,0);
} 
return G__15290__delegate.call(this,coll,x,xs);};
G__15290.cljs$lang$maxFixedArity = 2;
G__15290.cljs$lang$applyTo = (function (arglist__15295){
var coll = cljs.core.first(arglist__15295);
arglist__15295 = cljs.core.next(arglist__15295);
var x = cljs.core.first(arglist__15295);
var xs = cljs.core.rest(arglist__15295);
return G__15290__delegate(coll,x,xs);
});
G__15290.cljs$core$IFn$_invoke$arity$variadic = G__15290__delegate;
return G__15290;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__15296 = null;
if (arguments.length > 2) {
var G__15297__i = 0, G__15297__a = new Array(arguments.length -  2);
while (G__15297__i < G__15297__a.length) {G__15297__a[G__15297__i] = arguments[G__15297__i + 2]; ++G__15297__i;}
G__15296 = new cljs.core.IndexedSeq(G__15297__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__15296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__15298 = cljs.core.next(s);
var G__15299 = (acc + (1));
s = G__15298;
acc = G__15299;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__15301 = coll;
if(G__15301){
var bit__4257__auto__ = (G__15301.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4257__auto__) || (G__15301.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__15302 = cljs.core.next(coll);
var G__15303 = (n - (1));
coll = G__15302;
n = G__15303;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__15304 = cljs.core.next(coll);
var G__15305 = (n - (1));
var G__15306 = not_found;
coll = G__15304;
n = G__15305;
not_found = G__15306;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__15311 = coll;
if(G__15311){
var bit__4257__auto__ = (G__15311.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4257__auto__) || (G__15311.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__15312 = coll;
if(G__15312){
var bit__4264__auto__ = (G__15312.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4264__auto__) || (G__15312.cljs$core$ISeq$)){
return true;
} else {
if((!G__15312.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15312);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15312);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__15313 = coll;
if(G__15313){
var bit__4257__auto__ = (G__15313.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4257__auto__) || (G__15313.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__15314 = coll;
if(G__15314){
var bit__4264__auto__ = (G__15314.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4264__auto__) || (G__15314.cljs$core$ISeq$)){
return true;
} else {
if((!G__15314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15314);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__15315 = (n__$1 - (1));
var G__15316 = cljs.core.rest(xs);
n__$1 = G__15315;
xs = G__15316;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__15319 = o;
if(G__15319){
var bit__4257__auto__ = (G__15319.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4257__auto__) || (G__15319.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__15320 = o;
if(G__15320){
var bit__4257__auto__ = (G__15320.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4257__auto__) || (G__15320.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__15324__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__15325 = ret;
var G__15326 = cljs.core.first(kvs);
var G__15327 = cljs.core.second(kvs);
var G__15328 = cljs.core.nnext(kvs);
coll = G__15325;
k = G__15326;
v = G__15327;
kvs = G__15328;
continue;
} else {
return ret;
}
break;
}
};
var G__15324 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__15329__i = 0, G__15329__a = new Array(arguments.length -  3);
while (G__15329__i < G__15329__a.length) {G__15329__a[G__15329__i] = arguments[G__15329__i + 3]; ++G__15329__i;}
  kvs = new cljs.core.IndexedSeq(G__15329__a,0);
} 
return G__15324__delegate.call(this,coll,k,v,kvs);};
G__15324.cljs$lang$maxFixedArity = 3;
G__15324.cljs$lang$applyTo = (function (arglist__15330){
var coll = cljs.core.first(arglist__15330);
arglist__15330 = cljs.core.next(arglist__15330);
var k = cljs.core.first(arglist__15330);
arglist__15330 = cljs.core.next(arglist__15330);
var v = cljs.core.first(arglist__15330);
var kvs = cljs.core.rest(arglist__15330);
return G__15324__delegate(coll,k,v,kvs);
});
G__15324.cljs$core$IFn$_invoke$arity$variadic = G__15324__delegate;
return G__15324;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__15331 = null;
if (arguments.length > 3) {
var G__15332__i = 0, G__15332__a = new Array(arguments.length -  3);
while (G__15332__i < G__15332__a.length) {G__15332__a[G__15332__i] = arguments[G__15332__i + 3]; ++G__15332__i;}
G__15331 = new cljs.core.IndexedSeq(G__15332__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__15331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__15335__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__15336 = ret;
var G__15337 = cljs.core.first(ks);
var G__15338 = cljs.core.next(ks);
coll = G__15336;
k = G__15337;
ks = G__15338;
continue;
} else {
return ret;
}
}
break;
}
};
var G__15335 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__15339__i = 0, G__15339__a = new Array(arguments.length -  2);
while (G__15339__i < G__15339__a.length) {G__15339__a[G__15339__i] = arguments[G__15339__i + 2]; ++G__15339__i;}
  ks = new cljs.core.IndexedSeq(G__15339__a,0);
} 
return G__15335__delegate.call(this,coll,k,ks);};
G__15335.cljs$lang$maxFixedArity = 2;
G__15335.cljs$lang$applyTo = (function (arglist__15340){
var coll = cljs.core.first(arglist__15340);
arglist__15340 = cljs.core.next(arglist__15340);
var k = cljs.core.first(arglist__15340);
var ks = cljs.core.rest(arglist__15340);
return G__15335__delegate(coll,k,ks);
});
G__15335.cljs$core$IFn$_invoke$arity$variadic = G__15335__delegate;
return G__15335;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__15341 = null;
if (arguments.length > 2) {
var G__15342__i = 0, G__15342__a = new Array(arguments.length -  2);
while (G__15342__i < G__15342__a.length) {G__15342__a[G__15342__i] = arguments[G__15342__i + 2]; ++G__15342__i;}
G__15341 = new cljs.core.IndexedSeq(G__15342__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__15341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3583__auto__ = (function (){var G__15347 = f;
return goog.isFunction(G__15347);
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var G__15348 = f;
if(G__15348){
var bit__4264__auto__ = null;
if(cljs.core.truth_((function (){var or__3583__auto____$1 = bit__4264__auto__;
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
return G__15348.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__15348.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__15348);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__15348);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__15814 = null;
var G__15814__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__15814__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15350 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__15350) : self__.afn.call(null,G__15350));
});
var G__15814__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15351 = a;
var G__15352 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__15351,G__15352) : self__.afn.call(null,G__15351,G__15352));
});
var G__15814__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15353 = a;
var G__15354 = b;
var G__15355 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__15353,G__15354,G__15355) : self__.afn.call(null,G__15353,G__15354,G__15355));
});
var G__15814__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15356 = a;
var G__15357 = b;
var G__15358 = c;
var G__15359 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__15356,G__15357,G__15358,G__15359) : self__.afn.call(null,G__15356,G__15357,G__15358,G__15359));
});
var G__15814__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15360 = a;
var G__15361 = b;
var G__15362 = c;
var G__15363 = d;
var G__15364 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__15360,G__15361,G__15362,G__15363,G__15364) : self__.afn.call(null,G__15360,G__15361,G__15362,G__15363,G__15364));
});
var G__15814__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15365 = a;
var G__15366 = b;
var G__15367 = c;
var G__15368 = d;
var G__15369 = e;
var G__15370 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__15365,G__15366,G__15367,G__15368,G__15369,G__15370) : self__.afn.call(null,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370));
});
var G__15814__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15371 = a;
var G__15372 = b;
var G__15373 = c;
var G__15374 = d;
var G__15375 = e;
var G__15376 = f;
var G__15377 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377) : self__.afn.call(null,G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377));
});
var G__15814__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15378 = a;
var G__15379 = b;
var G__15380 = c;
var G__15381 = d;
var G__15382 = e;
var G__15383 = f;
var G__15384 = g;
var G__15385 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385) : self__.afn.call(null,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385));
});
var G__15814__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15386 = a;
var G__15387 = b;
var G__15388 = c;
var G__15389 = d;
var G__15390 = e;
var G__15391 = f;
var G__15392 = g;
var G__15393 = h;
var G__15394 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394) : self__.afn.call(null,G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394));
});
var G__15814__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15395 = a;
var G__15396 = b;
var G__15397 = c;
var G__15398 = d;
var G__15399 = e;
var G__15400 = f;
var G__15401 = g;
var G__15402 = h;
var G__15403 = i;
var G__15404 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404) : self__.afn.call(null,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404));
});
var G__15814__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15405 = a;
var G__15406 = b;
var G__15407 = c;
var G__15408 = d;
var G__15409 = e;
var G__15410 = f;
var G__15411 = g;
var G__15412 = h;
var G__15413 = i;
var G__15414 = j;
var G__15415 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415) : self__.afn.call(null,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415));
});
var G__15814__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15416 = a;
var G__15417 = b;
var G__15418 = c;
var G__15419 = d;
var G__15420 = e;
var G__15421 = f;
var G__15422 = g;
var G__15423 = h;
var G__15424 = i;
var G__15425 = j;
var G__15426 = k;
var G__15427 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427) : self__.afn.call(null,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427));
});
var G__15814__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15428 = a;
var G__15429 = b;
var G__15430 = c;
var G__15431 = d;
var G__15432 = e;
var G__15433 = f;
var G__15434 = g;
var G__15435 = h;
var G__15436 = i;
var G__15437 = j;
var G__15438 = k;
var G__15439 = l;
var G__15440 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440) : self__.afn.call(null,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440));
});
var G__15814__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15441 = a;
var G__15442 = b;
var G__15443 = c;
var G__15444 = d;
var G__15445 = e;
var G__15446 = f;
var G__15447 = g;
var G__15448 = h;
var G__15449 = i;
var G__15450 = j;
var G__15451 = k;
var G__15452 = l;
var G__15453 = m;
var G__15454 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__15441,G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454) : self__.afn.call(null,G__15441,G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454));
});
var G__15814__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15455 = a;
var G__15456 = b;
var G__15457 = c;
var G__15458 = d;
var G__15459 = e;
var G__15460 = f;
var G__15461 = g;
var G__15462 = h;
var G__15463 = i;
var G__15464 = j;
var G__15465 = k;
var G__15466 = l;
var G__15467 = m;
var G__15468 = n;
var G__15469 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__15455,G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469) : self__.afn.call(null,G__15455,G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469));
});
var G__15814__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15470 = a;
var G__15471 = b;
var G__15472 = c;
var G__15473 = d;
var G__15474 = e;
var G__15475 = f;
var G__15476 = g;
var G__15477 = h;
var G__15478 = i;
var G__15479 = j;
var G__15480 = k;
var G__15481 = l;
var G__15482 = m;
var G__15483 = n;
var G__15484 = o;
var G__15485 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__15470,G__15471,G__15472,G__15473,G__15474,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485) : self__.afn.call(null,G__15470,G__15471,G__15472,G__15473,G__15474,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485));
});
var G__15814__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15486 = a;
var G__15487 = b;
var G__15488 = c;
var G__15489 = d;
var G__15490 = e;
var G__15491 = f;
var G__15492 = g;
var G__15493 = h;
var G__15494 = i;
var G__15495 = j;
var G__15496 = k;
var G__15497 = l;
var G__15498 = m;
var G__15499 = n;
var G__15500 = o;
var G__15501 = p;
var G__15502 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__15486,G__15487,G__15488,G__15489,G__15490,G__15491,G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502) : self__.afn.call(null,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491,G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502));
});
var G__15814__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15503 = a;
var G__15504 = b;
var G__15505 = c;
var G__15506 = d;
var G__15507 = e;
var G__15508 = f;
var G__15509 = g;
var G__15510 = h;
var G__15511 = i;
var G__15512 = j;
var G__15513 = k;
var G__15514 = l;
var G__15515 = m;
var G__15516 = n;
var G__15517 = o;
var G__15518 = p;
var G__15519 = q;
var G__15520 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509,G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520) : self__.afn.call(null,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509,G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520));
});
var G__15814__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15521 = a;
var G__15522 = b;
var G__15523 = c;
var G__15524 = d;
var G__15525 = e;
var G__15526 = f;
var G__15527 = g;
var G__15528 = h;
var G__15529 = i;
var G__15530 = j;
var G__15531 = k;
var G__15532 = l;
var G__15533 = m;
var G__15534 = n;
var G__15535 = o;
var G__15536 = p;
var G__15537 = q;
var G__15538 = r;
var G__15539 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__15521,G__15522,G__15523,G__15524,G__15525,G__15526,G__15527,G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539) : self__.afn.call(null,G__15521,G__15522,G__15523,G__15524,G__15525,G__15526,G__15527,G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539));
});
var G__15814__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15540 = a;
var G__15541 = b;
var G__15542 = c;
var G__15543 = d;
var G__15544 = e;
var G__15545 = f;
var G__15546 = g;
var G__15547 = h;
var G__15548 = i;
var G__15549 = j;
var G__15550 = k;
var G__15551 = l;
var G__15552 = m;
var G__15553 = n;
var G__15554 = o;
var G__15555 = p;
var G__15556 = q;
var G__15557 = r;
var G__15558 = s;
var G__15559 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__15540,G__15541,G__15542,G__15543,G__15544,G__15545,G__15546,G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559) : self__.afn.call(null,G__15540,G__15541,G__15542,G__15543,G__15544,G__15545,G__15546,G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559));
});
var G__15814__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15560 = self__.afn;
var G__15561 = a;
var G__15562 = b;
var G__15563 = c;
var G__15564 = d;
var G__15565 = e;
var G__15566 = f;
var G__15567 = g;
var G__15568 = h;
var G__15569 = i;
var G__15570 = j;
var G__15571 = k;
var G__15572 = l;
var G__15573 = m;
var G__15574 = n;
var G__15575 = o;
var G__15576 = p;
var G__15577 = q;
var G__15578 = r;
var G__15579 = s;
var G__15580 = t;
var G__15581 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15560,G__15561,G__15562,G__15563,G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580,G__15581) : cljs.core.apply.call(null,G__15560,G__15561,G__15562,G__15563,G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580,G__15581));
});
G__15814 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15814__1.call(this,self__);
case 2:
return G__15814__2.call(this,self__,a);
case 3:
return G__15814__3.call(this,self__,a,b);
case 4:
return G__15814__4.call(this,self__,a,b,c);
case 5:
return G__15814__5.call(this,self__,a,b,c,d);
case 6:
return G__15814__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15814__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15814__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15814__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15814__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15814__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15814__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15814__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15814__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15814__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15814__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15814__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15814__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15814__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15814__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15814__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15814__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15814.cljs$core$IFn$_invoke$arity$1 = G__15814__1;
G__15814.cljs$core$IFn$_invoke$arity$2 = G__15814__2;
G__15814.cljs$core$IFn$_invoke$arity$3 = G__15814__3;
G__15814.cljs$core$IFn$_invoke$arity$4 = G__15814__4;
G__15814.cljs$core$IFn$_invoke$arity$5 = G__15814__5;
G__15814.cljs$core$IFn$_invoke$arity$6 = G__15814__6;
G__15814.cljs$core$IFn$_invoke$arity$7 = G__15814__7;
G__15814.cljs$core$IFn$_invoke$arity$8 = G__15814__8;
G__15814.cljs$core$IFn$_invoke$arity$9 = G__15814__9;
G__15814.cljs$core$IFn$_invoke$arity$10 = G__15814__10;
G__15814.cljs$core$IFn$_invoke$arity$11 = G__15814__11;
G__15814.cljs$core$IFn$_invoke$arity$12 = G__15814__12;
G__15814.cljs$core$IFn$_invoke$arity$13 = G__15814__13;
G__15814.cljs$core$IFn$_invoke$arity$14 = G__15814__14;
G__15814.cljs$core$IFn$_invoke$arity$15 = G__15814__15;
G__15814.cljs$core$IFn$_invoke$arity$16 = G__15814__16;
G__15814.cljs$core$IFn$_invoke$arity$17 = G__15814__17;
G__15814.cljs$core$IFn$_invoke$arity$18 = G__15814__18;
G__15814.cljs$core$IFn$_invoke$arity$19 = G__15814__19;
G__15814.cljs$core$IFn$_invoke$arity$20 = G__15814__20;
G__15814.cljs$core$IFn$_invoke$arity$21 = G__15814__21;
G__15814.cljs$core$IFn$_invoke$arity$22 = G__15814__22;
return G__15814;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args15349){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15349)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__15582 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__15582) : self__.afn.call(null,G__15582));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__15583 = a;
var G__15584 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__15583,G__15584) : self__.afn.call(null,G__15583,G__15584));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__15585 = a;
var G__15586 = b;
var G__15587 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__15585,G__15586,G__15587) : self__.afn.call(null,G__15585,G__15586,G__15587));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__15588 = a;
var G__15589 = b;
var G__15590 = c;
var G__15591 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__15588,G__15589,G__15590,G__15591) : self__.afn.call(null,G__15588,G__15589,G__15590,G__15591));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__15592 = a;
var G__15593 = b;
var G__15594 = c;
var G__15595 = d;
var G__15596 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__15592,G__15593,G__15594,G__15595,G__15596) : self__.afn.call(null,G__15592,G__15593,G__15594,G__15595,G__15596));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__15597 = a;
var G__15598 = b;
var G__15599 = c;
var G__15600 = d;
var G__15601 = e;
var G__15602 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__15597,G__15598,G__15599,G__15600,G__15601,G__15602) : self__.afn.call(null,G__15597,G__15598,G__15599,G__15600,G__15601,G__15602));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__15603 = a;
var G__15604 = b;
var G__15605 = c;
var G__15606 = d;
var G__15607 = e;
var G__15608 = f;
var G__15609 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__15603,G__15604,G__15605,G__15606,G__15607,G__15608,G__15609) : self__.afn.call(null,G__15603,G__15604,G__15605,G__15606,G__15607,G__15608,G__15609));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__15610 = a;
var G__15611 = b;
var G__15612 = c;
var G__15613 = d;
var G__15614 = e;
var G__15615 = f;
var G__15616 = g;
var G__15617 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__15610,G__15611,G__15612,G__15613,G__15614,G__15615,G__15616,G__15617) : self__.afn.call(null,G__15610,G__15611,G__15612,G__15613,G__15614,G__15615,G__15616,G__15617));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__15618 = a;
var G__15619 = b;
var G__15620 = c;
var G__15621 = d;
var G__15622 = e;
var G__15623 = f;
var G__15624 = g;
var G__15625 = h;
var G__15626 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__15618,G__15619,G__15620,G__15621,G__15622,G__15623,G__15624,G__15625,G__15626) : self__.afn.call(null,G__15618,G__15619,G__15620,G__15621,G__15622,G__15623,G__15624,G__15625,G__15626));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__15627 = a;
var G__15628 = b;
var G__15629 = c;
var G__15630 = d;
var G__15631 = e;
var G__15632 = f;
var G__15633 = g;
var G__15634 = h;
var G__15635 = i;
var G__15636 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635,G__15636) : self__.afn.call(null,G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635,G__15636));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__15637 = a;
var G__15638 = b;
var G__15639 = c;
var G__15640 = d;
var G__15641 = e;
var G__15642 = f;
var G__15643 = g;
var G__15644 = h;
var G__15645 = i;
var G__15646 = j;
var G__15647 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__15637,G__15638,G__15639,G__15640,G__15641,G__15642,G__15643,G__15644,G__15645,G__15646,G__15647) : self__.afn.call(null,G__15637,G__15638,G__15639,G__15640,G__15641,G__15642,G__15643,G__15644,G__15645,G__15646,G__15647));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__15648 = a;
var G__15649 = b;
var G__15650 = c;
var G__15651 = d;
var G__15652 = e;
var G__15653 = f;
var G__15654 = g;
var G__15655 = h;
var G__15656 = i;
var G__15657 = j;
var G__15658 = k;
var G__15659 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654,G__15655,G__15656,G__15657,G__15658,G__15659) : self__.afn.call(null,G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654,G__15655,G__15656,G__15657,G__15658,G__15659));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__15660 = a;
var G__15661 = b;
var G__15662 = c;
var G__15663 = d;
var G__15664 = e;
var G__15665 = f;
var G__15666 = g;
var G__15667 = h;
var G__15668 = i;
var G__15669 = j;
var G__15670 = k;
var G__15671 = l;
var G__15672 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__15660,G__15661,G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669,G__15670,G__15671,G__15672) : self__.afn.call(null,G__15660,G__15661,G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669,G__15670,G__15671,G__15672));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__15673 = a;
var G__15674 = b;
var G__15675 = c;
var G__15676 = d;
var G__15677 = e;
var G__15678 = f;
var G__15679 = g;
var G__15680 = h;
var G__15681 = i;
var G__15682 = j;
var G__15683 = k;
var G__15684 = l;
var G__15685 = m;
var G__15686 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__15673,G__15674,G__15675,G__15676,G__15677,G__15678,G__15679,G__15680,G__15681,G__15682,G__15683,G__15684,G__15685,G__15686) : self__.afn.call(null,G__15673,G__15674,G__15675,G__15676,G__15677,G__15678,G__15679,G__15680,G__15681,G__15682,G__15683,G__15684,G__15685,G__15686));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__15687 = a;
var G__15688 = b;
var G__15689 = c;
var G__15690 = d;
var G__15691 = e;
var G__15692 = f;
var G__15693 = g;
var G__15694 = h;
var G__15695 = i;
var G__15696 = j;
var G__15697 = k;
var G__15698 = l;
var G__15699 = m;
var G__15700 = n;
var G__15701 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695,G__15696,G__15697,G__15698,G__15699,G__15700,G__15701) : self__.afn.call(null,G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695,G__15696,G__15697,G__15698,G__15699,G__15700,G__15701));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__15702 = a;
var G__15703 = b;
var G__15704 = c;
var G__15705 = d;
var G__15706 = e;
var G__15707 = f;
var G__15708 = g;
var G__15709 = h;
var G__15710 = i;
var G__15711 = j;
var G__15712 = k;
var G__15713 = l;
var G__15714 = m;
var G__15715 = n;
var G__15716 = o;
var G__15717 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__15702,G__15703,G__15704,G__15705,G__15706,G__15707,G__15708,G__15709,G__15710,G__15711,G__15712,G__15713,G__15714,G__15715,G__15716,G__15717) : self__.afn.call(null,G__15702,G__15703,G__15704,G__15705,G__15706,G__15707,G__15708,G__15709,G__15710,G__15711,G__15712,G__15713,G__15714,G__15715,G__15716,G__15717));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__15718 = a;
var G__15719 = b;
var G__15720 = c;
var G__15721 = d;
var G__15722 = e;
var G__15723 = f;
var G__15724 = g;
var G__15725 = h;
var G__15726 = i;
var G__15727 = j;
var G__15728 = k;
var G__15729 = l;
var G__15730 = m;
var G__15731 = n;
var G__15732 = o;
var G__15733 = p;
var G__15734 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724,G__15725,G__15726,G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734) : self__.afn.call(null,G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724,G__15725,G__15726,G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__15735 = a;
var G__15736 = b;
var G__15737 = c;
var G__15738 = d;
var G__15739 = e;
var G__15740 = f;
var G__15741 = g;
var G__15742 = h;
var G__15743 = i;
var G__15744 = j;
var G__15745 = k;
var G__15746 = l;
var G__15747 = m;
var G__15748 = n;
var G__15749 = o;
var G__15750 = p;
var G__15751 = q;
var G__15752 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__15735,G__15736,G__15737,G__15738,G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752) : self__.afn.call(null,G__15735,G__15736,G__15737,G__15738,G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__15753 = a;
var G__15754 = b;
var G__15755 = c;
var G__15756 = d;
var G__15757 = e;
var G__15758 = f;
var G__15759 = g;
var G__15760 = h;
var G__15761 = i;
var G__15762 = j;
var G__15763 = k;
var G__15764 = l;
var G__15765 = m;
var G__15766 = n;
var G__15767 = o;
var G__15768 = p;
var G__15769 = q;
var G__15770 = r;
var G__15771 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__15753,G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770,G__15771) : self__.afn.call(null,G__15753,G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770,G__15771));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__15772 = a;
var G__15773 = b;
var G__15774 = c;
var G__15775 = d;
var G__15776 = e;
var G__15777 = f;
var G__15778 = g;
var G__15779 = h;
var G__15780 = i;
var G__15781 = j;
var G__15782 = k;
var G__15783 = l;
var G__15784 = m;
var G__15785 = n;
var G__15786 = o;
var G__15787 = p;
var G__15788 = q;
var G__15789 = r;
var G__15790 = s;
var G__15791 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789,G__15790,G__15791) : self__.afn.call(null,G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789,G__15790,G__15791));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__15792 = self__.afn;
var G__15793 = a;
var G__15794 = b;
var G__15795 = c;
var G__15796 = d;
var G__15797 = e;
var G__15798 = f;
var G__15799 = g;
var G__15800 = h;
var G__15801 = i;
var G__15802 = j;
var G__15803 = k;
var G__15804 = l;
var G__15805 = m;
var G__15806 = n;
var G__15807 = o;
var G__15808 = p;
var G__15809 = q;
var G__15810 = r;
var G__15811 = s;
var G__15812 = t;
var G__15813 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813) : cljs.core.apply.call(null,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__15818 = o;
if(G__15818){
var bit__4264__auto__ = (G__15818.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4264__auto__) || (G__15818.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__15818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__15818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__15818);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3571__auto__ = !((o == null));
if(and__3571__auto__){
var G__15822 = o;
if(G__15822){
var bit__4264__auto__ = (G__15822.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4264__auto__) || (G__15822.cljs$core$IMeta$)){
return true;
} else {
if((!G__15822.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15822);
}
} else {
return and__3571__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__15825__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__15826 = ret;
var G__15827 = cljs.core.first(ks);
var G__15828 = cljs.core.next(ks);
coll = G__15826;
k = G__15827;
ks = G__15828;
continue;
} else {
return ret;
}
}
break;
}
};
var G__15825 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__15829__i = 0, G__15829__a = new Array(arguments.length -  2);
while (G__15829__i < G__15829__a.length) {G__15829__a[G__15829__i] = arguments[G__15829__i + 2]; ++G__15829__i;}
  ks = new cljs.core.IndexedSeq(G__15829__a,0);
} 
return G__15825__delegate.call(this,coll,k,ks);};
G__15825.cljs$lang$maxFixedArity = 2;
G__15825.cljs$lang$applyTo = (function (arglist__15830){
var coll = cljs.core.first(arglist__15830);
arglist__15830 = cljs.core.next(arglist__15830);
var k = cljs.core.first(arglist__15830);
var ks = cljs.core.rest(arglist__15830);
return G__15825__delegate(coll,k,ks);
});
G__15825.cljs$core$IFn$_invoke$arity$variadic = G__15825__delegate;
return G__15825;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__15831 = null;
if (arguments.length > 2) {
var G__15832__i = 0, G__15832__a = new Array(arguments.length -  2);
while (G__15832__i < G__15832__a.length) {G__15832__a[G__15832__i] = arguments[G__15832__i + 2]; ++G__15832__i;}
G__15831 = new cljs.core.IndexedSeq(G__15832__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__15831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__15834 = x;
if(G__15834){
var bit__4264__auto__ = (G__15834.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4264__auto__) || (G__15834.cljs$core$ICollection$)){
return true;
} else {
if((!G__15834.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__15834);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__15834);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__15836 = x;
if(G__15836){
var bit__4264__auto__ = (G__15836.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4264__auto__) || (G__15836.cljs$core$ISet$)){
return true;
} else {
if((!G__15836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__15836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__15836);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__15838 = x;
if(G__15838){
var bit__4264__auto__ = (G__15838.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4264__auto__) || (G__15838.cljs$core$IAssociative$)){
return true;
} else {
if((!G__15838.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__15838);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__15838);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__15840 = x;
if(G__15840){
var bit__4264__auto__ = (G__15840.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4264__auto__) || (G__15840.cljs$core$ISequential$)){
return true;
} else {
if((!G__15840.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__15840);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__15840);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__15842 = x;
if(G__15842){
var bit__4264__auto__ = (G__15842.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4264__auto__) || (G__15842.cljs$core$ISorted$)){
return true;
} else {
if((!G__15842.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__15842);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__15842);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__15844 = x;
if(G__15844){
var bit__4264__auto__ = (G__15844.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4264__auto__) || (G__15844.cljs$core$IReduce$)){
return true;
} else {
if((!G__15844.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__15844);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__15844);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__15846 = x;
if(G__15846){
var bit__4264__auto__ = (G__15846.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4264__auto__) || (G__15846.cljs$core$IMap$)){
return true;
} else {
if((!G__15846.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__15846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__15846);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__15848 = x;
if(G__15848){
var bit__4264__auto__ = (G__15848.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4264__auto__) || (G__15848.cljs$core$IVector$)){
return true;
} else {
if((!G__15848.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__15848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__15848);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__15850 = x;
if(G__15850){
var bit__4257__auto__ = (G__15850.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4257__auto__) || (G__15850.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj15856 = {};
return obj15856;
});
var js_obj__1 = (function() { 
var G__15859__delegate = function (keyvals){
var G__15857 = goog.object.create;
var G__15858 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__15857,G__15858) : cljs.core.apply.call(null,G__15857,G__15858));
};
var G__15859 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15860__i = 0, G__15860__a = new Array(arguments.length -  0);
while (G__15860__i < G__15860__a.length) {G__15860__a[G__15860__i] = arguments[G__15860__i + 0]; ++G__15860__i;}
  keyvals = new cljs.core.IndexedSeq(G__15860__a,0);
} 
return G__15859__delegate.call(this,keyvals);};
G__15859.cljs$lang$maxFixedArity = 0;
G__15859.cljs$lang$applyTo = (function (arglist__15861){
var keyvals = cljs.core.seq(arglist__15861);
return G__15859__delegate(keyvals);
});
G__15859.cljs$core$IFn$_invoke$arity$variadic = G__15859__delegate;
return G__15859;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__15862 = null;
if (arguments.length > 0) {
var G__15863__i = 0, G__15863__a = new Array(arguments.length -  0);
while (G__15863__i < G__15863__a.length) {G__15863__a[G__15863__i] = arguments[G__15863__i + 0]; ++G__15863__i;}
G__15862 = new cljs.core.IndexedSeq(G__15863__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__15862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__15866_15868 = obj;
var G__15867_15869 = ((function (G__15866_15868,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__15866_15868,keys))
;
goog.object.forEach(G__15866_15868,G__15867_15869);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__15870 = (i__$1 + (1));
var G__15871 = (j__$1 + (1));
var G__15872 = (len__$1 - (1));
i__$1 = G__15870;
j__$1 = G__15871;
len__$1 = G__15872;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__15873 = (i__$1 - (1));
var G__15874 = (j__$1 - (1));
var G__15875 = (len__$1 - (1));
i__$1 = G__15873;
j__$1 = G__15874;
len__$1 = G__15875;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj15877 = {};
return obj15877;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__15879 = s;
if(G__15879){
var bit__4264__auto__ = (G__15879.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4264__auto__) || (G__15879.cljs$core$ISeq$)){
return true;
} else {
if((!G__15879.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15879);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__15881 = s;
if(G__15881){
var bit__4264__auto__ = (G__15881.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4264__auto__) || (G__15881.cljs$core$ISeqable$)){
return true;
} else {
if((!G__15881.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__15881);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__15881);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3583__auto__ = cljs.core.fn_QMARK_(f);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var G__15885 = f;
if(G__15885){
var bit__4264__auto__ = (G__15885.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4264__auto__) || (G__15885.cljs$core$IFn$)){
return true;
} else {
if((!G__15885.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__15885);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__15885);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__15898 = n;
return isNaN(G__15898);
})())) && (!((n === Infinity))) && (((function (){var G__15899 = n;
return parseFloat(G__15899);
})() === (function (){var G__15900 = n;
var G__15901 = (10);
return parseInt(G__15900,G__15901);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__15902__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__15903 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__15904 = etc;
s = G__15903;
xs = G__15904;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__15902 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15905__i = 0, G__15905__a = new Array(arguments.length -  2);
while (G__15905__i < G__15905__a.length) {G__15905__a[G__15905__i] = arguments[G__15905__i + 2]; ++G__15905__i;}
  more = new cljs.core.IndexedSeq(G__15905__a,0);
} 
return G__15902__delegate.call(this,x,y,more);};
G__15902.cljs$lang$maxFixedArity = 2;
G__15902.cljs$lang$applyTo = (function (arglist__15906){
var x = cljs.core.first(arglist__15906);
arglist__15906 = cljs.core.next(arglist__15906);
var y = cljs.core.first(arglist__15906);
var more = cljs.core.rest(arglist__15906);
return G__15902__delegate(x,y,more);
});
G__15902.cljs$core$IFn$_invoke$arity$variadic = G__15902__delegate;
return G__15902;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__15907 = null;
if (arguments.length > 2) {
var G__15908__i = 0, G__15908__a = new Array(arguments.length -  2);
while (G__15908__i < G__15908__a.length) {G__15908__a[G__15908__i] = arguments[G__15908__i + 2]; ++G__15908__i;}
G__15907 = new cljs.core.IndexedSeq(G__15908__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__15912 = x;
if(G__15912){
var bit__4257__auto__ = (G__15912.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4257__auto__) || (G__15912.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__15913 = x;
var G__15914 = y;
return goog.array.defaultCompare(G__15913,G__15914);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__15919 = xs;
var G__15920 = ys;
var G__15921 = len;
var G__15922 = (n + (1));
xs = G__15919;
ys = G__15920;
len = G__15921;
n = G__15922;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__15927 = x;
var G__15928 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15927,G__15928) : f.call(null,G__15927,G__15928));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__15929 = y;
var G__15930 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15929,G__15930) : f.call(null,G__15929,G__15930));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__15936 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__15936) : cljs.core.to_array.call(null,G__15936));
})();
var G__15937_15939 = a;
var G__15938_15940 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__15937_15939,G__15938_15940);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__15946 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15946) : keyfn.call(null,G__15946));
})(),(function (){var G__15947 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15947) : keyfn.call(null,G__15947));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__15953 = f;
var G__15954 = cljs.core.first(s);
var G__15955 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__15953,G__15954,G__15955) : cljs.core.reduce.call(null,G__15953,G__15954,G__15955));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__15956 = val__$1;
var G__15957 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15956,G__15957) : f.call(null,G__15956,G__15957));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15958 = nval;
var G__15959 = cljs.core.next(coll__$1);
val__$1 = G__15958;
coll__$1 = G__15959;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__15963 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__15963) : cljs.core.to_array.call(null,G__15963));
})();
var G__15964_15966 = a;
goog.array.shuffle(G__15964_15966);

var G__15965 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__15965) : cljs.core.vec.call(null,G__15965));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__15969 = coll;
if(G__15969){
var bit__4257__auto__ = (G__15969.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4257__auto__) || (G__15969.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__15970 = coll;
if(G__15970){
var bit__4257__auto__ = (G__15970.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4257__auto__) || (G__15970.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__15979 = null;
var G__15979__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__15979__1 = (function (x){
var G__15976 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__15976) : cf.call(null,G__15976));
});
var G__15979__2 = (function (x,y){
var G__15977 = x;
var G__15978 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15977,G__15978) : f.call(null,G__15977,G__15978));
});
G__15979 = function(x,y){
switch(arguments.length){
case 0:
return G__15979__0.call(this);
case 1:
return G__15979__1.call(this,x);
case 2:
return G__15979__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15979.cljs$core$IFn$_invoke$arity$0 = G__15979__0;
G__15979.cljs$core$IFn$_invoke$arity$1 = G__15979__1;
G__15979.cljs$core$IFn$_invoke$arity$2 = G__15979__2;
return G__15979;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__15986 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15986) : xform.call(null,G__15986));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__15987 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__15987) : f__$1.call(null,G__15987));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__15988__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__15988 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15989__i = 0, G__15989__a = new Array(arguments.length -  2);
while (G__15989__i < G__15989__a.length) {G__15989__a[G__15989__i] = arguments[G__15989__i + 2]; ++G__15989__i;}
  more = new cljs.core.IndexedSeq(G__15989__a,0);
} 
return G__15988__delegate.call(this,x,y,more);};
G__15988.cljs$lang$maxFixedArity = 2;
G__15988.cljs$lang$applyTo = (function (arglist__15990){
var x = cljs.core.first(arglist__15990);
arglist__15990 = cljs.core.next(arglist__15990);
var y = cljs.core.first(arglist__15990);
var more = cljs.core.rest(arglist__15990);
return G__15988__delegate(x,y,more);
});
G__15988.cljs$core$IFn$_invoke$arity$variadic = G__15988__delegate;
return G__15988;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__15991 = null;
if (arguments.length > 2) {
var G__15992__i = 0, G__15992__a = new Array(arguments.length -  2);
while (G__15992__i < G__15992__a.length) {G__15992__a[G__15992__i] = arguments[G__15992__i + 2]; ++G__15992__i;}
G__15991 = new cljs.core.IndexedSeq(G__15992__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__15993__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__15993 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15994__i = 0, G__15994__a = new Array(arguments.length -  2);
while (G__15994__i < G__15994__a.length) {G__15994__a[G__15994__i] = arguments[G__15994__i + 2]; ++G__15994__i;}
  more = new cljs.core.IndexedSeq(G__15994__a,0);
} 
return G__15993__delegate.call(this,x,y,more);};
G__15993.cljs$lang$maxFixedArity = 2;
G__15993.cljs$lang$applyTo = (function (arglist__15995){
var x = cljs.core.first(arglist__15995);
arglist__15995 = cljs.core.next(arglist__15995);
var y = cljs.core.first(arglist__15995);
var more = cljs.core.rest(arglist__15995);
return G__15993__delegate(x,y,more);
});
G__15993.cljs$core$IFn$_invoke$arity$variadic = G__15993__delegate;
return G__15993;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__15996 = null;
if (arguments.length > 2) {
var G__15997__i = 0, G__15997__a = new Array(arguments.length -  2);
while (G__15997__i < G__15997__a.length) {G__15997__a[G__15997__i] = arguments[G__15997__i + 2]; ++G__15997__i;}
G__15996 = new cljs.core.IndexedSeq(G__15997__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__15998__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__15998 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15999__i = 0, G__15999__a = new Array(arguments.length -  2);
while (G__15999__i < G__15999__a.length) {G__15999__a[G__15999__i] = arguments[G__15999__i + 2]; ++G__15999__i;}
  more = new cljs.core.IndexedSeq(G__15999__a,0);
} 
return G__15998__delegate.call(this,x,y,more);};
G__15998.cljs$lang$maxFixedArity = 2;
G__15998.cljs$lang$applyTo = (function (arglist__16000){
var x = cljs.core.first(arglist__16000);
arglist__16000 = cljs.core.next(arglist__16000);
var y = cljs.core.first(arglist__16000);
var more = cljs.core.rest(arglist__16000);
return G__15998__delegate(x,y,more);
});
G__15998.cljs$core$IFn$_invoke$arity$variadic = G__15998__delegate;
return G__15998;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__16001 = null;
if (arguments.length > 2) {
var G__16002__i = 0, G__16002__a = new Array(arguments.length -  2);
while (G__16002__i < G__16002__a.length) {G__16002__a[G__16002__i] = arguments[G__16002__i + 2]; ++G__16002__i;}
G__16001 = new cljs.core.IndexedSeq(G__16002__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__16007__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__16007 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16008__i = 0, G__16008__a = new Array(arguments.length -  2);
while (G__16008__i < G__16008__a.length) {G__16008__a[G__16008__i] = arguments[G__16008__i + 2]; ++G__16008__i;}
  more = new cljs.core.IndexedSeq(G__16008__a,0);
} 
return G__16007__delegate.call(this,x,y,more);};
G__16007.cljs$lang$maxFixedArity = 2;
G__16007.cljs$lang$applyTo = (function (arglist__16009){
var x = cljs.core.first(arglist__16009);
arglist__16009 = cljs.core.next(arglist__16009);
var y = cljs.core.first(arglist__16009);
var more = cljs.core.rest(arglist__16009);
return G__16007__delegate(x,y,more);
});
G__16007.cljs$core$IFn$_invoke$arity$variadic = G__16007__delegate;
return G__16007;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__16010 = null;
if (arguments.length > 2) {
var G__16011__i = 0, G__16011__a = new Array(arguments.length -  2);
while (G__16011__i < G__16011__a.length) {G__16011__a[G__16011__i] = arguments[G__16011__i + 2]; ++G__16011__i;}
G__16010 = new cljs.core.IndexedSeq(G__16011__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__16012__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__16013 = y;
var G__16014 = cljs.core.first(more);
var G__16015 = cljs.core.next(more);
x = G__16013;
y = G__16014;
more = G__16015;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16012 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16016__i = 0, G__16016__a = new Array(arguments.length -  2);
while (G__16016__i < G__16016__a.length) {G__16016__a[G__16016__i] = arguments[G__16016__i + 2]; ++G__16016__i;}
  more = new cljs.core.IndexedSeq(G__16016__a,0);
} 
return G__16012__delegate.call(this,x,y,more);};
G__16012.cljs$lang$maxFixedArity = 2;
G__16012.cljs$lang$applyTo = (function (arglist__16017){
var x = cljs.core.first(arglist__16017);
arglist__16017 = cljs.core.next(arglist__16017);
var y = cljs.core.first(arglist__16017);
var more = cljs.core.rest(arglist__16017);
return G__16012__delegate(x,y,more);
});
G__16012.cljs$core$IFn$_invoke$arity$variadic = G__16012__delegate;
return G__16012;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__16018 = null;
if (arguments.length > 2) {
var G__16019__i = 0, G__16019__a = new Array(arguments.length -  2);
while (G__16019__i < G__16019__a.length) {G__16019__a[G__16019__i] = arguments[G__16019__i + 2]; ++G__16019__i;}
G__16018 = new cljs.core.IndexedSeq(G__16019__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__16020__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__16021 = y;
var G__16022 = cljs.core.first(more);
var G__16023 = cljs.core.next(more);
x = G__16021;
y = G__16022;
more = G__16023;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16020 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16024__i = 0, G__16024__a = new Array(arguments.length -  2);
while (G__16024__i < G__16024__a.length) {G__16024__a[G__16024__i] = arguments[G__16024__i + 2]; ++G__16024__i;}
  more = new cljs.core.IndexedSeq(G__16024__a,0);
} 
return G__16020__delegate.call(this,x,y,more);};
G__16020.cljs$lang$maxFixedArity = 2;
G__16020.cljs$lang$applyTo = (function (arglist__16025){
var x = cljs.core.first(arglist__16025);
arglist__16025 = cljs.core.next(arglist__16025);
var y = cljs.core.first(arglist__16025);
var more = cljs.core.rest(arglist__16025);
return G__16020__delegate(x,y,more);
});
G__16020.cljs$core$IFn$_invoke$arity$variadic = G__16020__delegate;
return G__16020;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__16026 = null;
if (arguments.length > 2) {
var G__16027__i = 0, G__16027__a = new Array(arguments.length -  2);
while (G__16027__i < G__16027__a.length) {G__16027__a[G__16027__i] = arguments[G__16027__i + 2]; ++G__16027__i;}
G__16026 = new cljs.core.IndexedSeq(G__16027__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__16028__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__16029 = y;
var G__16030 = cljs.core.first(more);
var G__16031 = cljs.core.next(more);
x = G__16029;
y = G__16030;
more = G__16031;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16028 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16032__i = 0, G__16032__a = new Array(arguments.length -  2);
while (G__16032__i < G__16032__a.length) {G__16032__a[G__16032__i] = arguments[G__16032__i + 2]; ++G__16032__i;}
  more = new cljs.core.IndexedSeq(G__16032__a,0);
} 
return G__16028__delegate.call(this,x,y,more);};
G__16028.cljs$lang$maxFixedArity = 2;
G__16028.cljs$lang$applyTo = (function (arglist__16033){
var x = cljs.core.first(arglist__16033);
arglist__16033 = cljs.core.next(arglist__16033);
var y = cljs.core.first(arglist__16033);
var more = cljs.core.rest(arglist__16033);
return G__16028__delegate(x,y,more);
});
G__16028.cljs$core$IFn$_invoke$arity$variadic = G__16028__delegate;
return G__16028;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__16034 = null;
if (arguments.length > 2) {
var G__16035__i = 0, G__16035__a = new Array(arguments.length -  2);
while (G__16035__i < G__16035__a.length) {G__16035__a[G__16035__i] = arguments[G__16035__i + 2]; ++G__16035__i;}
G__16034 = new cljs.core.IndexedSeq(G__16035__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__16036__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__16037 = y;
var G__16038 = cljs.core.first(more);
var G__16039 = cljs.core.next(more);
x = G__16037;
y = G__16038;
more = G__16039;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16036 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16040__i = 0, G__16040__a = new Array(arguments.length -  2);
while (G__16040__i < G__16040__a.length) {G__16040__a[G__16040__i] = arguments[G__16040__i + 2]; ++G__16040__i;}
  more = new cljs.core.IndexedSeq(G__16040__a,0);
} 
return G__16036__delegate.call(this,x,y,more);};
G__16036.cljs$lang$maxFixedArity = 2;
G__16036.cljs$lang$applyTo = (function (arglist__16041){
var x = cljs.core.first(arglist__16041);
arglist__16041 = cljs.core.next(arglist__16041);
var y = cljs.core.first(arglist__16041);
var more = cljs.core.rest(arglist__16041);
return G__16036__delegate(x,y,more);
});
G__16036.cljs$core$IFn$_invoke$arity$variadic = G__16036__delegate;
return G__16036;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__16042 = null;
if (arguments.length > 2) {
var G__16043__i = 0, G__16043__a = new Array(arguments.length -  2);
while (G__16043__i < G__16043__a.length) {G__16043__a[G__16043__i] = arguments[G__16043__i + 2]; ++G__16043__i;}
G__16042 = new cljs.core.IndexedSeq(G__16043__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3900__auto__ = x;
var y__3901__auto__ = y;
return ((x__3900__auto__ > y__3901__auto__) ? x__3900__auto__ : y__3901__auto__);
});
var max__3 = (function() { 
var G__16044__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3900__auto__ = x;
var y__3901__auto__ = y;
return ((x__3900__auto__ > y__3901__auto__) ? x__3900__auto__ : y__3901__auto__);
})(),more);
};
var G__16044 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16045__i = 0, G__16045__a = new Array(arguments.length -  2);
while (G__16045__i < G__16045__a.length) {G__16045__a[G__16045__i] = arguments[G__16045__i + 2]; ++G__16045__i;}
  more = new cljs.core.IndexedSeq(G__16045__a,0);
} 
return G__16044__delegate.call(this,x,y,more);};
G__16044.cljs$lang$maxFixedArity = 2;
G__16044.cljs$lang$applyTo = (function (arglist__16046){
var x = cljs.core.first(arglist__16046);
arglist__16046 = cljs.core.next(arglist__16046);
var y = cljs.core.first(arglist__16046);
var more = cljs.core.rest(arglist__16046);
return G__16044__delegate(x,y,more);
});
G__16044.cljs$core$IFn$_invoke$arity$variadic = G__16044__delegate;
return G__16044;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__16047 = null;
if (arguments.length > 2) {
var G__16048__i = 0, G__16048__a = new Array(arguments.length -  2);
while (G__16048__i < G__16048__a.length) {G__16048__a[G__16048__i] = arguments[G__16048__i + 2]; ++G__16048__i;}
G__16047 = new cljs.core.IndexedSeq(G__16048__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3907__auto__ = x;
var y__3908__auto__ = y;
return ((x__3907__auto__ < y__3908__auto__) ? x__3907__auto__ : y__3908__auto__);
});
var min__3 = (function() { 
var G__16049__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3907__auto__ = x;
var y__3908__auto__ = y;
return ((x__3907__auto__ < y__3908__auto__) ? x__3907__auto__ : y__3908__auto__);
})(),more);
};
var G__16049 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16050__i = 0, G__16050__a = new Array(arguments.length -  2);
while (G__16050__i < G__16050__a.length) {G__16050__a[G__16050__i] = arguments[G__16050__i + 2]; ++G__16050__i;}
  more = new cljs.core.IndexedSeq(G__16050__a,0);
} 
return G__16049__delegate.call(this,x,y,more);};
G__16049.cljs$lang$maxFixedArity = 2;
G__16049.cljs$lang$applyTo = (function (arglist__16051){
var x = cljs.core.first(arglist__16051);
arglist__16051 = cljs.core.next(arglist__16051);
var y = cljs.core.first(arglist__16051);
var more = cljs.core.rest(arglist__16051);
return G__16049__delegate(x,y,more);
});
G__16049.cljs$core$IFn$_invoke$arity$variadic = G__16049__delegate;
return G__16049;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__16052 = null;
if (arguments.length > 2) {
var G__16053__i = 0, G__16053__a = new Array(arguments.length -  2);
while (G__16053__i < G__16053__a.length) {G__16053__a[G__16053__i] = arguments[G__16053__i + 2]; ++G__16053__i;}
G__16052 = new cljs.core.IndexedSeq(G__16053__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__16054__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__16054 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16055__i = 0, G__16055__a = new Array(arguments.length -  2);
while (G__16055__i < G__16055__a.length) {G__16055__a[G__16055__i] = arguments[G__16055__i + 2]; ++G__16055__i;}
  more = new cljs.core.IndexedSeq(G__16055__a,0);
} 
return G__16054__delegate.call(this,x,y,more);};
G__16054.cljs$lang$maxFixedArity = 2;
G__16054.cljs$lang$applyTo = (function (arglist__16056){
var x = cljs.core.first(arglist__16056);
arglist__16056 = cljs.core.next(arglist__16056);
var y = cljs.core.first(arglist__16056);
var more = cljs.core.rest(arglist__16056);
return G__16054__delegate(x,y,more);
});
G__16054.cljs$core$IFn$_invoke$arity$variadic = G__16054__delegate;
return G__16054;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__16057 = null;
if (arguments.length > 2) {
var G__16058__i = 0, G__16058__a = new Array(arguments.length -  2);
while (G__16058__i < G__16058__a.length) {G__16058__a[G__16058__i] = arguments[G__16058__i + 2]; ++G__16058__i;}
G__16057 = new cljs.core.IndexedSeq(G__16058__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__16059__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__16059 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16060__i = 0, G__16060__a = new Array(arguments.length -  2);
while (G__16060__i < G__16060__a.length) {G__16060__a[G__16060__i] = arguments[G__16060__i + 2]; ++G__16060__i;}
  more = new cljs.core.IndexedSeq(G__16060__a,0);
} 
return G__16059__delegate.call(this,x,y,more);};
G__16059.cljs$lang$maxFixedArity = 2;
G__16059.cljs$lang$applyTo = (function (arglist__16061){
var x = cljs.core.first(arglist__16061);
arglist__16061 = cljs.core.next(arglist__16061);
var y = cljs.core.first(arglist__16061);
var more = cljs.core.rest(arglist__16061);
return G__16059__delegate(x,y,more);
});
G__16059.cljs$core$IFn$_invoke$arity$variadic = G__16059__delegate;
return G__16059;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__16062 = null;
if (arguments.length > 2) {
var G__16063__i = 0, G__16063__a = new Array(arguments.length -  2);
while (G__16063__i < G__16063__a.length) {G__16063__a[G__16063__i] = arguments[G__16063__i + 2]; ++G__16063__i;}
G__16062 = new cljs.core.IndexedSeq(G__16063__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__16068__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__16068 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16069__i = 0, G__16069__a = new Array(arguments.length -  2);
while (G__16069__i < G__16069__a.length) {G__16069__a[G__16069__i] = arguments[G__16069__i + 2]; ++G__16069__i;}
  more = new cljs.core.IndexedSeq(G__16069__a,0);
} 
return G__16068__delegate.call(this,x,y,more);};
G__16068.cljs$lang$maxFixedArity = 2;
G__16068.cljs$lang$applyTo = (function (arglist__16070){
var x = cljs.core.first(arglist__16070);
arglist__16070 = cljs.core.next(arglist__16070);
var y = cljs.core.first(arglist__16070);
var more = cljs.core.rest(arglist__16070);
return G__16068__delegate(x,y,more);
});
G__16068.cljs$core$IFn$_invoke$arity$variadic = G__16068__delegate;
return G__16068;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__16071 = null;
if (arguments.length > 2) {
var G__16072__i = 0, G__16072__a = new Array(arguments.length -  2);
while (G__16072__i < G__16072__a.length) {G__16072__a[G__16072__i] = arguments[G__16072__i + 2]; ++G__16072__i;}
G__16071 = new cljs.core.IndexedSeq(G__16072__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__16073__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__16073 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16074__i = 0, G__16074__a = new Array(arguments.length -  2);
while (G__16074__i < G__16074__a.length) {G__16074__a[G__16074__i] = arguments[G__16074__i + 2]; ++G__16074__i;}
  more = new cljs.core.IndexedSeq(G__16074__a,0);
} 
return G__16073__delegate.call(this,x,y,more);};
G__16073.cljs$lang$maxFixedArity = 2;
G__16073.cljs$lang$applyTo = (function (arglist__16075){
var x = cljs.core.first(arglist__16075);
arglist__16075 = cljs.core.next(arglist__16075);
var y = cljs.core.first(arglist__16075);
var more = cljs.core.rest(arglist__16075);
return G__16073__delegate(x,y,more);
});
G__16073.cljs$core$IFn$_invoke$arity$variadic = G__16073__delegate;
return G__16073;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__16076 = null;
if (arguments.length > 2) {
var G__16077__i = 0, G__16077__a = new Array(arguments.length -  2);
while (G__16077__i < G__16077__a.length) {G__16077__a[G__16077__i] = arguments[G__16077__i + 2]; ++G__16077__i;}
G__16076 = new cljs.core.IndexedSeq(G__16077__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__16078__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__16078 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16079__i = 0, G__16079__a = new Array(arguments.length -  2);
while (G__16079__i < G__16079__a.length) {G__16079__a[G__16079__i] = arguments[G__16079__i + 2]; ++G__16079__i;}
  more = new cljs.core.IndexedSeq(G__16079__a,0);
} 
return G__16078__delegate.call(this,x,y,more);};
G__16078.cljs$lang$maxFixedArity = 2;
G__16078.cljs$lang$applyTo = (function (arglist__16080){
var x = cljs.core.first(arglist__16080);
arglist__16080 = cljs.core.next(arglist__16080);
var y = cljs.core.first(arglist__16080);
var more = cljs.core.rest(arglist__16080);
return G__16078__delegate(x,y,more);
});
G__16078.cljs$core$IFn$_invoke$arity$variadic = G__16078__delegate;
return G__16078;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__16081 = null;
if (arguments.length > 2) {
var G__16082__i = 0, G__16082__a = new Array(arguments.length -  2);
while (G__16082__i < G__16082__a.length) {G__16082__a[G__16082__i] = arguments[G__16082__i + 2]; ++G__16082__i;}
G__16081 = new cljs.core.IndexedSeq(G__16082__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__16085 = x;
var G__16086 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__16085,G__16086) : cljs.core.mod.call(null,G__16085,G__16086));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__16087__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__16087 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16088__i = 0, G__16088__a = new Array(arguments.length -  2);
while (G__16088__i < G__16088__a.length) {G__16088__a[G__16088__i] = arguments[G__16088__i + 2]; ++G__16088__i;}
  more = new cljs.core.IndexedSeq(G__16088__a,0);
} 
return G__16087__delegate.call(this,x,y,more);};
G__16087.cljs$lang$maxFixedArity = 2;
G__16087.cljs$lang$applyTo = (function (arglist__16089){
var x = cljs.core.first(arglist__16089);
arglist__16089 = cljs.core.next(arglist__16089);
var y = cljs.core.first(arglist__16089);
var more = cljs.core.rest(arglist__16089);
return G__16087__delegate(x,y,more);
});
G__16087.cljs$core$IFn$_invoke$arity$variadic = G__16087__delegate;
return G__16087;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__16090 = null;
if (arguments.length > 2) {
var G__16091__i = 0, G__16091__a = new Array(arguments.length -  2);
while (G__16091__i < G__16091__a.length) {G__16091__a[G__16091__i] = arguments[G__16091__i + 2]; ++G__16091__i;}
G__16090 = new cljs.core.IndexedSeq(G__16091__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__16092__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__16092 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16093__i = 0, G__16093__a = new Array(arguments.length -  2);
while (G__16093__i < G__16093__a.length) {G__16093__a[G__16093__i] = arguments[G__16093__i + 2]; ++G__16093__i;}
  more = new cljs.core.IndexedSeq(G__16093__a,0);
} 
return G__16092__delegate.call(this,x,y,more);};
G__16092.cljs$lang$maxFixedArity = 2;
G__16092.cljs$lang$applyTo = (function (arglist__16094){
var x = cljs.core.first(arglist__16094);
arglist__16094 = cljs.core.next(arglist__16094);
var y = cljs.core.first(arglist__16094);
var more = cljs.core.rest(arglist__16094);
return G__16092__delegate(x,y,more);
});
G__16092.cljs$core$IFn$_invoke$arity$variadic = G__16092__delegate;
return G__16092;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__16095 = null;
if (arguments.length > 2) {
var G__16096__i = 0, G__16096__a = new Array(arguments.length -  2);
while (G__16096__i < G__16096__a.length) {G__16096__a[G__16096__i] = arguments[G__16096__i + 2]; ++G__16096__i;}
G__16095 = new cljs.core.IndexedSeq(G__16096__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__16099 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16099) : Math.floor.call(null,G__16099));
} else {
var G__16100 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16100) : Math.ceil.call(null,G__16100));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__16101__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__16101 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16102__i = 0, G__16102__a = new Array(arguments.length -  2);
while (G__16102__i < G__16102__a.length) {G__16102__a[G__16102__i] = arguments[G__16102__i + 2]; ++G__16102__i;}
  more = new cljs.core.IndexedSeq(G__16102__a,0);
} 
return G__16101__delegate.call(this,x,y,more);};
G__16101.cljs$lang$maxFixedArity = 2;
G__16101.cljs$lang$applyTo = (function (arglist__16103){
var x = cljs.core.first(arglist__16103);
arglist__16103 = cljs.core.next(arglist__16103);
var y = cljs.core.first(arglist__16103);
var more = cljs.core.rest(arglist__16103);
return G__16101__delegate(x,y,more);
});
G__16101.cljs$core$IFn$_invoke$arity$variadic = G__16101__delegate;
return G__16101;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__16104 = null;
if (arguments.length > 2) {
var G__16105__i = 0, G__16105__a = new Array(arguments.length -  2);
while (G__16105__i < G__16105__a.length) {G__16105__a[G__16105__i] = arguments[G__16105__i + 2]; ++G__16105__i;}
G__16104 = new cljs.core.IndexedSeq(G__16105__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__16106__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__16106 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16107__i = 0, G__16107__a = new Array(arguments.length -  2);
while (G__16107__i < G__16107__a.length) {G__16107__a[G__16107__i] = arguments[G__16107__i + 2]; ++G__16107__i;}
  more = new cljs.core.IndexedSeq(G__16107__a,0);
} 
return G__16106__delegate.call(this,x,y,more);};
G__16106.cljs$lang$maxFixedArity = 2;
G__16106.cljs$lang$applyTo = (function (arglist__16108){
var x = cljs.core.first(arglist__16108);
arglist__16108 = cljs.core.next(arglist__16108);
var y = cljs.core.first(arglist__16108);
var more = cljs.core.rest(arglist__16108);
return G__16106__delegate(x,y,more);
});
G__16106.cljs$core$IFn$_invoke$arity$variadic = G__16106__delegate;
return G__16106;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__16109 = null;
if (arguments.length > 2) {
var G__16110__i = 0, G__16110__a = new Array(arguments.length -  2);
while (G__16110__i < G__16110__a.length) {G__16110__a[G__16110__i] = arguments[G__16110__i + 2]; ++G__16110__i;}
G__16109 = new cljs.core.IndexedSeq(G__16110__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__16111__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__16111 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16112__i = 0, G__16112__a = new Array(arguments.length -  2);
while (G__16112__i < G__16112__a.length) {G__16112__a[G__16112__i] = arguments[G__16112__i + 2]; ++G__16112__i;}
  more = new cljs.core.IndexedSeq(G__16112__a,0);
} 
return G__16111__delegate.call(this,x,y,more);};
G__16111.cljs$lang$maxFixedArity = 2;
G__16111.cljs$lang$applyTo = (function (arglist__16113){
var x = cljs.core.first(arglist__16113);
arglist__16113 = cljs.core.next(arglist__16113);
var y = cljs.core.first(arglist__16113);
var more = cljs.core.rest(arglist__16113);
return G__16111__delegate(x,y,more);
});
G__16111.cljs$core$IFn$_invoke$arity$variadic = G__16111__delegate;
return G__16111;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__16114 = null;
if (arguments.length > 2) {
var G__16115__i = 0, G__16115__a = new Array(arguments.length -  2);
while (G__16115__i < G__16115__a.length) {G__16115__a[G__16115__i] = arguments[G__16115__i + 2]; ++G__16115__i;}
G__16114 = new cljs.core.IndexedSeq(G__16115__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__16116__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__16116 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16117__i = 0, G__16117__a = new Array(arguments.length -  2);
while (G__16117__i < G__16117__a.length) {G__16117__a[G__16117__i] = arguments[G__16117__i + 2]; ++G__16117__i;}
  more = new cljs.core.IndexedSeq(G__16117__a,0);
} 
return G__16116__delegate.call(this,x,y,more);};
G__16116.cljs$lang$maxFixedArity = 2;
G__16116.cljs$lang$applyTo = (function (arglist__16118){
var x = cljs.core.first(arglist__16118);
arglist__16118 = cljs.core.next(arglist__16118);
var y = cljs.core.first(arglist__16118);
var more = cljs.core.rest(arglist__16118);
return G__16116__delegate(x,y,more);
});
G__16116.cljs$core$IFn$_invoke$arity$variadic = G__16116__delegate;
return G__16116;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__16119 = null;
if (arguments.length > 2) {
var G__16120__i = 0, G__16120__a = new Array(arguments.length -  2);
while (G__16120__i < G__16120__a.length) {G__16120__a[G__16120__i] = arguments[G__16120__i + 2]; ++G__16120__i;}
G__16119 = new cljs.core.IndexedSeq(G__16120__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__16125__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__16126 = y;
var G__16127 = cljs.core.first(more);
var G__16128 = cljs.core.next(more);
x = G__16126;
y = G__16127;
more = G__16128;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16125 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16129__i = 0, G__16129__a = new Array(arguments.length -  2);
while (G__16129__i < G__16129__a.length) {G__16129__a[G__16129__i] = arguments[G__16129__i + 2]; ++G__16129__i;}
  more = new cljs.core.IndexedSeq(G__16129__a,0);
} 
return G__16125__delegate.call(this,x,y,more);};
G__16125.cljs$lang$maxFixedArity = 2;
G__16125.cljs$lang$applyTo = (function (arglist__16130){
var x = cljs.core.first(arglist__16130);
arglist__16130 = cljs.core.next(arglist__16130);
var y = cljs.core.first(arglist__16130);
var more = cljs.core.rest(arglist__16130);
return G__16125__delegate(x,y,more);
});
G__16125.cljs$core$IFn$_invoke$arity$variadic = G__16125__delegate;
return G__16125;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__16131 = null;
if (arguments.length > 2) {
var G__16132__i = 0, G__16132__a = new Array(arguments.length -  2);
while (G__16132__i < G__16132__a.length) {G__16132__a[G__16132__i] = arguments[G__16132__i + 2]; ++G__16132__i;}
G__16131 = new cljs.core.IndexedSeq(G__16132__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__16133 = (n__$1 - (1));
var G__16134 = cljs.core.next(xs);
n__$1 = G__16133;
xs = G__16134;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__16138 = x;
return goog.string.buildString(G__16138);
}
});
var str__2 = (function() { 
var G__16139__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__16140 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__16141 = cljs.core.next(more);
sb = G__16140;
more = G__16141;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__16139 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__16142__i = 0, G__16142__a = new Array(arguments.length -  1);
while (G__16142__i < G__16142__a.length) {G__16142__a[G__16142__i] = arguments[G__16142__i + 1]; ++G__16142__i;}
  ys = new cljs.core.IndexedSeq(G__16142__a,0);
} 
return G__16139__delegate.call(this,x,ys);};
G__16139.cljs$lang$maxFixedArity = 1;
G__16139.cljs$lang$applyTo = (function (arglist__16143){
var x = cljs.core.first(arglist__16143);
var ys = cljs.core.rest(arglist__16143);
return G__16139__delegate(x,ys);
});
G__16139.cljs$core$IFn$_invoke$arity$variadic = G__16139__delegate;
return G__16139;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__16144 = null;
if (arguments.length > 1) {
var G__16145__i = 0, G__16145__a = new Array(arguments.length -  1);
while (G__16145__i < G__16145__a.length) {G__16145__a[G__16145__i] = arguments[G__16145__i + 1]; ++G__16145__i;}
G__16144 = new cljs.core.IndexedSeq(G__16145__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__16146 = cljs.core.next(xs);
var G__16147 = cljs.core.next(ys);
xs = G__16146;
ys = G__16147;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__16148 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__16149 = cljs.core.next(s);
res = G__16148;
s = G__16149;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__16154 = ((h + (cljs.core.hash((function (){var G__16152 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16152) : cljs.core.key.call(null,G__16152));
})()) ^ cljs.core.hash((function (){var G__16153 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16153) : cljs.core.val.call(null,G__16153));
})()))) % (4503599627370496));
var G__16155 = cljs.core.next(s);
h = G__16154;
s = G__16155;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__16156 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__16157 = cljs.core.next(s__$1);
h = G__16156;
s__$1 = G__16157;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__16168_16178 = cljs.core.seq(fn_map);
var chunk__16169_16179 = null;
var count__16170_16180 = (0);
var i__16171_16181 = (0);
while(true){
if((i__16171_16181 < count__16170_16180)){
var vec__16172_16182 = chunk__16169_16179.cljs$core$IIndexed$_nth$arity$2(null,i__16171_16181);
var key_name_16183 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16172_16182,(0),null);
var f_16184 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16172_16182,(1),null);
var str_name_16185 = (function (){var G__16173 = key_name_16183;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16173) : cljs.core.name.call(null,G__16173));
})();
(obj[str_name_16185] = f_16184);

var G__16186 = seq__16168_16178;
var G__16187 = chunk__16169_16179;
var G__16188 = count__16170_16180;
var G__16189 = (i__16171_16181 + (1));
seq__16168_16178 = G__16186;
chunk__16169_16179 = G__16187;
count__16170_16180 = G__16188;
i__16171_16181 = G__16189;
continue;
} else {
var temp__4126__auto___16190 = cljs.core.seq(seq__16168_16178);
if(temp__4126__auto___16190){
var seq__16168_16191__$1 = temp__4126__auto___16190;
if(cljs.core.chunked_seq_QMARK_(seq__16168_16191__$1)){
var c__4370__auto___16192 = (function (){var G__16174 = seq__16168_16191__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__16174) : cljs.core.chunk_first.call(null,G__16174));
})();
var G__16193 = (function (){var G__16175 = seq__16168_16191__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__16175) : cljs.core.chunk_rest.call(null,G__16175));
})();
var G__16194 = c__4370__auto___16192;
var G__16195 = cljs.core.count(c__4370__auto___16192);
var G__16196 = (0);
seq__16168_16178 = G__16193;
chunk__16169_16179 = G__16194;
count__16170_16180 = G__16195;
i__16171_16181 = G__16196;
continue;
} else {
var vec__16176_16197 = cljs.core.first(seq__16168_16191__$1);
var key_name_16198 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16176_16197,(0),null);
var f_16199 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16176_16197,(1),null);
var str_name_16200 = (function (){var G__16177 = key_name_16198;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16177) : cljs.core.name.call(null,G__16177));
})();
(obj[str_name_16200] = f_16199);

var G__16201 = cljs.core.next(seq__16168_16191__$1);
var G__16202 = null;
var G__16203 = (0);
var G__16204 = (0);
seq__16168_16178 = G__16201;
chunk__16169_16179 = G__16202;
count__16170_16180 = G__16203;
i__16171_16181 = G__16204;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__16206 = coll;
if(G__16206){
var bit__4264__auto__ = (G__16206.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4264__auto__) || (G__16206.cljs$core$IReversible$)){
return true;
} else {
if((!G__16206.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__16206);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__16206);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__16207 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__16207;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__16208 = (i - (1));
var G__16209 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__16208;
r = G__16209;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__16210__i = 0, G__16210__a = new Array(arguments.length -  0);
while (G__16210__i < G__16210__a.length) {G__16210__a[G__16210__i] = arguments[G__16210__i + 0]; ++G__16210__i;}
  xs = new cljs.core.IndexedSeq(G__16210__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__16211){
var xs = cljs.core.seq(arglist__16211);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3583__auto__ = (coll == null);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var G__16215 = coll;
if(G__16215){
var bit__4257__auto__ = (G__16215.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4257__auto__) || (G__16215.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__16217 = x;
if(G__16217){
var bit__4264__auto__ = (G__16217.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4264__auto__) || (G__16217.cljs$core$IList$)){
return true;
} else {
if((!G__16217.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__16217);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__16217);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3571__auto__ = cljs.core.not(a.ns);
if(and__3571__auto__){
return b.ns;
} else {
return and__3571__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__16224 = a.ns;
var G__16225 = b.ns;
return goog.array.defaultCompare(G__16224,G__16225);
})();
if(((0) === nsc)){
var G__16226 = a.name;
var G__16227 = b.name;
return goog.array.defaultCompare(G__16226,G__16227);
} else {
return nsc;
}
}
} else {
var G__16228 = a.name;
var G__16229 = b.name;
return goog.array.defaultCompare(G__16228,G__16229);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4004__auto__ = self__._hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__16231 = null;
var G__16231__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__16231__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__16231 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__16231__2.call(this,self__,coll);
case 3:
return G__16231__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16231.cljs$core$IFn$_invoke$arity$2 = G__16231__2;
G__16231.cljs$core$IFn$_invoke$arity$3 = G__16231__3;
return G__16231;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args16230){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16230)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__16233 = x;
if(G__16233){
var bit__4257__auto__ = (G__16233.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4257__auto__) || (G__16233.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__16235 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16235) : cljs.core.name.call(null,G__16235));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__16236 = ls.sval();
ls = G__16236;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__16238 = s;
if(G__16238){
var bit__4257__auto__ = (G__16238.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4257__auto__) || (G__16238.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__16239 = cljs.core.next(s__$1);
s__$1 = G__16239;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_16240 = (0);
var xs_16241 = cljs.core.seq(coll);
while(true){
if(xs_16241){
(ret[i_16240] = cljs.core.to_array(cljs.core.first(xs_16241)));

var G__16242 = (i_16240 + (1));
var G__16243 = cljs.core.next(xs_16241);
i_16240 = G__16242;
xs_16241 = G__16243;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16246 = (i + (1));
var G__16247 = cljs.core.next(s__$1);
i = G__16246;
s__$1 = G__16247;
continue;
} else {
return a;
}
break;
}
} else {
var n__4470__auto___16248 = size;
var i_16249 = (0);
while(true){
if((i_16249 < n__4470__auto___16248)){
(a[i_16249] = init_val_or_seq);

var G__16250 = (i_16249 + (1));
i_16249 = G__16250;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16253 = (i + (1));
var G__16254 = cljs.core.next(s__$1);
i = G__16253;
s__$1 = G__16254;
continue;
} else {
return a;
}
break;
}
} else {
var n__4470__auto___16255 = size;
var i_16256 = (0);
while(true){
if((i_16256 < n__4470__auto___16255)){
(a[i_16256] = init_val_or_seq);

var G__16257 = (i_16256 + (1));
i_16256 = G__16257;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16260 = (i + (1));
var G__16261 = cljs.core.next(s__$1);
i = G__16260;
s__$1 = G__16261;
continue;
} else {
return a;
}
break;
}
} else {
var n__4470__auto___16262 = size;
var i_16263 = (0);
while(true){
if((i_16263 < n__4470__auto___16262)){
(a[i_16263] = init_val_or_seq);

var G__16264 = (i_16263 + (1));
i_16263 = G__16264;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16267 = (i + (1));
var G__16268 = cljs.core.next(s__$1);
i = G__16267;
s__$1 = G__16268;
continue;
} else {
return a;
}
break;
}
} else {
var n__4470__auto___16269 = size;
var i_16270 = (0);
while(true){
if((i_16270 < n__4470__auto___16269)){
(a[i_16270] = init_val_or_seq);

var G__16271 = (i_16270 + (1));
i_16270 = G__16271;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__16272 = cljs.core.next(s__$1);
var G__16273 = (i - (1));
var G__16274 = (sum + (1));
s__$1 = G__16272;
i = G__16273;
sum = G__16274;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__16294__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__16294 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__16295__i = 0, G__16295__a = new Array(arguments.length -  2);
while (G__16295__i < G__16295__a.length) {G__16295__a[G__16295__i] = arguments[G__16295__i + 2]; ++G__16295__i;}
  zs = new cljs.core.IndexedSeq(G__16295__a,0);
} 
return G__16294__delegate.call(this,x,y,zs);};
G__16294.cljs$lang$maxFixedArity = 2;
G__16294.cljs$lang$applyTo = (function (arglist__16296){
var x = cljs.core.first(arglist__16296);
arglist__16296 = cljs.core.next(arglist__16296);
var y = cljs.core.first(arglist__16296);
var zs = cljs.core.rest(arglist__16296);
return G__16294__delegate(x,y,zs);
});
G__16294.cljs$core$IFn$_invoke$arity$variadic = G__16294__delegate;
return G__16294;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__16297 = null;
if (arguments.length > 2) {
var G__16298__i = 0, G__16298__a = new Array(arguments.length -  2);
while (G__16298__i < G__16298__a.length) {G__16298__a[G__16298__i] = arguments[G__16298__i + 2]; ++G__16298__i;}
G__16297 = new cljs.core.IndexedSeq(G__16298__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__16299__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__16299 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__16300__i = 0, G__16300__a = new Array(arguments.length -  4);
while (G__16300__i < G__16300__a.length) {G__16300__a[G__16300__i] = arguments[G__16300__i + 4]; ++G__16300__i;}
  more = new cljs.core.IndexedSeq(G__16300__a,0);
} 
return G__16299__delegate.call(this,a,b,c,d,more);};
G__16299.cljs$lang$maxFixedArity = 4;
G__16299.cljs$lang$applyTo = (function (arglist__16301){
var a = cljs.core.first(arglist__16301);
arglist__16301 = cljs.core.next(arglist__16301);
var b = cljs.core.first(arglist__16301);
arglist__16301 = cljs.core.next(arglist__16301);
var c = cljs.core.first(arglist__16301);
arglist__16301 = cljs.core.next(arglist__16301);
var d = cljs.core.first(arglist__16301);
var more = cljs.core.rest(arglist__16301);
return G__16299__delegate(a,b,c,d,more);
});
G__16299.cljs$core$IFn$_invoke$arity$variadic = G__16299__delegate;
return G__16299;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__16302 = null;
if (arguments.length > 4) {
var G__16303__i = 0, G__16303__a = new Array(arguments.length -  4);
while (G__16303__i < G__16303__a.length) {G__16303__a[G__16303__i] = arguments[G__16303__i + 4]; ++G__16303__i;}
G__16302 = new cljs.core.IndexedSeq(G__16303__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__16302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__16304__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__16305 = ntcoll;
var G__16306 = cljs.core.first(vals);
var G__16307 = cljs.core.next(vals);
tcoll = G__16305;
val = G__16306;
vals = G__16307;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16304 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__16308__i = 0, G__16308__a = new Array(arguments.length -  2);
while (G__16308__i < G__16308__a.length) {G__16308__a[G__16308__i] = arguments[G__16308__i + 2]; ++G__16308__i;}
  vals = new cljs.core.IndexedSeq(G__16308__a,0);
} 
return G__16304__delegate.call(this,tcoll,val,vals);};
G__16304.cljs$lang$maxFixedArity = 2;
G__16304.cljs$lang$applyTo = (function (arglist__16309){
var tcoll = cljs.core.first(arglist__16309);
arglist__16309 = cljs.core.next(arglist__16309);
var val = cljs.core.first(arglist__16309);
var vals = cljs.core.rest(arglist__16309);
return G__16304__delegate(tcoll,val,vals);
});
G__16304.cljs$core$IFn$_invoke$arity$variadic = G__16304__delegate;
return G__16304;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__16310 = null;
if (arguments.length > 2) {
var G__16311__i = 0, G__16311__a = new Array(arguments.length -  2);
while (G__16311__i < G__16311__a.length) {G__16311__a[G__16311__i] = arguments[G__16311__i + 2]; ++G__16311__i;}
G__16310 = new cljs.core.IndexedSeq(G__16311__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__16310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__16312__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__16313 = ntcoll;
var G__16314 = cljs.core.first(kvs);
var G__16315 = cljs.core.second(kvs);
var G__16316 = cljs.core.nnext(kvs);
tcoll = G__16313;
key = G__16314;
val = G__16315;
kvs = G__16316;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16312 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__16317__i = 0, G__16317__a = new Array(arguments.length -  3);
while (G__16317__i < G__16317__a.length) {G__16317__a[G__16317__i] = arguments[G__16317__i + 3]; ++G__16317__i;}
  kvs = new cljs.core.IndexedSeq(G__16317__a,0);
} 
return G__16312__delegate.call(this,tcoll,key,val,kvs);};
G__16312.cljs$lang$maxFixedArity = 3;
G__16312.cljs$lang$applyTo = (function (arglist__16318){
var tcoll = cljs.core.first(arglist__16318);
arglist__16318 = cljs.core.next(arglist__16318);
var key = cljs.core.first(arglist__16318);
arglist__16318 = cljs.core.next(arglist__16318);
var val = cljs.core.first(arglist__16318);
var kvs = cljs.core.rest(arglist__16318);
return G__16312__delegate(tcoll,key,val,kvs);
});
G__16312.cljs$core$IFn$_invoke$arity$variadic = G__16312__delegate;
return G__16312;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__16319 = null;
if (arguments.length > 3) {
var G__16320__i = 0, G__16320__a = new Array(arguments.length -  3);
while (G__16320__i < G__16320__a.length) {G__16320__a[G__16320__i] = arguments[G__16320__i + 3]; ++G__16320__i;}
G__16319 = new cljs.core.IndexedSeq(G__16320__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__16319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__16321__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__16322 = ntcoll;
var G__16323 = cljs.core.first(ks);
var G__16324 = cljs.core.next(ks);
tcoll = G__16322;
key = G__16323;
ks = G__16324;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16321 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__16325__i = 0, G__16325__a = new Array(arguments.length -  2);
while (G__16325__i < G__16325__a.length) {G__16325__a[G__16325__i] = arguments[G__16325__i + 2]; ++G__16325__i;}
  ks = new cljs.core.IndexedSeq(G__16325__a,0);
} 
return G__16321__delegate.call(this,tcoll,key,ks);};
G__16321.cljs$lang$maxFixedArity = 2;
G__16321.cljs$lang$applyTo = (function (arglist__16326){
var tcoll = cljs.core.first(arglist__16326);
arglist__16326 = cljs.core.next(arglist__16326);
var key = cljs.core.first(arglist__16326);
var ks = cljs.core.rest(arglist__16326);
return G__16321__delegate(tcoll,key,ks);
});
G__16321.cljs$core$IFn$_invoke$arity$variadic = G__16321__delegate;
return G__16321;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__16327 = null;
if (arguments.length > 2) {
var G__16328__i = 0, G__16328__a = new Array(arguments.length -  2);
while (G__16328__i < G__16328__a.length) {G__16328__a[G__16328__i] = arguments[G__16328__i + 2]; ++G__16328__i;}
G__16327 = new cljs.core.IndexedSeq(G__16328__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__16327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__16329__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__16330 = ntcoll;
var G__16331 = cljs.core.first(vals);
var G__16332 = cljs.core.next(vals);
tcoll = G__16330;
val = G__16331;
vals = G__16332;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16329 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__16333__i = 0, G__16333__a = new Array(arguments.length -  2);
while (G__16333__i < G__16333__a.length) {G__16333__a[G__16333__i] = arguments[G__16333__i + 2]; ++G__16333__i;}
  vals = new cljs.core.IndexedSeq(G__16333__a,0);
} 
return G__16329__delegate.call(this,tcoll,val,vals);};
G__16329.cljs$lang$maxFixedArity = 2;
G__16329.cljs$lang$applyTo = (function (arglist__16334){
var tcoll = cljs.core.first(arglist__16334);
arglist__16334 = cljs.core.next(arglist__16334);
var val = cljs.core.first(arglist__16334);
var vals = cljs.core.rest(arglist__16334);
return G__16329__delegate(tcoll,val,vals);
});
G__16329.cljs$core$IFn$_invoke$arity$variadic = G__16329__delegate;
return G__16329;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__16335 = null;
if (arguments.length > 2) {
var G__16336__i = 0, G__16336__a = new Array(arguments.length -  2);
while (G__16336__i < G__16336__a.length) {G__16336__a[G__16336__i] = arguments[G__16336__i + 2]; ++G__16336__i;}
G__16335 = new cljs.core.IndexedSeq(G__16336__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__16335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4514 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4514);
} else {
var G__16547 = a4514;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16547) : f.call(null,G__16547));
}
} else {
var b4515 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4514,b4515);
} else {
var G__16548 = a4514;
var G__16549 = b4515;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16548,G__16549) : f.call(null,G__16548,G__16549));
}
} else {
var c4516 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4514,b4515,c4516);
} else {
var G__16550 = a4514;
var G__16551 = b4515;
var G__16552 = c4516;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16550,G__16551,G__16552) : f.call(null,G__16550,G__16551,G__16552));
}
} else {
var d4517 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4514,b4515,c4516,d4517);
} else {
var G__16553 = a4514;
var G__16554 = b4515;
var G__16555 = c4516;
var G__16556 = d4517;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16553,G__16554,G__16555,G__16556) : f.call(null,G__16553,G__16554,G__16555,G__16556));
}
} else {
var e4518 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4514,b4515,c4516,d4517,e4518);
} else {
var G__16557 = a4514;
var G__16558 = b4515;
var G__16559 = c4516;
var G__16560 = d4517;
var G__16561 = e4518;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__16557,G__16558,G__16559,G__16560,G__16561) : f.call(null,G__16557,G__16558,G__16559,G__16560,G__16561));
}
} else {
var f4519 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4514,b4515,c4516,d4517,e4518,f4519);
} else {
var G__16562 = a4514;
var G__16563 = b4515;
var G__16564 = c4516;
var G__16565 = d4517;
var G__16566 = e4518;
var G__16567 = f4519;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__16562,G__16563,G__16564,G__16565,G__16566,G__16567) : f.call(null,G__16562,G__16563,G__16564,G__16565,G__16566,G__16567));
}
} else {
var g4520 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4514,b4515,c4516,d4517,e4518,f4519,g4520);
} else {
var G__16568 = a4514;
var G__16569 = b4515;
var G__16570 = c4516;
var G__16571 = d4517;
var G__16572 = e4518;
var G__16573 = f4519;
var G__16574 = g4520;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574) : f.call(null,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574));
}
} else {
var h4521 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521);
} else {
var G__16575 = a4514;
var G__16576 = b4515;
var G__16577 = c4516;
var G__16578 = d4517;
var G__16579 = e4518;
var G__16580 = f4519;
var G__16581 = g4520;
var G__16582 = h4521;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582) : f.call(null,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582));
}
} else {
var i4522 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522);
} else {
var G__16583 = a4514;
var G__16584 = b4515;
var G__16585 = c4516;
var G__16586 = d4517;
var G__16587 = e4518;
var G__16588 = f4519;
var G__16589 = g4520;
var G__16590 = h4521;
var G__16591 = i4522;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591) : f.call(null,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591));
}
} else {
var j4523 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523);
} else {
var G__16592 = a4514;
var G__16593 = b4515;
var G__16594 = c4516;
var G__16595 = d4517;
var G__16596 = e4518;
var G__16597 = f4519;
var G__16598 = g4520;
var G__16599 = h4521;
var G__16600 = i4522;
var G__16601 = j4523;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601) : f.call(null,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601));
}
} else {
var k4524 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524);
} else {
var G__16602 = a4514;
var G__16603 = b4515;
var G__16604 = c4516;
var G__16605 = d4517;
var G__16606 = e4518;
var G__16607 = f4519;
var G__16608 = g4520;
var G__16609 = h4521;
var G__16610 = i4522;
var G__16611 = j4523;
var G__16612 = k4524;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612) : f.call(null,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612));
}
} else {
var l4525 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525);
} else {
var G__16613 = a4514;
var G__16614 = b4515;
var G__16615 = c4516;
var G__16616 = d4517;
var G__16617 = e4518;
var G__16618 = f4519;
var G__16619 = g4520;
var G__16620 = h4521;
var G__16621 = i4522;
var G__16622 = j4523;
var G__16623 = k4524;
var G__16624 = l4525;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624) : f.call(null,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624));
}
} else {
var m4526 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526);
} else {
var G__16625 = a4514;
var G__16626 = b4515;
var G__16627 = c4516;
var G__16628 = d4517;
var G__16629 = e4518;
var G__16630 = f4519;
var G__16631 = g4520;
var G__16632 = h4521;
var G__16633 = i4522;
var G__16634 = j4523;
var G__16635 = k4524;
var G__16636 = l4525;
var G__16637 = m4526;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637) : f.call(null,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637));
}
} else {
var n4527 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527);
} else {
var G__16638 = a4514;
var G__16639 = b4515;
var G__16640 = c4516;
var G__16641 = d4517;
var G__16642 = e4518;
var G__16643 = f4519;
var G__16644 = g4520;
var G__16645 = h4521;
var G__16646 = i4522;
var G__16647 = j4523;
var G__16648 = k4524;
var G__16649 = l4525;
var G__16650 = m4526;
var G__16651 = n4527;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651) : f.call(null,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651));
}
} else {
var o4528 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528);
} else {
var G__16652 = a4514;
var G__16653 = b4515;
var G__16654 = c4516;
var G__16655 = d4517;
var G__16656 = e4518;
var G__16657 = f4519;
var G__16658 = g4520;
var G__16659 = h4521;
var G__16660 = i4522;
var G__16661 = j4523;
var G__16662 = k4524;
var G__16663 = l4525;
var G__16664 = m4526;
var G__16665 = n4527;
var G__16666 = o4528;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666) : f.call(null,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666));
}
} else {
var p4529 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528,p4529);
} else {
var G__16667 = a4514;
var G__16668 = b4515;
var G__16669 = c4516;
var G__16670 = d4517;
var G__16671 = e4518;
var G__16672 = f4519;
var G__16673 = g4520;
var G__16674 = h4521;
var G__16675 = i4522;
var G__16676 = j4523;
var G__16677 = k4524;
var G__16678 = l4525;
var G__16679 = m4526;
var G__16680 = n4527;
var G__16681 = o4528;
var G__16682 = p4529;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682) : f.call(null,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682));
}
} else {
var q4530 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528,p4529,q4530);
} else {
var G__16683 = a4514;
var G__16684 = b4515;
var G__16685 = c4516;
var G__16686 = d4517;
var G__16687 = e4518;
var G__16688 = f4519;
var G__16689 = g4520;
var G__16690 = h4521;
var G__16691 = i4522;
var G__16692 = j4523;
var G__16693 = k4524;
var G__16694 = l4525;
var G__16695 = m4526;
var G__16696 = n4527;
var G__16697 = o4528;
var G__16698 = p4529;
var G__16699 = q4530;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699) : f.call(null,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699));
}
} else {
var r4531 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528,p4529,q4530,r4531);
} else {
var G__16700 = a4514;
var G__16701 = b4515;
var G__16702 = c4516;
var G__16703 = d4517;
var G__16704 = e4518;
var G__16705 = f4519;
var G__16706 = g4520;
var G__16707 = h4521;
var G__16708 = i4522;
var G__16709 = j4523;
var G__16710 = k4524;
var G__16711 = l4525;
var G__16712 = m4526;
var G__16713 = n4527;
var G__16714 = o4528;
var G__16715 = p4529;
var G__16716 = q4530;
var G__16717 = r4531;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717) : f.call(null,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717));
}
} else {
var s4532 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528,p4529,q4530,r4531,s4532);
} else {
var G__16718 = a4514;
var G__16719 = b4515;
var G__16720 = c4516;
var G__16721 = d4517;
var G__16722 = e4518;
var G__16723 = f4519;
var G__16724 = g4520;
var G__16725 = h4521;
var G__16726 = i4522;
var G__16727 = j4523;
var G__16728 = k4524;
var G__16729 = l4525;
var G__16730 = m4526;
var G__16731 = n4527;
var G__16732 = o4528;
var G__16733 = p4529;
var G__16734 = q4530;
var G__16735 = r4531;
var G__16736 = s4532;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736) : f.call(null,G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736));
}
} else {
var t4533 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4514,b4515,c4516,d4517,e4518,f4519,g4520,h4521,i4522,j4523,k4524,l4525,m4526,n4527,o4528,p4529,q4530,r4531,s4532,t4533);
} else {
var G__16737 = a4514;
var G__16738 = b4515;
var G__16739 = c4516;
var G__16740 = d4517;
var G__16741 = e4518;
var G__16742 = f4519;
var G__16743 = g4520;
var G__16744 = h4521;
var G__16745 = i4522;
var G__16746 = j4523;
var G__16747 = k4524;
var G__16748 = l4525;
var G__16749 = m4526;
var G__16750 = n4527;
var G__16751 = o4528;
var G__16752 = p4529;
var G__16753 = q4530;
var G__16754 = r4531;
var G__16755 = s4532;
var G__16756 = t4533;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756) : f.call(null,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__16757__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__16757 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__16758__i = 0, G__16758__a = new Array(arguments.length -  5);
while (G__16758__i < G__16758__a.length) {G__16758__a[G__16758__i] = arguments[G__16758__i + 5]; ++G__16758__i;}
  args = new cljs.core.IndexedSeq(G__16758__a,0);
} 
return G__16757__delegate.call(this,f,a,b,c,d,args);};
G__16757.cljs$lang$maxFixedArity = 5;
G__16757.cljs$lang$applyTo = (function (arglist__16759){
var f = cljs.core.first(arglist__16759);
arglist__16759 = cljs.core.next(arglist__16759);
var a = cljs.core.first(arglist__16759);
arglist__16759 = cljs.core.next(arglist__16759);
var b = cljs.core.first(arglist__16759);
arglist__16759 = cljs.core.next(arglist__16759);
var c = cljs.core.first(arglist__16759);
arglist__16759 = cljs.core.next(arglist__16759);
var d = cljs.core.first(arglist__16759);
var args = cljs.core.rest(arglist__16759);
return G__16757__delegate(f,a,b,c,d,args);
});
G__16757.cljs$core$IFn$_invoke$arity$variadic = G__16757__delegate;
return G__16757;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__16760 = null;
if (arguments.length > 5) {
var G__16761__i = 0, G__16761__a = new Array(arguments.length -  5);
while (G__16761__i < G__16761__a.length) {G__16761__a[G__16761__i] = arguments[G__16761__i + 5]; ++G__16761__i;}
G__16760 = new cljs.core.IndexedSeq(G__16761__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__16760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__16777 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16777) : f.call(null,G__16777));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__16778 = cljs.core.meta(obj);
var G__16779 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16778,G__16779) : f.call(null,G__16778,G__16779));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__16780 = cljs.core.meta(obj);
var G__16781 = a;
var G__16782 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16780,G__16781,G__16782) : f.call(null,G__16780,G__16781,G__16782));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__16783 = cljs.core.meta(obj);
var G__16784 = a;
var G__16785 = b;
var G__16786 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16783,G__16784,G__16785,G__16786) : f.call(null,G__16783,G__16784,G__16785,G__16786));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__16787 = cljs.core.meta(obj);
var G__16788 = a;
var G__16789 = b;
var G__16790 = c;
var G__16791 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__16787,G__16788,G__16789,G__16790,G__16791) : f.call(null,G__16787,G__16788,G__16789,G__16790,G__16791));
})());
});
var vary_meta__7 = (function() { 
var G__16792__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__16792 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__16793__i = 0, G__16793__a = new Array(arguments.length -  6);
while (G__16793__i < G__16793__a.length) {G__16793__a[G__16793__i] = arguments[G__16793__i + 6]; ++G__16793__i;}
  args = new cljs.core.IndexedSeq(G__16793__a,0);
} 
return G__16792__delegate.call(this,obj,f,a,b,c,d,args);};
G__16792.cljs$lang$maxFixedArity = 6;
G__16792.cljs$lang$applyTo = (function (arglist__16794){
var obj = cljs.core.first(arglist__16794);
arglist__16794 = cljs.core.next(arglist__16794);
var f = cljs.core.first(arglist__16794);
arglist__16794 = cljs.core.next(arglist__16794);
var a = cljs.core.first(arglist__16794);
arglist__16794 = cljs.core.next(arglist__16794);
var b = cljs.core.first(arglist__16794);
arglist__16794 = cljs.core.next(arglist__16794);
var c = cljs.core.first(arglist__16794);
arglist__16794 = cljs.core.next(arglist__16794);
var d = cljs.core.first(arglist__16794);
var args = cljs.core.rest(arglist__16794);
return G__16792__delegate(obj,f,a,b,c,d,args);
});
G__16792.cljs$core$IFn$_invoke$arity$variadic = G__16792__delegate;
return G__16792;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__16795 = null;
if (arguments.length > 6) {
var G__16796__i = 0, G__16796__a = new Array(arguments.length -  6);
while (G__16796__i < G__16796__a.length) {G__16796__a[G__16796__i] = arguments[G__16796__i + 6]; ++G__16796__i;}
G__16795 = new cljs.core.IndexedSeq(G__16796__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__16795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__16797__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__16797 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16798__i = 0, G__16798__a = new Array(arguments.length -  2);
while (G__16798__i < G__16798__a.length) {G__16798__a[G__16798__i] = arguments[G__16798__i + 2]; ++G__16798__i;}
  more = new cljs.core.IndexedSeq(G__16798__a,0);
} 
return G__16797__delegate.call(this,x,y,more);};
G__16797.cljs$lang$maxFixedArity = 2;
G__16797.cljs$lang$applyTo = (function (arglist__16799){
var x = cljs.core.first(arglist__16799);
arglist__16799 = cljs.core.next(arglist__16799);
var y = cljs.core.first(arglist__16799);
var more = cljs.core.rest(arglist__16799);
return G__16797__delegate(x,y,more);
});
G__16797.cljs$core$IFn$_invoke$arity$variadic = G__16797__delegate;
return G__16797;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__16800 = null;
if (arguments.length > 2) {
var G__16801__i = 0, G__16801__a = new Array(arguments.length -  2);
while (G__16801__i < G__16801__a.length) {G__16801__a[G__16801__i] = arguments[G__16801__i + 2]; ++G__16801__i;}
G__16800 = new cljs.core.IndexedSeq(G__16801__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t16805 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t16805 = (function (nil_iter,meta16806){
this.nil_iter = nil_iter;
this.meta16806 = meta16806;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t16805.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t16805.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t16805.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t16805.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_16807){
var self__ = this;
var _16807__$1 = this;
return self__.meta16806;
});

cljs.core.t16805.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_16807,meta16806__$1){
var self__ = this;
var _16807__$1 = this;
return (new cljs.core.t16805(self__.nil_iter,meta16806__$1));
});

cljs.core.t16805.cljs$lang$type = true;

cljs.core.t16805.cljs$lang$ctorStr = "cljs.core/t16805";

cljs.core.t16805.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/t16805");
});

cljs.core.__GT_t16805 = (function __GT_t16805(nil_iter__$1,meta16806){
return (new cljs.core.t16805(nil_iter__$1,meta16806));
});

}

return (new cljs.core.t16805(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3571__auto__ = !((lt.stepper == null));
if(and__3571__auto__){
return self__.iter.hasNext();
} else {
return and__3571__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__16808 = lt;
var G__16809 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__16808,G__16809) : self__.xform.call(null,G__16808,G__16809));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__16810 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__16810) : self__.xform.call(null,G__16810));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__16812 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__16812) : xform.call(null,G__16812));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__16814 = cljs.core.next(iters__$1);
iters__$1 = G__16814;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4470__auto___16815 = self__.iters.length;
var i_16816 = (0);
while(true){
if((i_16816 < n__4470__auto___16815)){
(self__.nexts[i_16816] = (self__.iters[i_16816]).next());

var G__16817 = (i_16816 + (1));
i_16816 = G__16817;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3571__auto__ = !((lt.stepper == null));
if(and__3571__auto__){
return this$.hasNext();
} else {
return and__3571__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__16813 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__16813) : self__.xform.call(null,G__16813));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__16822 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__16822) : xform.call(null,G__16822));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__16823_16827 = cljs.core.seq(colls);
var chunk__16824_16828 = null;
var count__16825_16829 = (0);
var i__16826_16830 = (0);
while(true){
if((i__16826_16830 < count__16825_16829)){
var coll_16831 = chunk__16824_16828.cljs$core$IIndexed$_nth$arity$2(null,i__16826_16830);
iters.push(cljs.core.iter(coll_16831));

var G__16832 = seq__16823_16827;
var G__16833 = chunk__16824_16828;
var G__16834 = count__16825_16829;
var G__16835 = (i__16826_16830 + (1));
seq__16823_16827 = G__16832;
chunk__16824_16828 = G__16833;
count__16825_16829 = G__16834;
i__16826_16830 = G__16835;
continue;
} else {
var temp__4126__auto___16836 = cljs.core.seq(seq__16823_16827);
if(temp__4126__auto___16836){
var seq__16823_16837__$1 = temp__4126__auto___16836;
if(cljs.core.chunked_seq_QMARK_(seq__16823_16837__$1)){
var c__4370__auto___16838 = cljs.core.chunk_first(seq__16823_16837__$1);
var G__16839 = cljs.core.chunk_rest(seq__16823_16837__$1);
var G__16840 = c__4370__auto___16838;
var G__16841 = cljs.core.count(c__4370__auto___16838);
var G__16842 = (0);
seq__16823_16827 = G__16839;
chunk__16824_16828 = G__16840;
count__16825_16829 = G__16841;
i__16826_16830 = G__16842;
continue;
} else {
var coll_16843 = cljs.core.first(seq__16823_16837__$1);
iters.push(cljs.core.iter(coll_16843));

var G__16844 = cljs.core.next(seq__16823_16837__$1);
var G__16845 = null;
var G__16846 = (0);
var G__16847 = (0);
seq__16823_16827 = G__16844;
chunk__16824_16828 = G__16845;
count__16825_16829 = G__16846;
i__16826_16830 = G__16847;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3583__auto__ = cljs.core.seq(coll);
if(or__3583__auto__){
return or__3583__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__16848__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__16848 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16849__i = 0, G__16849__a = new Array(arguments.length -  2);
while (G__16849__i < G__16849__a.length) {G__16849__a[G__16849__i] = arguments[G__16849__i + 2]; ++G__16849__i;}
  colls = new cljs.core.IndexedSeq(G__16849__a,0);
} 
return G__16848__delegate.call(this,xform,coll,colls);};
G__16848.cljs$lang$maxFixedArity = 2;
G__16848.cljs$lang$applyTo = (function (arglist__16850){
var xform = cljs.core.first(arglist__16850);
arglist__16850 = cljs.core.next(arglist__16850);
var coll = cljs.core.first(arglist__16850);
var colls = cljs.core.rest(arglist__16850);
return G__16848__delegate(xform,coll,colls);
});
G__16848.cljs$core$IFn$_invoke$arity$variadic = G__16848__delegate;
return G__16848;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__16851 = null;
if (arguments.length > 2) {
var G__16852__i = 0, G__16852__a = new Array(arguments.length -  2);
while (G__16852__i < G__16852__a.length) {G__16852__a[G__16852__i] = arguments[G__16852__i + 2]; ++G__16852__i;}
G__16851 = new cljs.core.IndexedSeq(G__16852__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__16851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__16854 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16854) : pred.call(null,G__16854));
})())){
var G__16855 = pred;
var G__16856 = cljs.core.next(coll);
pred = G__16855;
coll = G__16856;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3583__auto__ = (function (){var G__16860 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16860) : pred.call(null,G__16860));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var G__16861 = pred;
var G__16862 = cljs.core.next(coll);
pred = G__16861;
coll = G__16862;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__16869 = null;
var G__16869__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__16869__1 = (function (x){
return cljs.core.not((function (){var G__16866 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16866) : f.call(null,G__16866));
})());
});
var G__16869__2 = (function (x,y){
return cljs.core.not((function (){var G__16867 = x;
var G__16868 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16867,G__16868) : f.call(null,G__16867,G__16868));
})());
});
var G__16869__3 = (function() { 
var G__16870__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__16870 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__16871__i = 0, G__16871__a = new Array(arguments.length -  2);
while (G__16871__i < G__16871__a.length) {G__16871__a[G__16871__i] = arguments[G__16871__i + 2]; ++G__16871__i;}
  zs = new cljs.core.IndexedSeq(G__16871__a,0);
} 
return G__16870__delegate.call(this,x,y,zs);};
G__16870.cljs$lang$maxFixedArity = 2;
G__16870.cljs$lang$applyTo = (function (arglist__16872){
var x = cljs.core.first(arglist__16872);
arglist__16872 = cljs.core.next(arglist__16872);
var y = cljs.core.first(arglist__16872);
var zs = cljs.core.rest(arglist__16872);
return G__16870__delegate(x,y,zs);
});
G__16870.cljs$core$IFn$_invoke$arity$variadic = G__16870__delegate;
return G__16870;
})()
;
G__16869 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__16869__0.call(this);
case 1:
return G__16869__1.call(this,x);
case 2:
return G__16869__2.call(this,x,y);
default:
var G__16873 = null;
if (arguments.length > 2) {
var G__16874__i = 0, G__16874__a = new Array(arguments.length -  2);
while (G__16874__i < G__16874__a.length) {G__16874__a[G__16874__i] = arguments[G__16874__i + 2]; ++G__16874__i;}
G__16873 = new cljs.core.IndexedSeq(G__16874__a,0);
}
return G__16869__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16869.cljs$lang$maxFixedArity = 2;
G__16869.cljs$lang$applyTo = G__16869__3.cljs$lang$applyTo;
G__16869.cljs$core$IFn$_invoke$arity$0 = G__16869__0;
G__16869.cljs$core$IFn$_invoke$arity$1 = G__16869__1;
G__16869.cljs$core$IFn$_invoke$arity$2 = G__16869__2;
G__16869.cljs$core$IFn$_invoke$arity$variadic = G__16869__3.cljs$core$IFn$_invoke$arity$variadic;
return G__16869;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__16875__delegate = function (args){
return x;
};
var G__16875 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16876__i = 0, G__16876__a = new Array(arguments.length -  0);
while (G__16876__i < G__16876__a.length) {G__16876__a[G__16876__i] = arguments[G__16876__i + 0]; ++G__16876__i;}
  args = new cljs.core.IndexedSeq(G__16876__a,0);
} 
return G__16875__delegate.call(this,args);};
G__16875.cljs$lang$maxFixedArity = 0;
G__16875.cljs$lang$applyTo = (function (arglist__16877){
var args = cljs.core.seq(arglist__16877);
return G__16875__delegate(args);
});
G__16875.cljs$core$IFn$_invoke$arity$variadic = G__16875__delegate;
return G__16875;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__16932 = null;
var G__16932__0 = (function (){
var G__16905 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16905) : f.call(null,G__16905));
});
var G__16932__1 = (function (x){
var G__16906 = (function (){var G__16907 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16907) : g.call(null,G__16907));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16906) : f.call(null,G__16906));
});
var G__16932__2 = (function (x,y){
var G__16908 = (function (){var G__16909 = x;
var G__16910 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16909,G__16910) : g.call(null,G__16909,G__16910));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16908) : f.call(null,G__16908));
});
var G__16932__3 = (function (x,y,z){
var G__16911 = (function (){var G__16912 = x;
var G__16913 = y;
var G__16914 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16912,G__16913,G__16914) : g.call(null,G__16912,G__16913,G__16914));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16911) : f.call(null,G__16911));
});
var G__16932__4 = (function() { 
var G__16933__delegate = function (x,y,z,args){
var G__16915 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16915) : f.call(null,G__16915));
};
var G__16933 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16934__i = 0, G__16934__a = new Array(arguments.length -  3);
while (G__16934__i < G__16934__a.length) {G__16934__a[G__16934__i] = arguments[G__16934__i + 3]; ++G__16934__i;}
  args = new cljs.core.IndexedSeq(G__16934__a,0);
} 
return G__16933__delegate.call(this,x,y,z,args);};
G__16933.cljs$lang$maxFixedArity = 3;
G__16933.cljs$lang$applyTo = (function (arglist__16935){
var x = cljs.core.first(arglist__16935);
arglist__16935 = cljs.core.next(arglist__16935);
var y = cljs.core.first(arglist__16935);
arglist__16935 = cljs.core.next(arglist__16935);
var z = cljs.core.first(arglist__16935);
var args = cljs.core.rest(arglist__16935);
return G__16933__delegate(x,y,z,args);
});
G__16933.cljs$core$IFn$_invoke$arity$variadic = G__16933__delegate;
return G__16933;
})()
;
G__16932 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16932__0.call(this);
case 1:
return G__16932__1.call(this,x);
case 2:
return G__16932__2.call(this,x,y);
case 3:
return G__16932__3.call(this,x,y,z);
default:
var G__16936 = null;
if (arguments.length > 3) {
var G__16937__i = 0, G__16937__a = new Array(arguments.length -  3);
while (G__16937__i < G__16937__a.length) {G__16937__a[G__16937__i] = arguments[G__16937__i + 3]; ++G__16937__i;}
G__16936 = new cljs.core.IndexedSeq(G__16937__a,0);
}
return G__16932__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16932.cljs$lang$maxFixedArity = 3;
G__16932.cljs$lang$applyTo = G__16932__4.cljs$lang$applyTo;
G__16932.cljs$core$IFn$_invoke$arity$0 = G__16932__0;
G__16932.cljs$core$IFn$_invoke$arity$1 = G__16932__1;
G__16932.cljs$core$IFn$_invoke$arity$2 = G__16932__2;
G__16932.cljs$core$IFn$_invoke$arity$3 = G__16932__3;
G__16932.cljs$core$IFn$_invoke$arity$variadic = G__16932__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16932;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__16938 = null;
var G__16938__0 = (function (){
var G__16916 = (function (){var G__16917 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16917) : g.call(null,G__16917));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16916) : f.call(null,G__16916));
});
var G__16938__1 = (function (x){
var G__16918 = (function (){var G__16919 = (function (){var G__16920 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16920) : h.call(null,G__16920));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16919) : g.call(null,G__16919));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16918) : f.call(null,G__16918));
});
var G__16938__2 = (function (x,y){
var G__16921 = (function (){var G__16922 = (function (){var G__16923 = x;
var G__16924 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16923,G__16924) : h.call(null,G__16923,G__16924));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16922) : g.call(null,G__16922));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16921) : f.call(null,G__16921));
});
var G__16938__3 = (function (x,y,z){
var G__16925 = (function (){var G__16926 = (function (){var G__16927 = x;
var G__16928 = y;
var G__16929 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16927,G__16928,G__16929) : h.call(null,G__16927,G__16928,G__16929));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16926) : g.call(null,G__16926));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16925) : f.call(null,G__16925));
});
var G__16938__4 = (function() { 
var G__16939__delegate = function (x,y,z,args){
var G__16930 = (function (){var G__16931 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16931) : g.call(null,G__16931));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16930) : f.call(null,G__16930));
};
var G__16939 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16940__i = 0, G__16940__a = new Array(arguments.length -  3);
while (G__16940__i < G__16940__a.length) {G__16940__a[G__16940__i] = arguments[G__16940__i + 3]; ++G__16940__i;}
  args = new cljs.core.IndexedSeq(G__16940__a,0);
} 
return G__16939__delegate.call(this,x,y,z,args);};
G__16939.cljs$lang$maxFixedArity = 3;
G__16939.cljs$lang$applyTo = (function (arglist__16941){
var x = cljs.core.first(arglist__16941);
arglist__16941 = cljs.core.next(arglist__16941);
var y = cljs.core.first(arglist__16941);
arglist__16941 = cljs.core.next(arglist__16941);
var z = cljs.core.first(arglist__16941);
var args = cljs.core.rest(arglist__16941);
return G__16939__delegate(x,y,z,args);
});
G__16939.cljs$core$IFn$_invoke$arity$variadic = G__16939__delegate;
return G__16939;
})()
;
G__16938 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16938__0.call(this);
case 1:
return G__16938__1.call(this,x);
case 2:
return G__16938__2.call(this,x,y);
case 3:
return G__16938__3.call(this,x,y,z);
default:
var G__16942 = null;
if (arguments.length > 3) {
var G__16943__i = 0, G__16943__a = new Array(arguments.length -  3);
while (G__16943__i < G__16943__a.length) {G__16943__a[G__16943__i] = arguments[G__16943__i + 3]; ++G__16943__i;}
G__16942 = new cljs.core.IndexedSeq(G__16943__a,0);
}
return G__16938__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16938.cljs$lang$maxFixedArity = 3;
G__16938.cljs$lang$applyTo = G__16938__4.cljs$lang$applyTo;
G__16938.cljs$core$IFn$_invoke$arity$0 = G__16938__0;
G__16938.cljs$core$IFn$_invoke$arity$1 = G__16938__1;
G__16938.cljs$core$IFn$_invoke$arity$2 = G__16938__2;
G__16938.cljs$core$IFn$_invoke$arity$3 = G__16938__3;
G__16938.cljs$core$IFn$_invoke$arity$variadic = G__16938__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16938;
})()
});
var comp__4 = (function() { 
var G__16944__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__16945__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__16946 = cljs.core.first(fs__$2).call(null,ret);
var G__16947 = cljs.core.next(fs__$2);
ret = G__16946;
fs__$2 = G__16947;
continue;
} else {
return ret;
}
break;
}
};
var G__16945 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16948__i = 0, G__16948__a = new Array(arguments.length -  0);
while (G__16948__i < G__16948__a.length) {G__16948__a[G__16948__i] = arguments[G__16948__i + 0]; ++G__16948__i;}
  args = new cljs.core.IndexedSeq(G__16948__a,0);
} 
return G__16945__delegate.call(this,args);};
G__16945.cljs$lang$maxFixedArity = 0;
G__16945.cljs$lang$applyTo = (function (arglist__16949){
var args = cljs.core.seq(arglist__16949);
return G__16945__delegate(args);
});
G__16945.cljs$core$IFn$_invoke$arity$variadic = G__16945__delegate;
return G__16945;
})()
;
;})(fs__$1))
};
var G__16944 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16950__i = 0, G__16950__a = new Array(arguments.length -  3);
while (G__16950__i < G__16950__a.length) {G__16950__a[G__16950__i] = arguments[G__16950__i + 3]; ++G__16950__i;}
  fs = new cljs.core.IndexedSeq(G__16950__a,0);
} 
return G__16944__delegate.call(this,f1,f2,f3,fs);};
G__16944.cljs$lang$maxFixedArity = 3;
G__16944.cljs$lang$applyTo = (function (arglist__16951){
var f1 = cljs.core.first(arglist__16951);
arglist__16951 = cljs.core.next(arglist__16951);
var f2 = cljs.core.first(arglist__16951);
arglist__16951 = cljs.core.next(arglist__16951);
var f3 = cljs.core.first(arglist__16951);
var fs = cljs.core.rest(arglist__16951);
return G__16944__delegate(f1,f2,f3,fs);
});
G__16944.cljs$core$IFn$_invoke$arity$variadic = G__16944__delegate;
return G__16944;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__16952 = null;
if (arguments.length > 3) {
var G__16953__i = 0, G__16953__a = new Array(arguments.length -  3);
while (G__16953__i < G__16953__a.length) {G__16953__a[G__16953__i] = arguments[G__16953__i + 3]; ++G__16953__i;}
G__16952 = new cljs.core.IndexedSeq(G__16953__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__16952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__17038 = null;
var G__17038__0 = (function (){
var G__16996 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16996) : f.call(null,G__16996));
});
var G__17038__1 = (function (x){
var G__16997 = arg1;
var G__16998 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16997,G__16998) : f.call(null,G__16997,G__16998));
});
var G__17038__2 = (function (x,y){
var G__16999 = arg1;
var G__17000 = x;
var G__17001 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16999,G__17000,G__17001) : f.call(null,G__16999,G__17000,G__17001));
});
var G__17038__3 = (function (x,y,z){
var G__17002 = arg1;
var G__17003 = x;
var G__17004 = y;
var G__17005 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17002,G__17003,G__17004,G__17005) : f.call(null,G__17002,G__17003,G__17004,G__17005));
});
var G__17038__4 = (function() { 
var G__17039__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__17039 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17040__i = 0, G__17040__a = new Array(arguments.length -  3);
while (G__17040__i < G__17040__a.length) {G__17040__a[G__17040__i] = arguments[G__17040__i + 3]; ++G__17040__i;}
  args = new cljs.core.IndexedSeq(G__17040__a,0);
} 
return G__17039__delegate.call(this,x,y,z,args);};
G__17039.cljs$lang$maxFixedArity = 3;
G__17039.cljs$lang$applyTo = (function (arglist__17041){
var x = cljs.core.first(arglist__17041);
arglist__17041 = cljs.core.next(arglist__17041);
var y = cljs.core.first(arglist__17041);
arglist__17041 = cljs.core.next(arglist__17041);
var z = cljs.core.first(arglist__17041);
var args = cljs.core.rest(arglist__17041);
return G__17039__delegate(x,y,z,args);
});
G__17039.cljs$core$IFn$_invoke$arity$variadic = G__17039__delegate;
return G__17039;
})()
;
G__17038 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17038__0.call(this);
case 1:
return G__17038__1.call(this,x);
case 2:
return G__17038__2.call(this,x,y);
case 3:
return G__17038__3.call(this,x,y,z);
default:
var G__17042 = null;
if (arguments.length > 3) {
var G__17043__i = 0, G__17043__a = new Array(arguments.length -  3);
while (G__17043__i < G__17043__a.length) {G__17043__a[G__17043__i] = arguments[G__17043__i + 3]; ++G__17043__i;}
G__17042 = new cljs.core.IndexedSeq(G__17043__a,0);
}
return G__17038__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17038.cljs$lang$maxFixedArity = 3;
G__17038.cljs$lang$applyTo = G__17038__4.cljs$lang$applyTo;
G__17038.cljs$core$IFn$_invoke$arity$0 = G__17038__0;
G__17038.cljs$core$IFn$_invoke$arity$1 = G__17038__1;
G__17038.cljs$core$IFn$_invoke$arity$2 = G__17038__2;
G__17038.cljs$core$IFn$_invoke$arity$3 = G__17038__3;
G__17038.cljs$core$IFn$_invoke$arity$variadic = G__17038__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17038;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__17044 = null;
var G__17044__0 = (function (){
var G__17006 = arg1;
var G__17007 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17006,G__17007) : f.call(null,G__17006,G__17007));
});
var G__17044__1 = (function (x){
var G__17008 = arg1;
var G__17009 = arg2;
var G__17010 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17008,G__17009,G__17010) : f.call(null,G__17008,G__17009,G__17010));
});
var G__17044__2 = (function (x,y){
var G__17011 = arg1;
var G__17012 = arg2;
var G__17013 = x;
var G__17014 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17011,G__17012,G__17013,G__17014) : f.call(null,G__17011,G__17012,G__17013,G__17014));
});
var G__17044__3 = (function (x,y,z){
var G__17015 = arg1;
var G__17016 = arg2;
var G__17017 = x;
var G__17018 = y;
var G__17019 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17015,G__17016,G__17017,G__17018,G__17019) : f.call(null,G__17015,G__17016,G__17017,G__17018,G__17019));
});
var G__17044__4 = (function() { 
var G__17045__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__17045 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17046__i = 0, G__17046__a = new Array(arguments.length -  3);
while (G__17046__i < G__17046__a.length) {G__17046__a[G__17046__i] = arguments[G__17046__i + 3]; ++G__17046__i;}
  args = new cljs.core.IndexedSeq(G__17046__a,0);
} 
return G__17045__delegate.call(this,x,y,z,args);};
G__17045.cljs$lang$maxFixedArity = 3;
G__17045.cljs$lang$applyTo = (function (arglist__17047){
var x = cljs.core.first(arglist__17047);
arglist__17047 = cljs.core.next(arglist__17047);
var y = cljs.core.first(arglist__17047);
arglist__17047 = cljs.core.next(arglist__17047);
var z = cljs.core.first(arglist__17047);
var args = cljs.core.rest(arglist__17047);
return G__17045__delegate(x,y,z,args);
});
G__17045.cljs$core$IFn$_invoke$arity$variadic = G__17045__delegate;
return G__17045;
})()
;
G__17044 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17044__0.call(this);
case 1:
return G__17044__1.call(this,x);
case 2:
return G__17044__2.call(this,x,y);
case 3:
return G__17044__3.call(this,x,y,z);
default:
var G__17048 = null;
if (arguments.length > 3) {
var G__17049__i = 0, G__17049__a = new Array(arguments.length -  3);
while (G__17049__i < G__17049__a.length) {G__17049__a[G__17049__i] = arguments[G__17049__i + 3]; ++G__17049__i;}
G__17048 = new cljs.core.IndexedSeq(G__17049__a,0);
}
return G__17044__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17044.cljs$lang$maxFixedArity = 3;
G__17044.cljs$lang$applyTo = G__17044__4.cljs$lang$applyTo;
G__17044.cljs$core$IFn$_invoke$arity$0 = G__17044__0;
G__17044.cljs$core$IFn$_invoke$arity$1 = G__17044__1;
G__17044.cljs$core$IFn$_invoke$arity$2 = G__17044__2;
G__17044.cljs$core$IFn$_invoke$arity$3 = G__17044__3;
G__17044.cljs$core$IFn$_invoke$arity$variadic = G__17044__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17044;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__17050 = null;
var G__17050__0 = (function (){
var G__17020 = arg1;
var G__17021 = arg2;
var G__17022 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17020,G__17021,G__17022) : f.call(null,G__17020,G__17021,G__17022));
});
var G__17050__1 = (function (x){
var G__17023 = arg1;
var G__17024 = arg2;
var G__17025 = arg3;
var G__17026 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17023,G__17024,G__17025,G__17026) : f.call(null,G__17023,G__17024,G__17025,G__17026));
});
var G__17050__2 = (function (x,y){
var G__17027 = arg1;
var G__17028 = arg2;
var G__17029 = arg3;
var G__17030 = x;
var G__17031 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17027,G__17028,G__17029,G__17030,G__17031) : f.call(null,G__17027,G__17028,G__17029,G__17030,G__17031));
});
var G__17050__3 = (function (x,y,z){
var G__17032 = arg1;
var G__17033 = arg2;
var G__17034 = arg3;
var G__17035 = x;
var G__17036 = y;
var G__17037 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__17032,G__17033,G__17034,G__17035,G__17036,G__17037) : f.call(null,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037));
});
var G__17050__4 = (function() { 
var G__17051__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__17051 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17052__i = 0, G__17052__a = new Array(arguments.length -  3);
while (G__17052__i < G__17052__a.length) {G__17052__a[G__17052__i] = arguments[G__17052__i + 3]; ++G__17052__i;}
  args = new cljs.core.IndexedSeq(G__17052__a,0);
} 
return G__17051__delegate.call(this,x,y,z,args);};
G__17051.cljs$lang$maxFixedArity = 3;
G__17051.cljs$lang$applyTo = (function (arglist__17053){
var x = cljs.core.first(arglist__17053);
arglist__17053 = cljs.core.next(arglist__17053);
var y = cljs.core.first(arglist__17053);
arglist__17053 = cljs.core.next(arglist__17053);
var z = cljs.core.first(arglist__17053);
var args = cljs.core.rest(arglist__17053);
return G__17051__delegate(x,y,z,args);
});
G__17051.cljs$core$IFn$_invoke$arity$variadic = G__17051__delegate;
return G__17051;
})()
;
G__17050 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17050__0.call(this);
case 1:
return G__17050__1.call(this,x);
case 2:
return G__17050__2.call(this,x,y);
case 3:
return G__17050__3.call(this,x,y,z);
default:
var G__17054 = null;
if (arguments.length > 3) {
var G__17055__i = 0, G__17055__a = new Array(arguments.length -  3);
while (G__17055__i < G__17055__a.length) {G__17055__a[G__17055__i] = arguments[G__17055__i + 3]; ++G__17055__i;}
G__17054 = new cljs.core.IndexedSeq(G__17055__a,0);
}
return G__17050__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17050.cljs$lang$maxFixedArity = 3;
G__17050.cljs$lang$applyTo = G__17050__4.cljs$lang$applyTo;
G__17050.cljs$core$IFn$_invoke$arity$0 = G__17050__0;
G__17050.cljs$core$IFn$_invoke$arity$1 = G__17050__1;
G__17050.cljs$core$IFn$_invoke$arity$2 = G__17050__2;
G__17050.cljs$core$IFn$_invoke$arity$3 = G__17050__3;
G__17050.cljs$core$IFn$_invoke$arity$variadic = G__17050__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17050;
})()
});
var partial__5 = (function() { 
var G__17056__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__17057__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__17057 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17058__i = 0, G__17058__a = new Array(arguments.length -  0);
while (G__17058__i < G__17058__a.length) {G__17058__a[G__17058__i] = arguments[G__17058__i + 0]; ++G__17058__i;}
  args = new cljs.core.IndexedSeq(G__17058__a,0);
} 
return G__17057__delegate.call(this,args);};
G__17057.cljs$lang$maxFixedArity = 0;
G__17057.cljs$lang$applyTo = (function (arglist__17059){
var args = cljs.core.seq(arglist__17059);
return G__17057__delegate(args);
});
G__17057.cljs$core$IFn$_invoke$arity$variadic = G__17057__delegate;
return G__17057;
})()
;
};
var G__17056 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__17060__i = 0, G__17060__a = new Array(arguments.length -  4);
while (G__17060__i < G__17060__a.length) {G__17060__a[G__17060__i] = arguments[G__17060__i + 4]; ++G__17060__i;}
  more = new cljs.core.IndexedSeq(G__17060__a,0);
} 
return G__17056__delegate.call(this,f,arg1,arg2,arg3,more);};
G__17056.cljs$lang$maxFixedArity = 4;
G__17056.cljs$lang$applyTo = (function (arglist__17061){
var f = cljs.core.first(arglist__17061);
arglist__17061 = cljs.core.next(arglist__17061);
var arg1 = cljs.core.first(arglist__17061);
arglist__17061 = cljs.core.next(arglist__17061);
var arg2 = cljs.core.first(arglist__17061);
arglist__17061 = cljs.core.next(arglist__17061);
var arg3 = cljs.core.first(arglist__17061);
var more = cljs.core.rest(arglist__17061);
return G__17056__delegate(f,arg1,arg2,arg3,more);
});
G__17056.cljs$core$IFn$_invoke$arity$variadic = G__17056__delegate;
return G__17056;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__17062 = null;
if (arguments.length > 4) {
var G__17063__i = 0, G__17063__a = new Array(arguments.length -  4);
while (G__17063__i < G__17063__a.length) {G__17063__a[G__17063__i] = arguments[G__17063__i + 4]; ++G__17063__i;}
G__17062 = new cljs.core.IndexedSeq(G__17063__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__17062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__17096 = null;
var G__17096__1 = (function (a){
var G__17080 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17080) : f.call(null,G__17080));
});
var G__17096__2 = (function (a,b){
var G__17081 = (((a == null))?x:a);
var G__17082 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17081,G__17082) : f.call(null,G__17081,G__17082));
});
var G__17096__3 = (function (a,b,c){
var G__17083 = (((a == null))?x:a);
var G__17084 = b;
var G__17085 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17083,G__17084,G__17085) : f.call(null,G__17083,G__17084,G__17085));
});
var G__17096__4 = (function() { 
var G__17097__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__17097 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17098__i = 0, G__17098__a = new Array(arguments.length -  3);
while (G__17098__i < G__17098__a.length) {G__17098__a[G__17098__i] = arguments[G__17098__i + 3]; ++G__17098__i;}
  ds = new cljs.core.IndexedSeq(G__17098__a,0);
} 
return G__17097__delegate.call(this,a,b,c,ds);};
G__17097.cljs$lang$maxFixedArity = 3;
G__17097.cljs$lang$applyTo = (function (arglist__17099){
var a = cljs.core.first(arglist__17099);
arglist__17099 = cljs.core.next(arglist__17099);
var b = cljs.core.first(arglist__17099);
arglist__17099 = cljs.core.next(arglist__17099);
var c = cljs.core.first(arglist__17099);
var ds = cljs.core.rest(arglist__17099);
return G__17097__delegate(a,b,c,ds);
});
G__17097.cljs$core$IFn$_invoke$arity$variadic = G__17097__delegate;
return G__17097;
})()
;
G__17096 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__17096__1.call(this,a);
case 2:
return G__17096__2.call(this,a,b);
case 3:
return G__17096__3.call(this,a,b,c);
default:
var G__17100 = null;
if (arguments.length > 3) {
var G__17101__i = 0, G__17101__a = new Array(arguments.length -  3);
while (G__17101__i < G__17101__a.length) {G__17101__a[G__17101__i] = arguments[G__17101__i + 3]; ++G__17101__i;}
G__17100 = new cljs.core.IndexedSeq(G__17101__a,0);
}
return G__17096__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17096.cljs$lang$maxFixedArity = 3;
G__17096.cljs$lang$applyTo = G__17096__4.cljs$lang$applyTo;
G__17096.cljs$core$IFn$_invoke$arity$1 = G__17096__1;
G__17096.cljs$core$IFn$_invoke$arity$2 = G__17096__2;
G__17096.cljs$core$IFn$_invoke$arity$3 = G__17096__3;
G__17096.cljs$core$IFn$_invoke$arity$variadic = G__17096__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17096;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__17102 = null;
var G__17102__2 = (function (a,b){
var G__17086 = (((a == null))?x:a);
var G__17087 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17086,G__17087) : f.call(null,G__17086,G__17087));
});
var G__17102__3 = (function (a,b,c){
var G__17088 = (((a == null))?x:a);
var G__17089 = (((b == null))?y:b);
var G__17090 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17088,G__17089,G__17090) : f.call(null,G__17088,G__17089,G__17090));
});
var G__17102__4 = (function() { 
var G__17103__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__17103 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17104__i = 0, G__17104__a = new Array(arguments.length -  3);
while (G__17104__i < G__17104__a.length) {G__17104__a[G__17104__i] = arguments[G__17104__i + 3]; ++G__17104__i;}
  ds = new cljs.core.IndexedSeq(G__17104__a,0);
} 
return G__17103__delegate.call(this,a,b,c,ds);};
G__17103.cljs$lang$maxFixedArity = 3;
G__17103.cljs$lang$applyTo = (function (arglist__17105){
var a = cljs.core.first(arglist__17105);
arglist__17105 = cljs.core.next(arglist__17105);
var b = cljs.core.first(arglist__17105);
arglist__17105 = cljs.core.next(arglist__17105);
var c = cljs.core.first(arglist__17105);
var ds = cljs.core.rest(arglist__17105);
return G__17103__delegate(a,b,c,ds);
});
G__17103.cljs$core$IFn$_invoke$arity$variadic = G__17103__delegate;
return G__17103;
})()
;
G__17102 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__17102__2.call(this,a,b);
case 3:
return G__17102__3.call(this,a,b,c);
default:
var G__17106 = null;
if (arguments.length > 3) {
var G__17107__i = 0, G__17107__a = new Array(arguments.length -  3);
while (G__17107__i < G__17107__a.length) {G__17107__a[G__17107__i] = arguments[G__17107__i + 3]; ++G__17107__i;}
G__17106 = new cljs.core.IndexedSeq(G__17107__a,0);
}
return G__17102__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17102.cljs$lang$maxFixedArity = 3;
G__17102.cljs$lang$applyTo = G__17102__4.cljs$lang$applyTo;
G__17102.cljs$core$IFn$_invoke$arity$2 = G__17102__2;
G__17102.cljs$core$IFn$_invoke$arity$3 = G__17102__3;
G__17102.cljs$core$IFn$_invoke$arity$variadic = G__17102__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17102;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__17108 = null;
var G__17108__2 = (function (a,b){
var G__17091 = (((a == null))?x:a);
var G__17092 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17091,G__17092) : f.call(null,G__17091,G__17092));
});
var G__17108__3 = (function (a,b,c){
var G__17093 = (((a == null))?x:a);
var G__17094 = (((b == null))?y:b);
var G__17095 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17093,G__17094,G__17095) : f.call(null,G__17093,G__17094,G__17095));
});
var G__17108__4 = (function() { 
var G__17109__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__17109 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17110__i = 0, G__17110__a = new Array(arguments.length -  3);
while (G__17110__i < G__17110__a.length) {G__17110__a[G__17110__i] = arguments[G__17110__i + 3]; ++G__17110__i;}
  ds = new cljs.core.IndexedSeq(G__17110__a,0);
} 
return G__17109__delegate.call(this,a,b,c,ds);};
G__17109.cljs$lang$maxFixedArity = 3;
G__17109.cljs$lang$applyTo = (function (arglist__17111){
var a = cljs.core.first(arglist__17111);
arglist__17111 = cljs.core.next(arglist__17111);
var b = cljs.core.first(arglist__17111);
arglist__17111 = cljs.core.next(arglist__17111);
var c = cljs.core.first(arglist__17111);
var ds = cljs.core.rest(arglist__17111);
return G__17109__delegate(a,b,c,ds);
});
G__17109.cljs$core$IFn$_invoke$arity$variadic = G__17109__delegate;
return G__17109;
})()
;
G__17108 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__17108__2.call(this,a,b);
case 3:
return G__17108__3.call(this,a,b,c);
default:
var G__17112 = null;
if (arguments.length > 3) {
var G__17113__i = 0, G__17113__a = new Array(arguments.length -  3);
while (G__17113__i < G__17113__a.length) {G__17113__a[G__17113__i] = arguments[G__17113__i + 3]; ++G__17113__i;}
G__17112 = new cljs.core.IndexedSeq(G__17113__a,0);
}
return G__17108__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17108.cljs$lang$maxFixedArity = 3;
G__17108.cljs$lang$applyTo = G__17108__4.cljs$lang$applyTo;
G__17108.cljs$core$IFn$_invoke$arity$2 = G__17108__2;
G__17108.cljs$core$IFn$_invoke$arity$3 = G__17108__3;
G__17108.cljs$core$IFn$_invoke$arity$variadic = G__17108__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17108;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__17144 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__17144) : cljs.core.volatile_BANG_.call(null,G__17144));
})();
return ((function (i){
return (function() {
var G__17174 = null;
var G__17174__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17174__1 = (function (result){
var G__17145 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17145) : rf.call(null,G__17145));
});
var G__17174__2 = (function (result,input){
var G__17146 = result;
var G__17147 = (function (){var G__17148 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__17149 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17148,G__17149) : f.call(null,G__17148,G__17149));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17146,G__17147) : rf.call(null,G__17146,G__17147));
});
G__17174 = function(result,input){
switch(arguments.length){
case 0:
return G__17174__0.call(this);
case 1:
return G__17174__1.call(this,result);
case 2:
return G__17174__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17174.cljs$core$IFn$_invoke$arity$0 = G__17174__0;
G__17174.cljs$core$IFn$_invoke$arity$1 = G__17174__1;
G__17174.cljs$core$IFn$_invoke$arity$2 = G__17174__2;
return G__17174;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4470__auto___17175 = size;
var i_17176 = (0);
while(true){
if((i_17176 < n__4470__auto___17175)){
cljs.core.chunk_append(b,(function (){var G__17170 = (idx + i_17176);
var G__17171 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17176);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17170,G__17171) : f.call(null,G__17170,G__17171));
})());

var G__17177 = (i_17176 + (1));
i_17176 = G__17177;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__17172 = idx;
var G__17173 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17172,G__17173) : f.call(null,G__17172,G__17173));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__17196 = null;
var G__17196__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17196__1 = (function (result){
var G__17190 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17190) : rf.call(null,G__17190));
});
var G__17196__2 = (function (result,input){
var v = (function (){var G__17191 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17191) : f.call(null,G__17191));
})();
if((v == null)){
return result;
} else {
var G__17192 = result;
var G__17193 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17192,G__17193) : rf.call(null,G__17192,G__17193));
}
});
G__17196 = function(result,input){
switch(arguments.length){
case 0:
return G__17196__0.call(this);
case 1:
return G__17196__1.call(this,result);
case 2:
return G__17196__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17196.cljs$core$IFn$_invoke$arity$0 = G__17196__0;
G__17196.cljs$core$IFn$_invoke$arity$1 = G__17196__1;
G__17196.cljs$core$IFn$_invoke$arity$2 = G__17196__2;
return G__17196;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4470__auto___17197 = size;
var i_17198 = (0);
while(true){
if((i_17198 < n__4470__auto___17197)){
var x_17199 = (function (){var G__17194 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17198);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17194) : f.call(null,G__17194));
})();
if((x_17199 == null)){
} else {
cljs.core.chunk_append(b,x_17199);
}

var G__17200 = (i_17198 + (1));
i_17198 = G__17200;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__17195 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17195) : f.call(null,G__17195));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17201 = this$__$1;
return goog.getUid(G__17201);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__17202 = cljs.core.seq(self__.watches);
var chunk__17203 = null;
var count__17204 = (0);
var i__17205 = (0);
while(true){
if((i__17205 < count__17204)){
var vec__17206 = chunk__17203.cljs$core$IIndexed$_nth$arity$2(null,i__17205);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17206,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17206,(1),null);
var G__17207_17216 = key;
var G__17208_17217 = this$__$1;
var G__17209_17218 = oldval;
var G__17210_17219 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17207_17216,G__17208_17217,G__17209_17218,G__17210_17219) : f.call(null,G__17207_17216,G__17208_17217,G__17209_17218,G__17210_17219));

var G__17220 = seq__17202;
var G__17221 = chunk__17203;
var G__17222 = count__17204;
var G__17223 = (i__17205 + (1));
seq__17202 = G__17220;
chunk__17203 = G__17221;
count__17204 = G__17222;
i__17205 = G__17223;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17202);
if(temp__4126__auto__){
var seq__17202__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17202__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__17202__$1);
var G__17224 = cljs.core.chunk_rest(seq__17202__$1);
var G__17225 = c__4370__auto__;
var G__17226 = cljs.core.count(c__4370__auto__);
var G__17227 = (0);
seq__17202 = G__17224;
chunk__17203 = G__17225;
count__17204 = G__17226;
i__17205 = G__17227;
continue;
} else {
var vec__17211 = cljs.core.first(seq__17202__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17211,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17211,(1),null);
var G__17212_17228 = key;
var G__17213_17229 = this$__$1;
var G__17214_17230 = oldval;
var G__17215_17231 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17212_17228,G__17213_17229,G__17214_17230,G__17215_17231) : f.call(null,G__17212_17228,G__17213_17229,G__17214_17230,G__17215_17231));

var G__17232 = cljs.core.next(seq__17202__$1);
var G__17233 = null;
var G__17234 = (0);
var G__17235 = (0);
seq__17202 = G__17232;
chunk__17203 = G__17233;
count__17204 = G__17234;
i__17205 = G__17235;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__17239__delegate = function (x,p__17236){
var map__17238 = p__17236;
var map__17238__$1 = ((cljs.core.seq_QMARK_(map__17238))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17238):map__17238);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17238__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17238__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__17239 = function (x,var_args){
var p__17236 = null;
if (arguments.length > 1) {
var G__17240__i = 0, G__17240__a = new Array(arguments.length -  1);
while (G__17240__i < G__17240__a.length) {G__17240__a[G__17240__i] = arguments[G__17240__i + 1]; ++G__17240__i;}
  p__17236 = new cljs.core.IndexedSeq(G__17240__a,0);
} 
return G__17239__delegate.call(this,x,p__17236);};
G__17239.cljs$lang$maxFixedArity = 1;
G__17239.cljs$lang$applyTo = (function (arglist__17241){
var x = cljs.core.first(arglist__17241);
var p__17236 = cljs.core.rest(arglist__17241);
return G__17239__delegate(x,p__17236);
});
G__17239.cljs$core$IFn$_invoke$arity$variadic = G__17239__delegate;
return G__17239;
})()
;
atom = function(x,var_args){
var p__17236 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__17242 = null;
if (arguments.length > 1) {
var G__17243__i = 0, G__17243__a = new Array(arguments.length -  1);
while (G__17243__i < G__17243__a.length) {G__17243__a[G__17243__i] = arguments[G__17243__i + 1]; ++G__17243__i;}
G__17242 = new cljs.core.IndexedSeq(G__17243__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17250 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17250) : f.call(null,G__17250));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17251 = a.state;
var G__17252 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17251,G__17252) : f.call(null,G__17251,G__17252));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17253 = a.state;
var G__17254 = x;
var G__17255 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17253,G__17254,G__17255) : f.call(null,G__17253,G__17254,G__17255));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__17256__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__17256 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__17257__i = 0, G__17257__a = new Array(arguments.length -  4);
while (G__17257__i < G__17257__a.length) {G__17257__a[G__17257__i] = arguments[G__17257__i + 4]; ++G__17257__i;}
  more = new cljs.core.IndexedSeq(G__17257__a,0);
} 
return G__17256__delegate.call(this,a,f,x,y,more);};
G__17256.cljs$lang$maxFixedArity = 4;
G__17256.cljs$lang$applyTo = (function (arglist__17258){
var a = cljs.core.first(arglist__17258);
arglist__17258 = cljs.core.next(arglist__17258);
var f = cljs.core.first(arglist__17258);
arglist__17258 = cljs.core.next(arglist__17258);
var x = cljs.core.first(arglist__17258);
arglist__17258 = cljs.core.next(arglist__17258);
var y = cljs.core.first(arglist__17258);
var more = cljs.core.rest(arglist__17258);
return G__17256__delegate(a,f,x,y,more);
});
G__17256.cljs$core$IFn$_invoke$arity$variadic = G__17256__delegate;
return G__17256;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__17259 = null;
if (arguments.length > 4) {
var G__17260__i = 0, G__17260__a = new Array(arguments.length -  4);
while (G__17260__i < G__17260__a.length) {G__17260__a[G__17260__i] = arguments[G__17260__i + 4]; ++G__17260__i;}
G__17259 = new cljs.core.IndexedSeq(G__17260__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__17259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17327 = null;
var G__17327__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17327__1 = (function (result){
var G__17294 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17294) : rf.call(null,G__17294));
});
var G__17327__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__17295 = i;
var G__17296 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17295,G__17296) : f.call(null,G__17295,G__17296));
})();
if((v == null)){
return result;
} else {
var G__17297 = result;
var G__17298 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17297,G__17298) : rf.call(null,G__17297,G__17298));
}
});
G__17327 = function(result,input){
switch(arguments.length){
case 0:
return G__17327__0.call(this);
case 1:
return G__17327__1.call(this,result);
case 2:
return G__17327__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17327.cljs$core$IFn$_invoke$arity$0 = G__17327__0;
G__17327.cljs$core$IFn$_invoke$arity$1 = G__17327__1;
G__17327.cljs$core$IFn$_invoke$arity$2 = G__17327__2;
return G__17327;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4470__auto___17328 = size;
var i_17329 = (0);
while(true){
if((i_17329 < n__4470__auto___17328)){
var x_17330 = (function (){var G__17323 = (idx + i_17329);
var G__17324 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17329);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17323,G__17324) : f.call(null,G__17323,G__17324));
})();
if((x_17330 == null)){
} else {
cljs.core.chunk_append(b,x_17330);
}

var G__17331 = (i_17329 + (1));
i_17329 = G__17331;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__17325 = idx;
var G__17326 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17325,G__17326) : f.call(null,G__17325,G__17326));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__17545 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17545) : p.call(null,G__17545));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17547 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17547) : p.call(null,G__17547));
})();
if(cljs.core.truth_(and__3571__auto__)){
var G__17548 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17548) : p.call(null,G__17548));
} else {
return and__3571__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17550 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17550) : p.call(null,G__17550));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17552 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17552) : p.call(null,G__17552));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var G__17553 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17553) : p.call(null,G__17553));
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__17722__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__17722 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17723__i = 0, G__17723__a = new Array(arguments.length -  3);
while (G__17723__i < G__17723__a.length) {G__17723__a[G__17723__i] = arguments[G__17723__i + 3]; ++G__17723__i;}
  args = new cljs.core.IndexedSeq(G__17723__a,0);
} 
return G__17722__delegate.call(this,x,y,z,args);};
G__17722.cljs$lang$maxFixedArity = 3;
G__17722.cljs$lang$applyTo = (function (arglist__17724){
var x = cljs.core.first(arglist__17724);
arglist__17724 = cljs.core.next(arglist__17724);
var y = cljs.core.first(arglist__17724);
arglist__17724 = cljs.core.next(arglist__17724);
var z = cljs.core.first(arglist__17724);
var args = cljs.core.rest(arglist__17724);
return G__17722__delegate(x,y,z,args);
});
G__17722.cljs$core$IFn$_invoke$arity$variadic = G__17722__delegate;
return G__17722;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__17725 = null;
if (arguments.length > 3) {
var G__17726__i = 0, G__17726__a = new Array(arguments.length -  3);
while (G__17726__i < G__17726__a.length) {G__17726__a[G__17726__i] = arguments[G__17726__i + 3]; ++G__17726__i;}
G__17725 = new cljs.core.IndexedSeq(G__17726__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17585 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17585) : p1.call(null,G__17585));
})();
if(cljs.core.truth_(and__3571__auto__)){
var G__17586 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17586) : p2.call(null,G__17586));
} else {
return and__3571__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17588 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17588) : p1.call(null,G__17588));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17590 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17590) : p1.call(null,G__17590));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var and__3571__auto____$2 = (function (){var G__17592 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17592) : p2.call(null,G__17592));
})();
if(cljs.core.truth_(and__3571__auto____$2)){
var G__17593 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17593) : p2.call(null,G__17593));
} else {
return and__3571__auto____$2;
}
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17595 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17595) : p1.call(null,G__17595));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17597 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17597) : p1.call(null,G__17597));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var and__3571__auto____$2 = (function (){var G__17599 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17599) : p1.call(null,G__17599));
})();
if(cljs.core.truth_(and__3571__auto____$2)){
var and__3571__auto____$3 = (function (){var G__17601 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17601) : p2.call(null,G__17601));
})();
if(cljs.core.truth_(and__3571__auto____$3)){
var and__3571__auto____$4 = (function (){var G__17603 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17603) : p2.call(null,G__17603));
})();
if(cljs.core.truth_(and__3571__auto____$4)){
var G__17604 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17604) : p2.call(null,G__17604));
} else {
return and__3571__auto____$4;
}
} else {
return and__3571__auto____$3;
}
} else {
return and__3571__auto____$2;
}
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__17727__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__17332_SHARP_){
var and__3571__auto__ = (function (){var G__17609 = p1__17332_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17609) : p1.call(null,G__17609));
})();
if(cljs.core.truth_(and__3571__auto__)){
var G__17610 = p1__17332_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17610) : p2.call(null,G__17610));
} else {
return and__3571__auto__;
}
}),args)));
};
var G__17727 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17728__i = 0, G__17728__a = new Array(arguments.length -  3);
while (G__17728__i < G__17728__a.length) {G__17728__a[G__17728__i] = arguments[G__17728__i + 3]; ++G__17728__i;}
  args = new cljs.core.IndexedSeq(G__17728__a,0);
} 
return G__17727__delegate.call(this,x,y,z,args);};
G__17727.cljs$lang$maxFixedArity = 3;
G__17727.cljs$lang$applyTo = (function (arglist__17729){
var x = cljs.core.first(arglist__17729);
arglist__17729 = cljs.core.next(arglist__17729);
var y = cljs.core.first(arglist__17729);
arglist__17729 = cljs.core.next(arglist__17729);
var z = cljs.core.first(arglist__17729);
var args = cljs.core.rest(arglist__17729);
return G__17727__delegate(x,y,z,args);
});
G__17727.cljs$core$IFn$_invoke$arity$variadic = G__17727__delegate;
return G__17727;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__17730 = null;
if (arguments.length > 3) {
var G__17731__i = 0, G__17731__a = new Array(arguments.length -  3);
while (G__17731__i < G__17731__a.length) {G__17731__a[G__17731__i] = arguments[G__17731__i + 3]; ++G__17731__i;}
G__17730 = new cljs.core.IndexedSeq(G__17731__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17656 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17656) : p1.call(null,G__17656));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17658 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17658) : p2.call(null,G__17658));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var G__17659 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17659) : p3.call(null,G__17659));
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17661 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17661) : p1.call(null,G__17661));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17663 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17663) : p2.call(null,G__17663));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var and__3571__auto____$2 = (function (){var G__17665 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17665) : p3.call(null,G__17665));
})();
if(cljs.core.truth_(and__3571__auto____$2)){
var and__3571__auto____$3 = (function (){var G__17667 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17667) : p1.call(null,G__17667));
})();
if(cljs.core.truth_(and__3571__auto____$3)){
var and__3571__auto____$4 = (function (){var G__17669 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17669) : p2.call(null,G__17669));
})();
if(cljs.core.truth_(and__3571__auto____$4)){
var G__17670 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17670) : p3.call(null,G__17670));
} else {
return and__3571__auto____$4;
}
} else {
return and__3571__auto____$3;
}
} else {
return and__3571__auto____$2;
}
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3571__auto__ = (function (){var G__17672 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17672) : p1.call(null,G__17672));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17674 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17674) : p2.call(null,G__17674));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var and__3571__auto____$2 = (function (){var G__17676 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17676) : p3.call(null,G__17676));
})();
if(cljs.core.truth_(and__3571__auto____$2)){
var and__3571__auto____$3 = (function (){var G__17678 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17678) : p1.call(null,G__17678));
})();
if(cljs.core.truth_(and__3571__auto____$3)){
var and__3571__auto____$4 = (function (){var G__17680 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17680) : p2.call(null,G__17680));
})();
if(cljs.core.truth_(and__3571__auto____$4)){
var and__3571__auto____$5 = (function (){var G__17682 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17682) : p3.call(null,G__17682));
})();
if(cljs.core.truth_(and__3571__auto____$5)){
var and__3571__auto____$6 = (function (){var G__17684 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17684) : p1.call(null,G__17684));
})();
if(cljs.core.truth_(and__3571__auto____$6)){
var and__3571__auto____$7 = (function (){var G__17686 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17686) : p2.call(null,G__17686));
})();
if(cljs.core.truth_(and__3571__auto____$7)){
var G__17687 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17687) : p3.call(null,G__17687));
} else {
return and__3571__auto____$7;
}
} else {
return and__3571__auto____$6;
}
} else {
return and__3571__auto____$5;
}
} else {
return and__3571__auto____$4;
}
} else {
return and__3571__auto____$3;
}
} else {
return and__3571__auto____$2;
}
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__17732__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__17333_SHARP_){
var and__3571__auto__ = (function (){var G__17694 = p1__17333_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17694) : p1.call(null,G__17694));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17696 = p1__17333_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17696) : p2.call(null,G__17696));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var G__17697 = p1__17333_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__17697) : p3.call(null,G__17697));
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
}),args)));
};
var G__17732 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17733__i = 0, G__17733__a = new Array(arguments.length -  3);
while (G__17733__i < G__17733__a.length) {G__17733__a[G__17733__i] = arguments[G__17733__i + 3]; ++G__17733__i;}
  args = new cljs.core.IndexedSeq(G__17733__a,0);
} 
return G__17732__delegate.call(this,x,y,z,args);};
G__17732.cljs$lang$maxFixedArity = 3;
G__17732.cljs$lang$applyTo = (function (arglist__17734){
var x = cljs.core.first(arglist__17734);
arglist__17734 = cljs.core.next(arglist__17734);
var y = cljs.core.first(arglist__17734);
arglist__17734 = cljs.core.next(arglist__17734);
var z = cljs.core.first(arglist__17734);
var args = cljs.core.rest(arglist__17734);
return G__17732__delegate(x,y,z,args);
});
G__17732.cljs$core$IFn$_invoke$arity$variadic = G__17732__delegate;
return G__17732;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__17735 = null;
if (arguments.length > 3) {
var G__17736__i = 0, G__17736__a = new Array(arguments.length -  3);
while (G__17736__i < G__17736__a.length) {G__17736__a[G__17736__i] = arguments[G__17736__i + 3]; ++G__17736__i;}
G__17735 = new cljs.core.IndexedSeq(G__17736__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__17737__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17334_SHARP_){
var G__17713 = x;
return (p1__17334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17713) : p1__17334_SHARP_.call(null,G__17713));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17335_SHARP_){
var and__3571__auto__ = (function (){var G__17715 = x;
return (p1__17335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17715) : p1__17335_SHARP_.call(null,G__17715));
})();
if(cljs.core.truth_(and__3571__auto__)){
var G__17716 = y;
return (p1__17335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17716) : p1__17335_SHARP_.call(null,G__17716));
} else {
return and__3571__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17336_SHARP_){
var and__3571__auto__ = (function (){var G__17718 = x;
return (p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17718) : p1__17336_SHARP_.call(null,G__17718));
})();
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__17720 = y;
return (p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17720) : p1__17336_SHARP_.call(null,G__17720));
})();
if(cljs.core.truth_(and__3571__auto____$1)){
var G__17721 = z;
return (p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17336_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17721) : p1__17336_SHARP_.call(null,G__17721));
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__17738__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17337_SHARP_){
return cljs.core.every_QMARK_(p1__17337_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__17738 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17739__i = 0, G__17739__a = new Array(arguments.length -  3);
while (G__17739__i < G__17739__a.length) {G__17739__a[G__17739__i] = arguments[G__17739__i + 3]; ++G__17739__i;}
  args = new cljs.core.IndexedSeq(G__17739__a,0);
} 
return G__17738__delegate.call(this,x,y,z,args);};
G__17738.cljs$lang$maxFixedArity = 3;
G__17738.cljs$lang$applyTo = (function (arglist__17740){
var x = cljs.core.first(arglist__17740);
arglist__17740 = cljs.core.next(arglist__17740);
var y = cljs.core.first(arglist__17740);
arglist__17740 = cljs.core.next(arglist__17740);
var z = cljs.core.first(arglist__17740);
var args = cljs.core.rest(arglist__17740);
return G__17738__delegate(x,y,z,args);
});
G__17738.cljs$core$IFn$_invoke$arity$variadic = G__17738__delegate;
return G__17738;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__17741 = null;
if (arguments.length > 3) {
var G__17742__i = 0, G__17742__a = new Array(arguments.length -  3);
while (G__17742__i < G__17742__a.length) {G__17742__a[G__17742__i] = arguments[G__17742__i + 3]; ++G__17742__i;}
G__17741 = new cljs.core.IndexedSeq(G__17742__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__17737 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__17743__i = 0, G__17743__a = new Array(arguments.length -  3);
while (G__17743__i < G__17743__a.length) {G__17743__a[G__17743__i] = arguments[G__17743__i + 3]; ++G__17743__i;}
  ps = new cljs.core.IndexedSeq(G__17743__a,0);
} 
return G__17737__delegate.call(this,p1,p2,p3,ps);};
G__17737.cljs$lang$maxFixedArity = 3;
G__17737.cljs$lang$applyTo = (function (arglist__17744){
var p1 = cljs.core.first(arglist__17744);
arglist__17744 = cljs.core.next(arglist__17744);
var p2 = cljs.core.first(arglist__17744);
arglist__17744 = cljs.core.next(arglist__17744);
var p3 = cljs.core.first(arglist__17744);
var ps = cljs.core.rest(arglist__17744);
return G__17737__delegate(p1,p2,p3,ps);
});
G__17737.cljs$core$IFn$_invoke$arity$variadic = G__17737__delegate;
return G__17737;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__17745 = null;
if (arguments.length > 3) {
var G__17746__i = 0, G__17746__a = new Array(arguments.length -  3);
while (G__17746__i < G__17746__a.length) {G__17746__a[G__17746__i] = arguments[G__17746__i + 3]; ++G__17746__i;}
G__17745 = new cljs.core.IndexedSeq(G__17746__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__17745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__17952 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17952) : p.call(null,G__17952));
});
var sp1__2 = (function (x,y){
var or__3583__auto__ = (function (){var G__17954 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17954) : p.call(null,G__17954));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var G__17955 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17955) : p.call(null,G__17955));
}
});
var sp1__3 = (function (x,y,z){
var or__3583__auto__ = (function (){var G__17957 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17957) : p.call(null,G__17957));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__17959 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17959) : p.call(null,G__17959));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var G__17960 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__17960) : p.call(null,G__17960));
}
}
});
var sp1__4 = (function() { 
var G__18121__delegate = function (x,y,z,args){
var or__3583__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__18121 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18122__i = 0, G__18122__a = new Array(arguments.length -  3);
while (G__18122__i < G__18122__a.length) {G__18122__a[G__18122__i] = arguments[G__18122__i + 3]; ++G__18122__i;}
  args = new cljs.core.IndexedSeq(G__18122__a,0);
} 
return G__18121__delegate.call(this,x,y,z,args);};
G__18121.cljs$lang$maxFixedArity = 3;
G__18121.cljs$lang$applyTo = (function (arglist__18123){
var x = cljs.core.first(arglist__18123);
arglist__18123 = cljs.core.next(arglist__18123);
var y = cljs.core.first(arglist__18123);
arglist__18123 = cljs.core.next(arglist__18123);
var z = cljs.core.first(arglist__18123);
var args = cljs.core.rest(arglist__18123);
return G__18121__delegate(x,y,z,args);
});
G__18121.cljs$core$IFn$_invoke$arity$variadic = G__18121__delegate;
return G__18121;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__18124 = null;
if (arguments.length > 3) {
var G__18125__i = 0, G__18125__a = new Array(arguments.length -  3);
while (G__18125__i < G__18125__a.length) {G__18125__a[G__18125__i] = arguments[G__18125__i + 3]; ++G__18125__i;}
G__18124 = new cljs.core.IndexedSeq(G__18125__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3583__auto__ = (function (){var G__17992 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17992) : p1.call(null,G__17992));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var G__17993 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17993) : p2.call(null,G__17993));
}
});
var sp2__2 = (function (x,y){
var or__3583__auto__ = (function (){var G__17995 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17995) : p1.call(null,G__17995));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__17997 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__17997) : p1.call(null,G__17997));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var G__17999 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__17999) : p2.call(null,G__17999));
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
var G__18000 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18000) : p2.call(null,G__18000));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3583__auto__ = (function (){var G__18002 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18002) : p1.call(null,G__18002));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__18004 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18004) : p1.call(null,G__18004));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var G__18006 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18006) : p1.call(null,G__18006));
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
var or__3583__auto____$3 = (function (){var G__18008 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18008) : p2.call(null,G__18008));
})();
if(cljs.core.truth_(or__3583__auto____$3)){
return or__3583__auto____$3;
} else {
var or__3583__auto____$4 = (function (){var G__18010 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18010) : p2.call(null,G__18010));
})();
if(cljs.core.truth_(or__3583__auto____$4)){
return or__3583__auto____$4;
} else {
var G__18011 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18011) : p2.call(null,G__18011));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__18126__delegate = function (x,y,z,args){
var or__3583__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.some(((function (or__3583__auto__){
return (function (p1__17747_SHARP_){
var or__3583__auto____$1 = (function (){var G__18013 = p1__17747_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18013) : p1.call(null,G__18013));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var G__18014 = p1__17747_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18014) : p2.call(null,G__18014));
}
});})(or__3583__auto__))
,args);
}
};
var G__18126 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18127__i = 0, G__18127__a = new Array(arguments.length -  3);
while (G__18127__i < G__18127__a.length) {G__18127__a[G__18127__i] = arguments[G__18127__i + 3]; ++G__18127__i;}
  args = new cljs.core.IndexedSeq(G__18127__a,0);
} 
return G__18126__delegate.call(this,x,y,z,args);};
G__18126.cljs$lang$maxFixedArity = 3;
G__18126.cljs$lang$applyTo = (function (arglist__18128){
var x = cljs.core.first(arglist__18128);
arglist__18128 = cljs.core.next(arglist__18128);
var y = cljs.core.first(arglist__18128);
arglist__18128 = cljs.core.next(arglist__18128);
var z = cljs.core.first(arglist__18128);
var args = cljs.core.rest(arglist__18128);
return G__18126__delegate(x,y,z,args);
});
G__18126.cljs$core$IFn$_invoke$arity$variadic = G__18126__delegate;
return G__18126;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__18129 = null;
if (arguments.length > 3) {
var G__18130__i = 0, G__18130__a = new Array(arguments.length -  3);
while (G__18130__i < G__18130__a.length) {G__18130__a[G__18130__i] = arguments[G__18130__i + 3]; ++G__18130__i;}
G__18129 = new cljs.core.IndexedSeq(G__18130__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3583__auto__ = (function (){var G__18060 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18060) : p1.call(null,G__18060));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__18062 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18062) : p2.call(null,G__18062));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var G__18063 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18063) : p3.call(null,G__18063));
}
}
});
var sp3__2 = (function (x,y){
var or__3583__auto__ = (function (){var G__18065 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18065) : p1.call(null,G__18065));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__18067 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18067) : p2.call(null,G__18067));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var G__18069 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18069) : p3.call(null,G__18069));
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
var or__3583__auto____$3 = (function (){var G__18071 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18071) : p1.call(null,G__18071));
})();
if(cljs.core.truth_(or__3583__auto____$3)){
return or__3583__auto____$3;
} else {
var or__3583__auto____$4 = (function (){var G__18073 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18073) : p2.call(null,G__18073));
})();
if(cljs.core.truth_(or__3583__auto____$4)){
return or__3583__auto____$4;
} else {
var G__18074 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18074) : p3.call(null,G__18074));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3583__auto__ = (function (){var G__18076 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18076) : p1.call(null,G__18076));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__18078 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18078) : p2.call(null,G__18078));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var G__18080 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18080) : p3.call(null,G__18080));
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
var or__3583__auto____$3 = (function (){var G__18082 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18082) : p1.call(null,G__18082));
})();
if(cljs.core.truth_(or__3583__auto____$3)){
return or__3583__auto____$3;
} else {
var or__3583__auto____$4 = (function (){var G__18084 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18084) : p2.call(null,G__18084));
})();
if(cljs.core.truth_(or__3583__auto____$4)){
return or__3583__auto____$4;
} else {
var or__3583__auto____$5 = (function (){var G__18086 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18086) : p3.call(null,G__18086));
})();
if(cljs.core.truth_(or__3583__auto____$5)){
return or__3583__auto____$5;
} else {
var or__3583__auto____$6 = (function (){var G__18088 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18088) : p1.call(null,G__18088));
})();
if(cljs.core.truth_(or__3583__auto____$6)){
return or__3583__auto____$6;
} else {
var or__3583__auto____$7 = (function (){var G__18090 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18090) : p2.call(null,G__18090));
})();
if(cljs.core.truth_(or__3583__auto____$7)){
return or__3583__auto____$7;
} else {
var G__18091 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18091) : p3.call(null,G__18091));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__18131__delegate = function (x,y,z,args){
var or__3583__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.some(((function (or__3583__auto__){
return (function (p1__17748_SHARP_){
var or__3583__auto____$1 = (function (){var G__18093 = p1__17748_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18093) : p1.call(null,G__18093));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var G__18095 = p1__17748_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18095) : p2.call(null,G__18095));
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
var G__18096 = p1__17748_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18096) : p3.call(null,G__18096));
}
}
});})(or__3583__auto__))
,args);
}
};
var G__18131 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18132__i = 0, G__18132__a = new Array(arguments.length -  3);
while (G__18132__i < G__18132__a.length) {G__18132__a[G__18132__i] = arguments[G__18132__i + 3]; ++G__18132__i;}
  args = new cljs.core.IndexedSeq(G__18132__a,0);
} 
return G__18131__delegate.call(this,x,y,z,args);};
G__18131.cljs$lang$maxFixedArity = 3;
G__18131.cljs$lang$applyTo = (function (arglist__18133){
var x = cljs.core.first(arglist__18133);
arglist__18133 = cljs.core.next(arglist__18133);
var y = cljs.core.first(arglist__18133);
arglist__18133 = cljs.core.next(arglist__18133);
var z = cljs.core.first(arglist__18133);
var args = cljs.core.rest(arglist__18133);
return G__18131__delegate(x,y,z,args);
});
G__18131.cljs$core$IFn$_invoke$arity$variadic = G__18131__delegate;
return G__18131;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__18134 = null;
if (arguments.length > 3) {
var G__18135__i = 0, G__18135__a = new Array(arguments.length -  3);
while (G__18135__i < G__18135__a.length) {G__18135__a[G__18135__i] = arguments[G__18135__i + 3]; ++G__18135__i;}
G__18134 = new cljs.core.IndexedSeq(G__18135__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__18136__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__17749_SHARP_){
var G__18112 = x;
return (p1__17749_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17749_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18112) : p1__17749_SHARP_.call(null,G__18112));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__17750_SHARP_){
var or__3583__auto__ = (function (){var G__18114 = x;
return (p1__17750_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17750_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18114) : p1__17750_SHARP_.call(null,G__18114));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var G__18115 = y;
return (p1__17750_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17750_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18115) : p1__17750_SHARP_.call(null,G__18115));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__17751_SHARP_){
var or__3583__auto__ = (function (){var G__18117 = x;
return (p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18117) : p1__17751_SHARP_.call(null,G__18117));
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var G__18119 = y;
return (p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18119) : p1__17751_SHARP_.call(null,G__18119));
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var G__18120 = z;
return (p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17751_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18120) : p1__17751_SHARP_.call(null,G__18120));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__18137__delegate = function (x,y,z,args){
var or__3583__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.some(((function (or__3583__auto__,ps__$1){
return (function (p1__17752_SHARP_){
return cljs.core.some(p1__17752_SHARP_,args);
});})(or__3583__auto__,ps__$1))
,ps__$1);
}
};
var G__18137 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18138__i = 0, G__18138__a = new Array(arguments.length -  3);
while (G__18138__i < G__18138__a.length) {G__18138__a[G__18138__i] = arguments[G__18138__i + 3]; ++G__18138__i;}
  args = new cljs.core.IndexedSeq(G__18138__a,0);
} 
return G__18137__delegate.call(this,x,y,z,args);};
G__18137.cljs$lang$maxFixedArity = 3;
G__18137.cljs$lang$applyTo = (function (arglist__18139){
var x = cljs.core.first(arglist__18139);
arglist__18139 = cljs.core.next(arglist__18139);
var y = cljs.core.first(arglist__18139);
arglist__18139 = cljs.core.next(arglist__18139);
var z = cljs.core.first(arglist__18139);
var args = cljs.core.rest(arglist__18139);
return G__18137__delegate(x,y,z,args);
});
G__18137.cljs$core$IFn$_invoke$arity$variadic = G__18137__delegate;
return G__18137;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__18140 = null;
if (arguments.length > 3) {
var G__18141__i = 0, G__18141__a = new Array(arguments.length -  3);
while (G__18141__i < G__18141__a.length) {G__18141__a[G__18141__i] = arguments[G__18141__i + 3]; ++G__18141__i;}
G__18140 = new cljs.core.IndexedSeq(G__18141__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__18136 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__18142__i = 0, G__18142__a = new Array(arguments.length -  3);
while (G__18142__i < G__18142__a.length) {G__18142__a[G__18142__i] = arguments[G__18142__i + 3]; ++G__18142__i;}
  ps = new cljs.core.IndexedSeq(G__18142__a,0);
} 
return G__18136__delegate.call(this,p1,p2,p3,ps);};
G__18136.cljs$lang$maxFixedArity = 3;
G__18136.cljs$lang$applyTo = (function (arglist__18143){
var p1 = cljs.core.first(arglist__18143);
arglist__18143 = cljs.core.next(arglist__18143);
var p2 = cljs.core.first(arglist__18143);
arglist__18143 = cljs.core.next(arglist__18143);
var p3 = cljs.core.first(arglist__18143);
var ps = cljs.core.rest(arglist__18143);
return G__18136__delegate(p1,p2,p3,ps);
});
G__18136.cljs$core$IFn$_invoke$arity$variadic = G__18136__delegate;
return G__18136;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__18144 = null;
if (arguments.length > 3) {
var G__18145__i = 0, G__18145__a = new Array(arguments.length -  3);
while (G__18145__i < G__18145__a.length) {G__18145__a[G__18145__i] = arguments[G__18145__i + 3]; ++G__18145__i;}
G__18144 = new cljs.core.IndexedSeq(G__18145__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__18144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__18200 = null;
var G__18200__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18200__1 = (function (result){
var G__18186 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18186) : rf.call(null,G__18186));
});
var G__18200__2 = (function (result,input){
var G__18187 = result;
var G__18188 = (function (){var G__18189 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18189) : f.call(null,G__18189));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18187,G__18188) : rf.call(null,G__18187,G__18188));
});
var G__18200__3 = (function() { 
var G__18201__delegate = function (result,input,inputs){
var G__18190 = result;
var G__18191 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18190,G__18191) : rf.call(null,G__18190,G__18191));
};
var G__18201 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__18202__i = 0, G__18202__a = new Array(arguments.length -  2);
while (G__18202__i < G__18202__a.length) {G__18202__a[G__18202__i] = arguments[G__18202__i + 2]; ++G__18202__i;}
  inputs = new cljs.core.IndexedSeq(G__18202__a,0);
} 
return G__18201__delegate.call(this,result,input,inputs);};
G__18201.cljs$lang$maxFixedArity = 2;
G__18201.cljs$lang$applyTo = (function (arglist__18203){
var result = cljs.core.first(arglist__18203);
arglist__18203 = cljs.core.next(arglist__18203);
var input = cljs.core.first(arglist__18203);
var inputs = cljs.core.rest(arglist__18203);
return G__18201__delegate(result,input,inputs);
});
G__18201.cljs$core$IFn$_invoke$arity$variadic = G__18201__delegate;
return G__18201;
})()
;
G__18200 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__18200__0.call(this);
case 1:
return G__18200__1.call(this,result);
case 2:
return G__18200__2.call(this,result,input);
default:
var G__18204 = null;
if (arguments.length > 2) {
var G__18205__i = 0, G__18205__a = new Array(arguments.length -  2);
while (G__18205__i < G__18205__a.length) {G__18205__a[G__18205__i] = arguments[G__18205__i + 2]; ++G__18205__i;}
G__18204 = new cljs.core.IndexedSeq(G__18205__a,0);
}
return G__18200__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__18204);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18200.cljs$lang$maxFixedArity = 2;
G__18200.cljs$lang$applyTo = G__18200__3.cljs$lang$applyTo;
G__18200.cljs$core$IFn$_invoke$arity$0 = G__18200__0;
G__18200.cljs$core$IFn$_invoke$arity$1 = G__18200__1;
G__18200.cljs$core$IFn$_invoke$arity$2 = G__18200__2;
G__18200.cljs$core$IFn$_invoke$arity$variadic = G__18200__3.cljs$core$IFn$_invoke$arity$variadic;
return G__18200;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4470__auto___18206 = size;
var i_18207 = (0);
while(true){
if((i_18207 < n__4470__auto___18206)){
cljs.core.chunk_append(b,(function (){var G__18192 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18207);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18192) : f.call(null,G__18192));
})());

var G__18208 = (i_18207 + (1));
i_18207 = G__18208;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__18193 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18193) : f.call(null,G__18193));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__18194 = cljs.core.first(s1);
var G__18195 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18194,G__18195) : f.call(null,G__18194,G__18195));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__18196 = cljs.core.first(s1);
var G__18197 = cljs.core.first(s2);
var G__18198 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18196,G__18197,G__18198) : f.call(null,G__18196,G__18197,G__18198));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__18209__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__18146_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__18146_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__18209 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__18210__i = 0, G__18210__a = new Array(arguments.length -  4);
while (G__18210__i < G__18210__a.length) {G__18210__a[G__18210__i] = arguments[G__18210__i + 4]; ++G__18210__i;}
  colls = new cljs.core.IndexedSeq(G__18210__a,0);
} 
return G__18209__delegate.call(this,f,c1,c2,c3,colls);};
G__18209.cljs$lang$maxFixedArity = 4;
G__18209.cljs$lang$applyTo = (function (arglist__18211){
var f = cljs.core.first(arglist__18211);
arglist__18211 = cljs.core.next(arglist__18211);
var c1 = cljs.core.first(arglist__18211);
arglist__18211 = cljs.core.next(arglist__18211);
var c2 = cljs.core.first(arglist__18211);
arglist__18211 = cljs.core.next(arglist__18211);
var c3 = cljs.core.first(arglist__18211);
var colls = cljs.core.rest(arglist__18211);
return G__18209__delegate(f,c1,c2,c3,colls);
});
G__18209.cljs$core$IFn$_invoke$arity$variadic = G__18209__delegate;
return G__18209;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__18212 = null;
if (arguments.length > 4) {
var G__18213__i = 0, G__18213__a = new Array(arguments.length -  4);
while (G__18213__i < G__18213__a.length) {G__18213__a[G__18213__i] = arguments[G__18213__i + 4]; ++G__18213__i;}
G__18212 = new cljs.core.IndexedSeq(G__18213__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__18212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__18222 = null;
var G__18222__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18222__1 = (function (result){
var G__18219 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18219) : rf.call(null,G__18219));
});
var G__18222__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__18220 = result;
var G__18221 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18220,G__18221) : rf.call(null,G__18220,G__18221));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__18222 = function(result,input){
switch(arguments.length){
case 0:
return G__18222__0.call(this);
case 1:
return G__18222__1.call(this,result);
case 2:
return G__18222__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18222.cljs$core$IFn$_invoke$arity$0 = G__18222__0;
G__18222.cljs$core$IFn$_invoke$arity$1 = G__18222__1;
G__18222.cljs$core$IFn$_invoke$arity$2 = G__18222__2;
return G__18222;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__18229 = null;
var G__18229__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18229__1 = (function (result){
var G__18226 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18226) : rf.call(null,G__18226));
});
var G__18229__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__18227 = result;
var G__18228 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18227,G__18228) : rf.call(null,G__18227,G__18228));
}
});
G__18229 = function(result,input){
switch(arguments.length){
case 0:
return G__18229__0.call(this);
case 1:
return G__18229__1.call(this,result);
case 2:
return G__18229__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18229.cljs$core$IFn$_invoke$arity$0 = G__18229__0;
G__18229.cljs$core$IFn$_invoke$arity$1 = G__18229__1;
G__18229.cljs$core$IFn$_invoke$arity$2 = G__18229__2;
return G__18229;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__18230 = (n__$1 - (1));
var G__18231 = cljs.core.rest(s);
n__$1 = G__18230;
coll__$1 = G__18231;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__18234 = cljs.core.next(s);
var G__18235 = cljs.core.next(lead);
s = G__18234;
lead = G__18235;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__18248 = null;
var G__18248__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18248__1 = (function (result){
var G__18242 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18242) : rf.call(null,G__18242));
});
var G__18248__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3571__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3571__auto__)){
var G__18243 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18243) : pred.call(null,G__18243));
} else {
return and__3571__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__18244 = result;
var G__18245 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18244,G__18245) : rf.call(null,G__18244,G__18245));
}
});
G__18248 = function(result,input){
switch(arguments.length){
case 0:
return G__18248__0.call(this);
case 1:
return G__18248__1.call(this,result);
case 2:
return G__18248__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18248.cljs$core$IFn$_invoke$arity$0 = G__18248__0;
G__18248.cljs$core$IFn$_invoke$arity$1 = G__18248__1;
G__18248.cljs$core$IFn$_invoke$arity$2 = G__18248__2;
return G__18248;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3571__auto__ = s;
if(and__3571__auto__){
var G__18247 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__18247) : pred__$1.call(null,G__18247));
} else {
return and__3571__auto__;
}
})())){
var G__18249 = pred__$1;
var G__18250 = cljs.core.rest(s);
pred__$1 = G__18249;
coll__$1 = G__18250;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__18259 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18259) : f.call(null,G__18259));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__18262__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__18262 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__18263__i = 0, G__18263__a = new Array(arguments.length -  2);
while (G__18263__i < G__18263__a.length) {G__18263__a[G__18263__i] = arguments[G__18263__i + 2]; ++G__18263__i;}
  colls = new cljs.core.IndexedSeq(G__18263__a,0);
} 
return G__18262__delegate.call(this,c1,c2,colls);};
G__18262.cljs$lang$maxFixedArity = 2;
G__18262.cljs$lang$applyTo = (function (arglist__18264){
var c1 = cljs.core.first(arglist__18264);
arglist__18264 = cljs.core.next(arglist__18264);
var c2 = cljs.core.first(arglist__18264);
var colls = cljs.core.rest(arglist__18264);
return G__18262__delegate(c1,c2,colls);
});
G__18262.cljs$core$IFn$_invoke$arity$variadic = G__18262__delegate;
return G__18262;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__18265 = null;
if (arguments.length > 2) {
var G__18266__i = 0, G__18266__a = new Array(arguments.length -  2);
while (G__18266__i < G__18266__a.length) {G__18266__a[G__18266__i] = arguments[G__18266__i + 2]; ++G__18266__i;}
G__18265 = new cljs.core.IndexedSeq(G__18266__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__18265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__18281 = null;
var G__18281__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18281__1 = (function (result){
var G__18274 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18274) : rf.call(null,G__18274));
});
var G__18281__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__18275 = result;
var G__18276 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18275,G__18276) : rf.call(null,G__18275,G__18276));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__18277 = sepr;
var G__18278 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18277,G__18278) : rf.call(null,G__18277,G__18278));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__18279 = result;
var G__18280 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18279,G__18280) : rf.call(null,G__18279,G__18280));
}
});
G__18281 = function(result,input){
switch(arguments.length){
case 0:
return G__18281__0.call(this);
case 1:
return G__18281__1.call(this,result);
case 2:
return G__18281__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18281.cljs$core$IFn$_invoke$arity$0 = G__18281__0;
G__18281.cljs$core$IFn$_invoke$arity$1 = G__18281__1;
G__18281.cljs$core$IFn$_invoke$arity$2 = G__18281__2;
return G__18281;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__18290__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__18290 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__18291__i = 0, G__18291__a = new Array(arguments.length -  1);
while (G__18291__i < G__18291__a.length) {G__18291__a[G__18291__i] = arguments[G__18291__i + 1]; ++G__18291__i;}
  colls = new cljs.core.IndexedSeq(G__18291__a,0);
} 
return G__18290__delegate.call(this,f,colls);};
G__18290.cljs$lang$maxFixedArity = 1;
G__18290.cljs$lang$applyTo = (function (arglist__18292){
var f = cljs.core.first(arglist__18292);
var colls = cljs.core.rest(arglist__18292);
return G__18290__delegate(f,colls);
});
G__18290.cljs$core$IFn$_invoke$arity$variadic = G__18290__delegate;
return G__18290;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__18293 = null;
if (arguments.length > 1) {
var G__18294__i = 0, G__18294__a = new Array(arguments.length -  1);
while (G__18294__i < G__18294__a.length) {G__18294__a[G__18294__i] = arguments[G__18294__i + 1]; ++G__18294__i;}
G__18293 = new cljs.core.IndexedSeq(G__18294__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__18293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__18313 = null;
var G__18313__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18313__1 = (function (result){
var G__18307 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18307) : rf.call(null,G__18307));
});
var G__18313__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__18308 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18308) : pred.call(null,G__18308));
})())){
var G__18309 = result;
var G__18310 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18309,G__18310) : rf.call(null,G__18309,G__18310));
} else {
return result;
}
});
G__18313 = function(result,input){
switch(arguments.length){
case 0:
return G__18313__0.call(this);
case 1:
return G__18313__1.call(this,result);
case 2:
return G__18313__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18313.cljs$core$IFn$_invoke$arity$0 = G__18313__0;
G__18313.cljs$core$IFn$_invoke$arity$1 = G__18313__1;
G__18313.cljs$core$IFn$_invoke$arity$2 = G__18313__2;
return G__18313;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4470__auto___18314 = size;
var i_18315 = (0);
while(true){
if((i_18315 < n__4470__auto___18314)){
if(cljs.core.truth_((function (){var G__18311 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18315);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18311) : pred.call(null,G__18311));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18315));
} else {
}

var G__18316 = (i_18315 + (1));
i_18315 = G__18316;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__18312 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18312) : pred.call(null,G__18312));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__18323 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__18323) : branch_QMARK_.call(null,G__18323));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__18324 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__18324) : children.call(null,G__18324));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__18325_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__18325_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__18328 = to;
if(G__18328){
var bit__4257__auto__ = (G__18328.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4257__auto__) || (G__18328.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__18329 = to;
if(G__18329){
var bit__4257__auto__ = (G__18329.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4257__auto__) || (G__18329.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__18331 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18331) : f.call(null,G__18331));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__18332__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__18332 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__18333__i = 0, G__18333__a = new Array(arguments.length -  4);
while (G__18333__i < G__18333__a.length) {G__18333__a[G__18333__i] = arguments[G__18333__i + 4]; ++G__18333__i;}
  colls = new cljs.core.IndexedSeq(G__18333__a,0);
} 
return G__18332__delegate.call(this,f,c1,c2,c3,colls);};
G__18332.cljs$lang$maxFixedArity = 4;
G__18332.cljs$lang$applyTo = (function (arglist__18334){
var f = cljs.core.first(arglist__18334);
arglist__18334 = cljs.core.next(arglist__18334);
var c1 = cljs.core.first(arglist__18334);
arglist__18334 = cljs.core.next(arglist__18334);
var c2 = cljs.core.first(arglist__18334);
arglist__18334 = cljs.core.next(arglist__18334);
var c3 = cljs.core.first(arglist__18334);
var colls = cljs.core.rest(arglist__18334);
return G__18332__delegate(f,c1,c2,c3,colls);
});
G__18332.cljs$core$IFn$_invoke$arity$variadic = G__18332__delegate;
return G__18332;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__18335 = null;
if (arguments.length > 4) {
var G__18336__i = 0, G__18336__a = new Array(arguments.length -  4);
while (G__18336__i < G__18336__a.length) {G__18336__a[G__18336__i] = arguments[G__18336__i + 4]; ++G__18336__i;}
G__18335 = new cljs.core.IndexedSeq(G__18336__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__18335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__18338 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18338) : pred.call(null,G__18338));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__18353 = m__$1;
if(G__18353){
var bit__4264__auto__ = (G__18353.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4264__auto__) || (G__18353.cljs$core$ILookup$)){
return true;
} else {
if((!G__18353.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__18353);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__18353);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__18354 = sentinel;
var G__18355 = m__$2;
var G__18356 = cljs.core.next(ks__$1);
sentinel = G__18354;
m__$1 = G__18355;
ks__$1 = G__18356;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__18357,v){
var vec__18362 = p__18357;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18362,(0),null);
var ks = cljs.core.nthnext(vec__18362,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__18363,f){
var vec__18401 = p__18363;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18401,(0),null);
var ks = cljs.core.nthnext(vec__18401,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18402 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18402) : f.call(null,G__18402));
})());
}
});
var update_in__4 = (function (m,p__18364,f,a){
var vec__18403 = p__18364;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18403,(0),null);
var ks = cljs.core.nthnext(vec__18403,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18404 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18405 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18404,G__18405) : f.call(null,G__18404,G__18405));
})());
}
});
var update_in__5 = (function (m,p__18365,f,a,b){
var vec__18406 = p__18365;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18406,(0),null);
var ks = cljs.core.nthnext(vec__18406,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18407 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18408 = a;
var G__18409 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18407,G__18408,G__18409) : f.call(null,G__18407,G__18408,G__18409));
})());
}
});
var update_in__6 = (function (m,p__18366,f,a,b,c){
var vec__18410 = p__18366;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18410,(0),null);
var ks = cljs.core.nthnext(vec__18410,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18411 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18412 = a;
var G__18413 = b;
var G__18414 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18411,G__18412,G__18413,G__18414) : f.call(null,G__18411,G__18412,G__18413,G__18414));
})());
}
});
var update_in__7 = (function() { 
var G__18416__delegate = function (m,p__18367,f,a,b,c,args){
var vec__18415 = p__18367;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18415,(0),null);
var ks = cljs.core.nthnext(vec__18415,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__18416 = function (m,p__18367,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__18417__i = 0, G__18417__a = new Array(arguments.length -  6);
while (G__18417__i < G__18417__a.length) {G__18417__a[G__18417__i] = arguments[G__18417__i + 6]; ++G__18417__i;}
  args = new cljs.core.IndexedSeq(G__18417__a,0);
} 
return G__18416__delegate.call(this,m,p__18367,f,a,b,c,args);};
G__18416.cljs$lang$maxFixedArity = 6;
G__18416.cljs$lang$applyTo = (function (arglist__18418){
var m = cljs.core.first(arglist__18418);
arglist__18418 = cljs.core.next(arglist__18418);
var p__18367 = cljs.core.first(arglist__18418);
arglist__18418 = cljs.core.next(arglist__18418);
var f = cljs.core.first(arglist__18418);
arglist__18418 = cljs.core.next(arglist__18418);
var a = cljs.core.first(arglist__18418);
arglist__18418 = cljs.core.next(arglist__18418);
var b = cljs.core.first(arglist__18418);
arglist__18418 = cljs.core.next(arglist__18418);
var c = cljs.core.first(arglist__18418);
var args = cljs.core.rest(arglist__18418);
return G__18416__delegate(m,p__18367,f,a,b,c,args);
});
G__18416.cljs$core$IFn$_invoke$arity$variadic = G__18416__delegate;
return G__18416;
})()
;
update_in = function(m,p__18367,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__18367,f);
case 4:
return update_in__4.call(this,m,p__18367,f,a);
case 5:
return update_in__5.call(this,m,p__18367,f,a,b);
case 6:
return update_in__6.call(this,m,p__18367,f,a,b,c);
default:
var G__18419 = null;
if (arguments.length > 6) {
var G__18420__i = 0, G__18420__a = new Array(arguments.length -  6);
while (G__18420__i < G__18420__a.length) {G__18420__a[G__18420__i] = arguments[G__18420__i + 6]; ++G__18420__i;}
G__18419 = new cljs.core.IndexedSeq(G__18420__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__18367,f,a,b,c, G__18419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18431 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18431) : f.call(null,G__18431));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18432 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18433 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18432,G__18433) : f.call(null,G__18432,G__18433));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18434 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18435 = x;
var G__18436 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18434,G__18435,G__18436) : f.call(null,G__18434,G__18435,G__18436));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18437 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18438 = x;
var G__18439 = y;
var G__18440 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18437,G__18438,G__18439,G__18440) : f.call(null,G__18437,G__18438,G__18439,G__18440));
})());
});
var update__7 = (function() { 
var G__18441__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__18441 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__18442__i = 0, G__18442__a = new Array(arguments.length -  6);
while (G__18442__i < G__18442__a.length) {G__18442__a[G__18442__i] = arguments[G__18442__i + 6]; ++G__18442__i;}
  more = new cljs.core.IndexedSeq(G__18442__a,0);
} 
return G__18441__delegate.call(this,m,k,f,x,y,z,more);};
G__18441.cljs$lang$maxFixedArity = 6;
G__18441.cljs$lang$applyTo = (function (arglist__18443){
var m = cljs.core.first(arglist__18443);
arglist__18443 = cljs.core.next(arglist__18443);
var k = cljs.core.first(arglist__18443);
arglist__18443 = cljs.core.next(arglist__18443);
var f = cljs.core.first(arglist__18443);
arglist__18443 = cljs.core.next(arglist__18443);
var x = cljs.core.first(arglist__18443);
arglist__18443 = cljs.core.next(arglist__18443);
var y = cljs.core.first(arglist__18443);
arglist__18443 = cljs.core.next(arglist__18443);
var z = cljs.core.first(arglist__18443);
var more = cljs.core.rest(arglist__18443);
return G__18441__delegate(m,k,f,x,y,z,more);
});
G__18441.cljs$core$IFn$_invoke$arity$variadic = G__18441__delegate;
return G__18441;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__18444 = null;
if (arguments.length > 6) {
var G__18445__i = 0, G__18445__a = new Array(arguments.length -  6);
while (G__18445__i < G__18445__a.length) {G__18445__a[G__18445__i] = arguments[G__18445__i + 6]; ++G__18445__i;}
G__18444 = new cljs.core.IndexedSeq(G__18445__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__18444);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__18446 = (ll - (5));
var G__18447 = r;
ll = G__18446;
ret = G__18447;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__18452 = cljs.core.pv_aget(node,(0));
var G__18453 = (level - (5));
node = G__18452;
level = G__18453;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__18454 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__18455 = (level - (5));
node = G__18454;
level = G__18455;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__18465 = init__$2;
var G__18466 = (j + i);
var G__18467 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18465,G__18466,G__18467) : f.call(null,G__18465,G__18466,G__18467));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__18478 = (j + (1));
var G__18479 = init__$3;
j = G__18478;
init__$2 = G__18479;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18468 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18468) : cljs.core.deref.call(null,G__18468));
} else {
var G__18480 = (i + len);
var G__18481 = init__$2;
i = G__18480;
init__$1 = G__18481;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__18469 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__18469) : cljs.core.tv_editable_root.call(null,G__18469));
})(),(function (){var G__18470 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__18470) : cljs.core.tv_editable_tail.call(null,G__18470));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__18471 = init__$2;
var G__18472 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18471,G__18472) : f.call(null,G__18471,G__18472));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__18482 = (j + (1));
var G__18483 = init__$3;
j = G__18482;
init__$2 = G__18483;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18473 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18473) : cljs.core.deref.call(null,G__18473));
} else {
var G__18484 = (i + len);
var G__18485 = init__$2;
i = G__18484;
init__$1 = G__18485;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__18474 = coll__$1;
var G__18475 = cljs.core.first_array_for_longvec(coll__$1);
var G__18476 = (0);
var G__18477 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__18474,G__18475,G__18476,G__18477) : cljs.core.chunked_seq.call(null,G__18474,G__18475,G__18476,G__18477));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4470__auto___18486 = len;
var i_18487 = (0);
while(true){
if((i_18487 < n__4470__auto___18486)){
(new_tail[i_18487] = (self__.tail[i_18487]));

var G__18488 = (i_18487 + (1));
i_18487 = G__18488;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__18489 = null;
var G__18489__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__18489__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__18489 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18489__2.call(this,self__,k);
case 3:
return G__18489__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18489.cljs$core$IFn$_invoke$arity$2 = G__18489__2;
G__18489.cljs$core$IFn$_invoke$arity$3 = G__18489__3;
return G__18489;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args18464){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18464)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__18490 = (i + (1));
var G__18491 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__18490;
out = G__18491;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18492__i = 0, G__18492__a = new Array(arguments.length -  0);
while (G__18492__i < G__18492__a.length) {G__18492__a[G__18492__i] = arguments[G__18492__i + 0]; ++G__18492__i;}
  args = new cljs.core.IndexedSeq(G__18492__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__18493){
var args = cljs.core.seq(arglist__18493);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__18494 = self__.vec;
var G__18495 = self__.node;
var G__18496 = self__.i;
var G__18497 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__18494,G__18495,G__18496,G__18497) : cljs.core.chunked_seq.call(null,G__18494,G__18495,G__18496,G__18497));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__18498 = self__.vec;
var G__18499 = (self__.i + self__.off);
var G__18500 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__18498,G__18499,G__18500) : cljs.core.subvec.call(null,G__18498,G__18499,G__18500));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__18501 = self__.vec;
var G__18502 = (self__.i + self__.off);
var G__18503 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__18501,G__18502,G__18503) : cljs.core.subvec.call(null,G__18501,G__18502,G__18503));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__18504 = self__.vec;
var G__18505 = self__.node;
var G__18506 = self__.i;
var G__18507 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__18504,G__18505,G__18506,G__18507) : cljs.core.chunked_seq.call(null,G__18504,G__18505,G__18506,G__18507));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__18508 = self__.vec;
var G__18509 = cljs.core.unchecked_array_for(self__.vec,end);
var G__18510 = end;
var G__18511 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__18508,G__18509,G__18510,G__18511) : cljs.core.chunked_seq.call(null,G__18508,G__18509,G__18510,G__18511));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__18512 = self__.vec;
var G__18513 = self__.node;
var G__18514 = self__.i;
var G__18515 = self__.off;
var G__18516 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__18512,G__18513,G__18514,G__18515,G__18516) : cljs.core.chunked_seq.call(null,G__18512,G__18513,G__18514,G__18515,G__18516));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__18517 = self__.vec;
var G__18518 = cljs.core.unchecked_array_for(self__.vec,end);
var G__18519 = end;
var G__18520 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__18517,G__18518,G__18519,G__18520) : cljs.core.chunked_seq.call(null,G__18517,G__18518,G__18519,G__18520));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__18522 = self__.meta;
var G__18523 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__18524 = self__.start;
var G__18525 = (function (){var x__3900__auto__ = self__.end;
var y__3901__auto__ = (v_pos + (1));
return ((x__3900__auto__ > y__3901__auto__) ? x__3900__auto__ : y__3901__auto__);
})();
var G__18526 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__18522,G__18523,G__18524,G__18525,G__18526) : cljs.core.build_subvec.call(null,G__18522,G__18523,G__18524,G__18525,G__18526));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__18527 = self__.meta;
var G__18528 = self__.v;
var G__18529 = self__.start;
var G__18530 = (self__.end - (1));
var G__18531 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__18527,G__18528,G__18529,G__18530,G__18531) : cljs.core.build_subvec.call(null,G__18527,G__18528,G__18529,G__18530,G__18531));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__18533 = meta__$1;
var G__18534 = self__.v;
var G__18535 = self__.start;
var G__18536 = self__.end;
var G__18537 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__18533,G__18534,G__18535,G__18536,G__18537) : cljs.core.build_subvec.call(null,G__18533,G__18534,G__18535,G__18536,G__18537));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18538 = self__.meta;
var G__18539 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__18540 = self__.start;
var G__18541 = (self__.end + (1));
var G__18542 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__18538,G__18539,G__18540,G__18541,G__18542) : cljs.core.build_subvec.call(null,G__18538,G__18539,G__18540,G__18541,G__18542));
});

cljs.core.Subvec.prototype.call = (function() {
var G__18543 = null;
var G__18543__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__18543__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__18543 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18543__2.call(this,self__,k);
case 3:
return G__18543__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18543.cljs$core$IFn$_invoke$arity$2 = G__18543__2;
G__18543.cljs$core$IFn$_invoke$arity$3 = G__18543__3;
return G__18543;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args18521){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18521)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__18544 = meta;
var G__18545 = v.v;
var G__18546 = (v.start + start);
var G__18547 = (v.start + end);
var G__18548 = __hash;
meta = G__18544;
v = G__18545;
start = G__18546;
end = G__18547;
__hash = G__18548;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj18555 = {};
return obj18555;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__18563 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__18564 = (level - (5));
node = G__18563;
level = G__18564;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__18568 = null;
var G__18568__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18568__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18568 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18568__2.call(this,self__,k);
case 3:
return G__18568__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18568.cljs$core$IFn$_invoke$arity$2 = G__18568__2;
G__18568.cljs$core$IFn$_invoke$arity$3 = G__18568__3;
return G__18568;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args18565){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18565)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3583__auto__ = self__.front;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3583__auto__ = self__.rear;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__18569 = (i + incr);
i = G__18569;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__18570 = (i + (1));
var G__18571 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__18570;
out = G__18571;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj18575 = {};
return obj18575;
})();
var l = ks.length;
var i_18576 = (0);
while(true){
if((i_18576 < l)){
var k_18577 = (ks[i_18576]);
(new_obj[k_18577] = (obj[k_18577]));

var G__18578 = (i_18576 + (1));
i_18576 = G__18578;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3571__auto__ = (function (){var G__18582 = k;
return goog.isString(G__18582);
})();
if(cljs.core.truth_(and__3571__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3571__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__18583 = init__$1;
var G__18584 = k;
var G__18585 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18583,G__18584,G__18585) : f.call(null,G__18583,G__18584,G__18585));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18586 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18586) : cljs.core.deref.call(null,G__18586));
} else {
var G__18592 = cljs.core.rest(keys__$1);
var G__18593 = init__$2;
keys__$1 = G__18592;
init__$1 = G__18593;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3571__auto__ = (function (){var G__18588 = k;
return goog.isString(G__18588);
})();
if(cljs.core.truth_(and__3571__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3571__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__18589 = k;
return goog.isString(G__18589);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3571__auto__ = (function (){var G__18591 = k;
return goog.isString(G__18591);
})();
if(cljs.core.truth_(and__3571__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3571__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__18579_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__18579_SHARP_,(self__.strobj[p1__18579_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__18594 = null;
var G__18594__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18594__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18594 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18594__2.call(this,self__,k);
case 3:
return G__18594__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18594.cljs$core$IFn$_invoke$arity$2 = G__18594__2;
G__18594.cljs$core$IFn$_invoke$arity$3 = G__18594__3;
return G__18594;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args18580){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18580)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj18596 = {};
return obj18596;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__18597 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18597,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18597,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__18598 = (i + (2));
i = G__18598;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__18599 = (i + (2));
i = G__18599;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__18600 = (i + (2));
i = G__18600;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__18601 = (i + (2));
i = G__18601;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__18602 = (i + (2));
i = G__18602;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3583__auto__ = (function (){var G__18606 = k;
return goog.isString(G__18606);
})();
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_18607 = (0);
while(true){
if((i_18607 < l)){
(narr[i_18607] = (arr[i_18607]));

var G__18608 = (i_18607 + (1));
i_18607 = G__18608;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18610 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__18610) : cljs.core.keys.call(null,G__18610));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18611 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__18611) : cljs.core.vals.call(null,G__18611));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__18612 = cljs.core.seq(coll);
var chunk__18613 = null;
var count__18614 = (0);
var i__18615 = (0);
while(true){
if((i__18615 < count__18614)){
var vec__18616 = chunk__18613.cljs$core$IIndexed$_nth$arity$2(null,i__18615);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18616,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18616,(1),null);
var G__18617_18630 = v;
var G__18618_18631 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18617_18630,G__18618_18631) : f.call(null,G__18617_18630,G__18618_18631));

var G__18632 = seq__18612;
var G__18633 = chunk__18613;
var G__18634 = count__18614;
var G__18635 = (i__18615 + (1));
seq__18612 = G__18632;
chunk__18613 = G__18633;
count__18614 = G__18634;
i__18615 = G__18635;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__18612);
if(temp__4126__auto__){
var seq__18612__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__18612__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__18612__$1);
var G__18636 = cljs.core.chunk_rest(seq__18612__$1);
var G__18637 = c__4370__auto__;
var G__18638 = cljs.core.count(c__4370__auto__);
var G__18639 = (0);
seq__18612 = G__18636;
chunk__18613 = G__18637;
count__18614 = G__18638;
i__18615 = G__18639;
continue;
} else {
var vec__18619 = cljs.core.first(seq__18612__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18619,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18619,(1),null);
var G__18620_18640 = v;
var G__18621_18641 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18620_18640,G__18621_18641) : f.call(null,G__18620_18640,G__18621_18641));

var G__18642 = cljs.core.next(seq__18612__$1);
var G__18643 = null;
var G__18644 = (0);
var G__18645 = (0);
seq__18612 = G__18642;
chunk__18613 = G__18643;
count__18614 = G__18644;
i__18615 = G__18645;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__18622 = init__$1;
var G__18623 = (self__.arr[i]);
var G__18624 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18622,G__18623,G__18624) : f.call(null,G__18622,G__18623,G__18624));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18625 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18625) : cljs.core.deref.call(null,G__18625));
} else {
var G__18646 = (i + (2));
var G__18647 = init__$2;
i = G__18646;
init__$1 = G__18647;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__18626 = other;
if(G__18626){
var bit__4257__auto__ = (G__18626.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4257__auto__) || (G__18626.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__18648 = (i + (2));
i = G__18648;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj18628 = {};
return obj18628;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__18649 = (s + (2));
var G__18650 = d;
s = G__18649;
d = G__18650;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__18651 = (s + (2));
var G__18652 = (d + (2));
s = G__18651;
d = G__18652;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__18629 = cljs.core.aclone(self__.arr);
(G__18629[(idx + (1))] = v);

return G__18629;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__18653 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__18654 = cljs.core.next(es);
ret = G__18653;
es = G__18654;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__18655 = null;
var G__18655__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18655__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18655 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18655__2.call(this,self__,k);
case 3:
return G__18655__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18655.cljs$core$IFn$_invoke$arity$2 = G__18655__2;
G__18655.cljs$core$IFn$_invoke$arity$3 = G__18655__3;
return G__18655;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args18609){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18609)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__18656 = (i + (2));
var G__18657 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__18656;
ret = G__18657;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__18658_18666 = self__.arr;
G__18658_18666.pop();

G__18658_18666.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__18659 = self__.len;
var G__18660 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__18659,G__18660) : cljs.core.array__GT_transient_hash_map.call(null,G__18659,G__18660));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__18661 = o;
if(G__18661){
var bit__4264__auto__ = (G__18661.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4264__auto__) || (G__18661.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__18661.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__18661);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__18661);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__18662 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18662) : cljs.core.key.call(null,G__18662));
})(),(function (){var G__18663 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18663) : cljs.core.val.call(null,G__18663));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__18667 = cljs.core.next(es);
var G__18668 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__18664 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18664) : cljs.core.key.call(null,G__18664));
})(),(function (){var G__18665 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18665) : cljs.core.val.call(null,G__18665));
})());
es = G__18667;
tcoll__$2 = G__18668;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__18669 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__18670 = (i + (2));
out = G__18669;
i = G__18670;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__18673 = cljs.core.aclone(arr);
(G__18673[i] = a);

return G__18673;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__18674 = cljs.core.aclone(arr);
(G__18674[i] = a);

(G__18674[j] = b);

return G__18674;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__18679 = init__$1;
var G__18680 = k;
var G__18681 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18679,G__18680,G__18681) : f.call(null,G__18679,G__18680,G__18681));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18682 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18682) : cljs.core.deref.call(null,G__18682));
} else {
var G__18683 = (i + (2));
var G__18684 = init__$2;
i = G__18683;
init__$1 = G__18684;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__18685 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__18685) : cljs.core.create_inode_seq.call(null,G__18685));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_18699 = (0);
var j_18700 = (0);
while(true){
if((i_18699 < (32))){
if((((self__.bitmap >>> i_18699) & (1)) === (0))){
var G__18701 = (i_18699 + (1));
var G__18702 = j_18700;
i_18699 = G__18701;
j_18700 = G__18702;
continue;
} else {
(nodes[i_18699] = ((!(((self__.arr[j_18700]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_18700])),(self__.arr[j_18700]),(self__.arr[(j_18700 + (1))]),added_leaf_QMARK_):(self__.arr[(j_18700 + (1))])));

var G__18703 = (i_18699 + (1));
var G__18704 = (j_18700 + (2));
i_18699 = G__18703;
j_18700 = G__18704;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__18686 = edit__$1;
var G__18687 = (shift + (5));
var G__18688 = key_or_nil;
var G__18689 = val_or_node;
var G__18690 = hash;
var G__18691 = key;
var G__18692 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692) : cljs.core.create_node.call(null,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_18705 = (0);
var j_18706 = (0);
while(true){
if((i_18705 < (32))){
if((((self__.bitmap >>> i_18705) & (1)) === (0))){
var G__18707 = (i_18705 + (1));
var G__18708 = j_18706;
i_18705 = G__18707;
j_18706 = G__18708;
continue;
} else {
(nodes[i_18705] = ((!(((self__.arr[j_18706]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_18706])),(self__.arr[j_18706]),(self__.arr[(j_18706 + (1))]),added_leaf_QMARK_):(self__.arr[(j_18706 + (1))])));

var G__18709 = (i_18705 + (1));
var G__18710 = (j_18706 + (2));
i_18705 = G__18709;
j_18706 = G__18710;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__18693 = (shift + (5));
var G__18694 = key_or_nil;
var G__18695 = val_or_node;
var G__18696 = hash;
var G__18697 = key;
var G__18698 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__18693,G__18694,G__18695,G__18696,G__18697,G__18698) : cljs.core.create_node.call(null,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__18711 = (i + (1));
var G__18712 = (j + (2));
var G__18713 = (bitmap | ((1) << i));
i = G__18711;
j = G__18712;
bitmap = G__18713;
continue;
} else {
var G__18714 = (i + (1));
var G__18715 = j;
var G__18716 = bitmap;
i = G__18714;
j = G__18715;
bitmap = G__18716;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__18717 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__18717) : cljs.core.create_array_node_seq.call(null,G__18717));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18718 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18718) : cljs.core.deref.call(null,G__18718));
} else {
var G__18719 = (i + (1));
var G__18720 = init__$2;
i = G__18719;
init__$1 = G__18720;
continue;
}
} else {
var G__18721 = (i + (1));
var G__18722 = init__$1;
i = G__18721;
init__$1 = G__18722;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__18723 = (i + (2));
i = G__18723;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__18724 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__18724) : cljs.core.create_inode_seq.call(null,G__18724));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__18725 = self__.nodes;
var G__18726 = (self__.i + (2));
var G__18727 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__18725,G__18726,G__18727) : cljs.core.create_inode_seq.call(null,G__18725,G__18726,G__18727));
} else {
var G__18728 = self__.nodes;
var G__18729 = self__.i;
var G__18730 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__18728,G__18729,G__18730) : cljs.core.create_inode_seq.call(null,G__18728,G__18729,G__18730));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__18734 = (j + (2));
j = G__18734;
continue;
}
} else {
var G__18735 = (j + (2));
j = G__18735;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18736 = null;
var G__18737 = self__.nodes;
var G__18738 = self__.i;
var G__18739 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__18736,G__18737,G__18738,G__18739) : cljs.core.create_array_node_seq.call(null,G__18736,G__18737,G__18738,G__18739));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__18744 = (j + (1));
j = G__18744;
continue;
}
} else {
var G__18745 = (j + (1));
j = G__18745;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18747 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__18747) : cljs.core.keys.call(null,G__18747));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18748 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__18748) : cljs.core.vals.call(null,G__18748));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__18749 = cljs.core.seq(coll);
var chunk__18750 = null;
var count__18751 = (0);
var i__18752 = (0);
while(true){
if((i__18752 < count__18751)){
var vec__18753 = chunk__18750.cljs$core$IIndexed$_nth$arity$2(null,i__18752);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18753,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18753,(1),null);
var G__18754_18765 = v;
var G__18755_18766 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18754_18765,G__18755_18766) : f.call(null,G__18754_18765,G__18755_18766));

var G__18767 = seq__18749;
var G__18768 = chunk__18750;
var G__18769 = count__18751;
var G__18770 = (i__18752 + (1));
seq__18749 = G__18767;
chunk__18750 = G__18768;
count__18751 = G__18769;
i__18752 = G__18770;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__18749);
if(temp__4126__auto__){
var seq__18749__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__18749__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__18749__$1);
var G__18771 = cljs.core.chunk_rest(seq__18749__$1);
var G__18772 = c__4370__auto__;
var G__18773 = cljs.core.count(c__4370__auto__);
var G__18774 = (0);
seq__18749 = G__18771;
chunk__18750 = G__18772;
count__18751 = G__18773;
i__18752 = G__18774;
continue;
} else {
var vec__18756 = cljs.core.first(seq__18749__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18756,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18756,(1),null);
var G__18757_18775 = v;
var G__18758_18776 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18757_18775,G__18758_18776) : f.call(null,G__18757_18775,G__18758_18776));

var G__18777 = cljs.core.next(seq__18749__$1);
var G__18778 = null;
var G__18779 = (0);
var G__18780 = (0);
seq__18749 = G__18777;
chunk__18750 = G__18778;
count__18751 = G__18779;
i__18752 = G__18780;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__18759 = init;
var G__18760 = null;
var G__18761 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18759,G__18760,G__18761) : f.call(null,G__18759,G__18760,G__18761));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__18762 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18762) : cljs.core.deref.call(null,G__18762));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj18764 = {};
return obj18764;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__18781 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__18782 = cljs.core.next(es);
ret = G__18781;
es = G__18782;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__18783 = null;
var G__18783__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18783__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18783 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18783__2.call(this,self__,k);
case 3:
return G__18783__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18783.cljs$core$IFn$_invoke$arity$2 = G__18783__2;
G__18783.cljs$core$IFn$_invoke$arity$3 = G__18783__3;
return G__18783;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args18746){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18746)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__18784 = (i + (2));
var G__18785 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__18784;
ret = G__18785;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__18786 = (i + (1));
var G__18787 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__18786;
out = G__18787;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__18788 = o;
if(G__18788){
var bit__4264__auto__ = (G__18788.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4264__auto__) || (G__18788.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__18788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__18788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__18788);
}
})()){
return tcoll.assoc_BANG_((function (){var G__18789 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18789) : cljs.core.key.call(null,G__18789));
})(),(function (){var G__18790 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18790) : cljs.core.val.call(null,G__18790));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__18793 = cljs.core.next(es);
var G__18794 = tcoll__$1.assoc_BANG_((function (){var G__18791 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18791) : cljs.core.key.call(null,G__18791));
})(),(function (){var G__18792 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18792) : cljs.core.val.call(null,G__18792));
})());
es = G__18793;
tcoll__$1 = G__18794;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__18795 = ((ascending_QMARK_)?t.left:t.right);
var G__18796 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__18795;
stack__$1 = G__18796;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__18809 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18809) : cljs.core.deref.call(null,G__18809));
} else {
var init__$2 = (function (){var G__18810 = init__$1;
var G__18811 = node.key;
var G__18812 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18810,G__18811,G__18812) : f.call(null,G__18810,G__18811,G__18812));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__18813 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18813) : cljs.core.deref.call(null,G__18813));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__18814 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18814) : cljs.core.deref.call(null,G__18814));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__18816 = null;
var G__18816__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18816__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18816 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18816__2.call(this,self__,k);
case 3:
return G__18816__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18816.cljs$core$IFn$_invoke$arity$2 = G__18816__2;
G__18816.cljs$core$IFn$_invoke$arity$3 = G__18816__3;
return G__18816;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args18815){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18815)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__18818 = null;
var G__18818__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18818__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18818 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18818__2.call(this,self__,k);
case 3:
return G__18818__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18818.cljs$core$IFn$_invoke$arity$2 = G__18818__2;
G__18818.cljs$core$IFn$_invoke$arity$3 = G__18818__3;
return G__18818;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args18817){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18817)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__18831 = k;
var G__18832 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__18831,G__18832) : comp.call(null,G__18831,G__18832));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__18851 = k;
var G__18852 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__18851,G__18852) : comp.call(null,G__18851,G__18852));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__18863 = k;
var G__18864 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__18863,G__18864) : comp.call(null,G__18863,G__18864));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__18866 = cljs.core.seq(coll);
var chunk__18867 = null;
var count__18868 = (0);
var i__18869 = (0);
while(true){
if((i__18869 < count__18868)){
var vec__18870 = chunk__18867.cljs$core$IIndexed$_nth$arity$2(null,i__18869);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18870,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18870,(1),null);
var G__18871_18883 = v;
var G__18872_18884 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18871_18883,G__18872_18884) : f.call(null,G__18871_18883,G__18872_18884));

var G__18885 = seq__18866;
var G__18886 = chunk__18867;
var G__18887 = count__18868;
var G__18888 = (i__18869 + (1));
seq__18866 = G__18885;
chunk__18867 = G__18886;
count__18868 = G__18887;
i__18869 = G__18888;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__18866);
if(temp__4126__auto__){
var seq__18866__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__18866__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__18866__$1);
var G__18889 = cljs.core.chunk_rest(seq__18866__$1);
var G__18890 = c__4370__auto__;
var G__18891 = cljs.core.count(c__4370__auto__);
var G__18892 = (0);
seq__18866 = G__18889;
chunk__18867 = G__18890;
count__18868 = G__18891;
i__18869 = G__18892;
continue;
} else {
var vec__18873 = cljs.core.first(seq__18866__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18873,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18873,(1),null);
var G__18874_18893 = v;
var G__18875_18894 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18874_18893,G__18875_18894) : f.call(null,G__18874_18893,G__18875_18894));

var G__18895 = cljs.core.next(seq__18866__$1);
var G__18896 = null;
var G__18897 = (0);
var G__18898 = (0);
seq__18866 = G__18895;
chunk__18867 = G__18896;
count__18868 = G__18897;
i__18869 = G__18898;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18876 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__18876) : cljs.core.keys.call(null,G__18876));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__18877 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__18877) : cljs.core.vals.call(null,G__18877));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__18878 = k;
var G__18879 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__18878,G__18879) : self__.comp.call(null,G__18878,G__18879));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__18899 = t.left;
t = G__18899;
continue;
} else {
var G__18900 = t.right;
t = G__18900;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__18901 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__18902 = cljs.core.next(es);
ret = G__18901;
es = G__18902;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__18903 = null;
var G__18903__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18903__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18903 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18903__2.call(this,self__,k);
case 3:
return G__18903__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18903.cljs$core$IFn$_invoke$arity$2 = G__18903__2;
G__18903.cljs$core$IFn$_invoke$arity$3 = G__18903__3;
return G__18903;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args18865){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18865)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__18880 = k;
var G__18881 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__18880,G__18881) : self__.comp.call(null,G__18880,G__18881));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__18904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__18905 = t.left;
stack = G__18904;
t = G__18905;
continue;
} else {
var G__18906 = stack;
var G__18907 = t.right;
stack = G__18906;
t = G__18907;
continue;
}
} else {
if((c > (0))){
var G__18908 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__18909 = t.right;
stack = G__18908;
t = G__18909;
continue;
} else {
var G__18910 = stack;
var G__18911 = t.left;
stack = G__18910;
t = G__18911;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__18882 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18882) : cljs.core.key.call(null,G__18882));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__18912 = cljs.core.nnext(in$);
var G__18913 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__18912;
out = G__18913;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18914__i = 0, G__18914__a = new Array(arguments.length -  0);
while (G__18914__i < G__18914__a.length) {G__18914__a[G__18914__i] = arguments[G__18914__i + 0]; ++G__18914__i;}
  keyvals = new cljs.core.IndexedSeq(G__18914__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__18915){
var keyvals = cljs.core.seq(arglist__18915);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18916__i = 0, G__18916__a = new Array(arguments.length -  0);
while (G__18916__i < G__18916__a.length) {G__18916__a[G__18916__i] = arguments[G__18916__i + 0]; ++G__18916__i;}
  keyvals = new cljs.core.IndexedSeq(G__18916__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__18917){
var keyvals = cljs.core.seq(arglist__18917);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj18921 = {};
return obj18921;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__18922 = cljs.core.nnext(kvs);
kvs = G__18922;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18923__i = 0, G__18923__a = new Array(arguments.length -  0);
while (G__18923__i < G__18923__a.length) {G__18923__a[G__18923__i] = arguments[G__18923__i + 0]; ++G__18923__i;}
  keyvals = new cljs.core.IndexedSeq(G__18923__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__18924){
var keyvals = cljs.core.seq(arglist__18924);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__18925 = cljs.core.nnext(in$);
var G__18926 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__18925;
out = G__18926;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18927__i = 0, G__18927__a = new Array(arguments.length -  0);
while (G__18927__i < G__18927__a.length) {G__18927__a[G__18927__i] = arguments[G__18927__i + 0]; ++G__18927__i;}
  keyvals = new cljs.core.IndexedSeq(G__18927__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__18928){
var keyvals = cljs.core.seq(arglist__18928);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__18929 = cljs.core.nnext(in$);
var G__18930 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__18929;
out = G__18930;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__18931__i = 0, G__18931__a = new Array(arguments.length -  1);
while (G__18931__i < G__18931__a.length) {G__18931__a[G__18931__i] = arguments[G__18931__i + 1]; ++G__18931__i;}
  keyvals = new cljs.core.IndexedSeq(G__18931__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__18932){
var comparator = cljs.core.first(arglist__18932);
var keyvals = cljs.core.rest(arglist__18932);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__18933 = self__.mseq;
if(G__18933){
var bit__4264__auto__ = (G__18933.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4264__auto__) || (G__18933.cljs$core$INext$)){
return true;
} else {
if((!G__18933.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18933);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18933);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__18934 = self__.mseq;
if(G__18934){
var bit__4264__auto__ = (G__18934.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4264__auto__) || (G__18934.cljs$core$INext$)){
return true;
} else {
if((!G__18934.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18934);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__18935 = self__.mseq;
if(G__18935){
var bit__4264__auto__ = (G__18935.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4264__auto__) || (G__18935.cljs$core$INext$)){
return true;
} else {
if((!G__18935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18935);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__18936 = self__.mseq;
if(G__18936){
var bit__4264__auto__ = (G__18936.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4264__auto__) || (G__18936.cljs$core$INext$)){
return true;
} else {
if((!G__18936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__18936);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__18937_SHARP_,p2__18938_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3583__auto__ = p1__18937_SHARP_;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__18938_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__18939__i = 0, G__18939__a = new Array(arguments.length -  0);
while (G__18939__i < G__18939__a.length) {G__18939__a[G__18939__i] = arguments[G__18939__i + 0]; ++G__18939__i;}
  maps = new cljs.core.IndexedSeq(G__18939__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__18940){
var maps = cljs.core.seq(arglist__18940);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__18943 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__18944 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18943,G__18944) : f.call(null,G__18943,G__18944));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3583__auto__ = m1;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__18945__i = 0, G__18945__a = new Array(arguments.length -  1);
while (G__18945__i < G__18945__a.length) {G__18945__a[G__18945__i] = arguments[G__18945__i + 1]; ++G__18945__i;}
  maps = new cljs.core.IndexedSeq(G__18945__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__18946){
var f = cljs.core.first(arglist__18946);
var maps = cljs.core.rest(arglist__18946);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__18947 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__18948 = cljs.core.next(keys);
ret = G__18947;
keys = G__18948;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__18951 = cljs.core.seq(coll);
var chunk__18952 = null;
var count__18953 = (0);
var i__18954 = (0);
while(true){
if((i__18954 < count__18953)){
var vec__18955 = chunk__18952.cljs$core$IIndexed$_nth$arity$2(null,i__18954);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18955,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18955,(1),null);
var G__18956_18961 = v;
var G__18957_18962 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18956_18961,G__18957_18962) : f.call(null,G__18956_18961,G__18957_18962));

var G__18963 = seq__18951;
var G__18964 = chunk__18952;
var G__18965 = count__18953;
var G__18966 = (i__18954 + (1));
seq__18951 = G__18963;
chunk__18952 = G__18964;
count__18953 = G__18965;
i__18954 = G__18966;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__18951);
if(temp__4126__auto__){
var seq__18951__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__18951__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__18951__$1);
var G__18967 = cljs.core.chunk_rest(seq__18951__$1);
var G__18968 = c__4370__auto__;
var G__18969 = cljs.core.count(c__4370__auto__);
var G__18970 = (0);
seq__18951 = G__18967;
chunk__18952 = G__18968;
count__18953 = G__18969;
i__18954 = G__18970;
continue;
} else {
var vec__18958 = cljs.core.first(seq__18951__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18958,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18958,(1),null);
var G__18959_18971 = v;
var G__18960_18972 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18959_18971,G__18960_18972) : f.call(null,G__18959_18971,G__18960_18972));

var G__18973 = cljs.core.next(seq__18951__$1);
var G__18974 = null;
var G__18975 = (0);
var G__18976 = (0);
seq__18951 = G__18973;
chunk__18952 = G__18974;
count__18953 = G__18975;
i__18954 = G__18976;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__18949_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__18949_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__18977 = null;
var G__18977__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__18977__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__18977 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18977__2.call(this,self__,k);
case 3:
return G__18977__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18977.cljs$core$IFn$_invoke$arity$2 = G__18977__2;
G__18977.cljs$core$IFn$_invoke$arity$3 = G__18977__3;
return G__18977;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args18950){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18950)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__18978 = (i + (1));
var G__18979 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__18978;
out = G__18979;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__18980 = (i + (1));
var G__18981 = cljs.core._conj_BANG_(out,(items[i]));
i = G__18980;
out = G__18981;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__18983 = null;
var G__18983__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__18983__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__18983 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__18983__2.call(this,self__,k);
case 3:
return G__18983__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18983.cljs$core$IFn$_invoke$arity$2 = G__18983__2;
G__18983.cljs$core$IFn$_invoke$arity$3 = G__18983__3;
return G__18983;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args18982){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18982)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__18986 = cljs.core.seq(coll);
var chunk__18987 = null;
var count__18988 = (0);
var i__18989 = (0);
while(true){
if((i__18989 < count__18988)){
var vec__18990 = chunk__18987.cljs$core$IIndexed$_nth$arity$2(null,i__18989);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18990,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18990,(1),null);
var G__18991_18996 = v;
var G__18992_18997 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18991_18996,G__18992_18997) : f.call(null,G__18991_18996,G__18992_18997));

var G__18998 = seq__18986;
var G__18999 = chunk__18987;
var G__19000 = count__18988;
var G__19001 = (i__18989 + (1));
seq__18986 = G__18998;
chunk__18987 = G__18999;
count__18988 = G__19000;
i__18989 = G__19001;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__18986);
if(temp__4126__auto__){
var seq__18986__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__18986__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__18986__$1);
var G__19002 = cljs.core.chunk_rest(seq__18986__$1);
var G__19003 = c__4370__auto__;
var G__19004 = cljs.core.count(c__4370__auto__);
var G__19005 = (0);
seq__18986 = G__19002;
chunk__18987 = G__19003;
count__18988 = G__19004;
i__18989 = G__19005;
continue;
} else {
var vec__18993 = cljs.core.first(seq__18986__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18993,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18993,(1),null);
var G__18994_19006 = v;
var G__18995_19007 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18994_19006,G__18995_19007) : f.call(null,G__18994_19006,G__18995_19007));

var G__19008 = cljs.core.next(seq__18986__$1);
var G__19009 = null;
var G__19010 = (0);
var G__19011 = (0);
seq__18986 = G__19008;
chunk__18987 = G__19009;
count__18988 = G__19010;
i__18989 = G__19011;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__18984_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__18984_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__19012 = null;
var G__19012__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19012__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19012 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19012__2.call(this,self__,k);
case 3:
return G__19012__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19012.cljs$core$IFn$_invoke$arity$2 = G__19012__2;
G__19012.cljs$core$IFn$_invoke$arity$3 = G__19012__3;
return G__19012;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args18985){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18985)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4464__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4464__auto__.length)){
var G__19013 = (i + (1));
var G__19014 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__19013;
res = G__19014;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__19015 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__19016 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__19015;
out = G__19016;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__19017__delegate = function (keys){
return cljs.core.set(keys);
};
var G__19017 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__19018__i = 0, G__19018__a = new Array(arguments.length -  0);
while (G__19018__i < G__19018__a.length) {G__19018__a[G__19018__i] = arguments[G__19018__i + 0]; ++G__19018__i;}
  keys = new cljs.core.IndexedSeq(G__19018__a,0);
} 
return G__19017__delegate.call(this,keys);};
G__19017.cljs$lang$maxFixedArity = 0;
G__19017.cljs$lang$applyTo = (function (arglist__19019){
var keys = cljs.core.seq(arglist__19019);
return G__19017__delegate(keys);
});
G__19017.cljs$core$IFn$_invoke$arity$variadic = G__19017__delegate;
return G__19017;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__19020 = null;
if (arguments.length > 0) {
var G__19021__i = 0, G__19021__a = new Array(arguments.length -  0);
while (G__19021__i < G__19021__a.length) {G__19021__a[G__19021__i] = arguments[G__19021__i + 0]; ++G__19021__i;}
G__19020 = new cljs.core.IndexedSeq(G__19021__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__19020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__19022__i = 0, G__19022__a = new Array(arguments.length -  0);
while (G__19022__i < G__19022__a.length) {G__19022__a[G__19022__i] = arguments[G__19022__i + 0]; ++G__19022__i;}
  keys = new cljs.core.IndexedSeq(G__19022__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__19023){
var keys = cljs.core.seq(arglist__19023);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__19024__i = 0, G__19024__a = new Array(arguments.length -  1);
while (G__19024__i < G__19024__a.length) {G__19024__a[G__19024__i] = arguments[G__19024__i + 1]; ++G__19024__i;}
  keys = new cljs.core.IndexedSeq(G__19024__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__19025){
var comparator = cljs.core.first(arglist__19025);
var keys = cljs.core.rest(arglist__19025);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__19026_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__19026_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__19026_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__19027_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__19027_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__19027_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__19048 = null;
var G__19048__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19048__1 = (function (result){
var G__19038 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19038) : rf.call(null,G__19038));
});
var G__19048__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__19039 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19039) : cljs.core.deref.call(null,G__19039));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__19040 = result;
var G__19041 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19040,G__19041) : rf.call(null,G__19040,G__19041));
}
});
G__19048 = function(result,input){
switch(arguments.length){
case 0:
return G__19048__0.call(this);
case 1:
return G__19048__1.call(this,result);
case 2:
return G__19048__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19048.cljs$core$IFn$_invoke$arity$0 = G__19048__0;
G__19048.cljs$core$IFn$_invoke$arity$1 = G__19048__1;
G__19048.cljs$core$IFn$_invoke$arity$2 = G__19048__2;
return G__19048;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__19046,seen__$1){
while(true){
var vec__19047 = p__19046;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19047,(0),null);
var xs__$1 = vec__19047;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__19049 = cljs.core.rest(s);
var G__19050 = seen__$1;
p__19046 = G__19049;
seen__$1 = G__19050;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__19051 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__19052 = cljs.core.next(s__$1);
ret = G__19051;
s__$1 = G__19052;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__19054 = x;
if(G__19054){
var bit__4257__auto__ = (G__19054.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4257__auto__) || (G__19054.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__19055 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__19056 = cljs.core.next(ks);
var G__19057 = cljs.core.next(vs);
map = G__19055;
ks = G__19056;
vs = G__19057;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__19068 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19068) : k.call(null,G__19068));
})() > (function (){var G__19069 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19069) : k.call(null,G__19069));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__19070__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__19058_SHARP_,p2__19059_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__19058_SHARP_,p2__19059_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__19070 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__19071__i = 0, G__19071__a = new Array(arguments.length -  3);
while (G__19071__i < G__19071__a.length) {G__19071__a[G__19071__i] = arguments[G__19071__i + 3]; ++G__19071__i;}
  more = new cljs.core.IndexedSeq(G__19071__a,0);
} 
return G__19070__delegate.call(this,k,x,y,more);};
G__19070.cljs$lang$maxFixedArity = 3;
G__19070.cljs$lang$applyTo = (function (arglist__19072){
var k = cljs.core.first(arglist__19072);
arglist__19072 = cljs.core.next(arglist__19072);
var x = cljs.core.first(arglist__19072);
arglist__19072 = cljs.core.next(arglist__19072);
var y = cljs.core.first(arglist__19072);
var more = cljs.core.rest(arglist__19072);
return G__19070__delegate(k,x,y,more);
});
G__19070.cljs$core$IFn$_invoke$arity$variadic = G__19070__delegate;
return G__19070;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__19073 = null;
if (arguments.length > 3) {
var G__19074__i = 0, G__19074__a = new Array(arguments.length -  3);
while (G__19074__i < G__19074__a.length) {G__19074__a[G__19074__i] = arguments[G__19074__i + 3]; ++G__19074__i;}
G__19073 = new cljs.core.IndexedSeq(G__19074__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__19073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__19085 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19085) : k.call(null,G__19085));
})() < (function (){var G__19086 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19086) : k.call(null,G__19086));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__19087__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__19075_SHARP_,p2__19076_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__19075_SHARP_,p2__19076_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__19087 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__19088__i = 0, G__19088__a = new Array(arguments.length -  3);
while (G__19088__i < G__19088__a.length) {G__19088__a[G__19088__i] = arguments[G__19088__i + 3]; ++G__19088__i;}
  more = new cljs.core.IndexedSeq(G__19088__a,0);
} 
return G__19087__delegate.call(this,k,x,y,more);};
G__19087.cljs$lang$maxFixedArity = 3;
G__19087.cljs$lang$applyTo = (function (arglist__19089){
var k = cljs.core.first(arglist__19089);
arglist__19089 = cljs.core.next(arglist__19089);
var x = cljs.core.first(arglist__19089);
arglist__19089 = cljs.core.next(arglist__19089);
var y = cljs.core.first(arglist__19089);
var more = cljs.core.rest(arglist__19089);
return G__19087__delegate(k,x,y,more);
});
G__19087.cljs$core$IFn$_invoke$arity$variadic = G__19087__delegate;
return G__19087;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__19090 = null;
if (arguments.length > 3) {
var G__19091__i = 0, G__19091__a = new Array(arguments.length -  3);
while (G__19091__i < G__19091__a.length) {G__19091__a[G__19091__i] = arguments[G__19091__i + 3]; ++G__19091__i;}
G__19090 = new cljs.core.IndexedSeq(G__19091__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__19090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__19108 = null;
var G__19108__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19108__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__19103 = result;
var G__19104 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19103,G__19104) : rf.call(null,G__19103,G__19104));
})());
})());
var G__19105 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19105) : rf.call(null,G__19105));
});
var G__19108__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__19106 = result;
var G__19107 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19106,G__19107) : rf.call(null,G__19106,G__19107));
} else {
return result;
}
});
G__19108 = function(result,input){
switch(arguments.length){
case 0:
return G__19108__0.call(this);
case 1:
return G__19108__1.call(this,result);
case 2:
return G__19108__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19108.cljs$core$IFn$_invoke$arity$0 = G__19108__0;
G__19108.cljs$core$IFn$_invoke$arity$1 = G__19108__1;
G__19108.cljs$core$IFn$_invoke$arity$2 = G__19108__2;
return G__19108;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__19121 = null;
var G__19121__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19121__1 = (function (result){
var G__19116 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19116) : rf.call(null,G__19116));
});
var G__19121__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__19117 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19117) : pred.call(null,G__19117));
})())){
var G__19118 = result;
var G__19119 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19118,G__19119) : rf.call(null,G__19118,G__19119));
} else {
return cljs.core.reduced(result);
}
});
G__19121 = function(result,input){
switch(arguments.length){
case 0:
return G__19121__0.call(this);
case 1:
return G__19121__1.call(this,result);
case 2:
return G__19121__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19121.cljs$core$IFn$_invoke$arity$0 = G__19121__0;
G__19121.cljs$core$IFn$_invoke$arity$1 = G__19121__1;
G__19121.cljs$core$IFn$_invoke$arity$2 = G__19121__2;
return G__19121;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__19120 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19120) : pred.call(null,G__19120));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__19126 = (function (){var G__19128 = cljs.core._entry_key(sc,e);
var G__19129 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19128,G__19129) : comp.call(null,G__19128,G__19129));
})();
var G__19127 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__19126,G__19127) : test.call(null,G__19126,G__19127));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19133 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19133,(0),null);
var s = vec__19133;
if(cljs.core.truth_((function (){var G__19134 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__19134) : include.call(null,G__19134));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19135 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19135,(0),null);
var s = vec__19135;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19139 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19139,(0),null);
var s = vec__19139;
if(cljs.core.truth_((function (){var G__19140 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__19140) : include.call(null,G__19140));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19141 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19141,(0),null);
var s = vec__19141;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__19142 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19142) : Math.ceil.call(null,G__19142));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4004__auto__ = self__.__hash;
if(!((h__4004__auto__ == null))){
return h__4004__auto__;
} else {
var h__4004__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4004__auto____$1;

return h__4004__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__19143 = ret;
var G__19144 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19143,G__19144) : f.call(null,G__19143,G__19144));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__19145 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19145) : cljs.core.deref.call(null,G__19145));
} else {
var G__19146 = (i + self__.step);
var G__19147 = ret__$1;
i = G__19146;
ret = G__19147;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__19165 = null;
var G__19165__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19165__1 = (function (result){
var G__19162 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19162) : rf.call(null,G__19162));
});
var G__19165__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__19163 = result;
var G__19164 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19163,G__19164) : rf.call(null,G__19163,G__19164));
} else {
return result;
}
});
G__19165 = function(result,input){
switch(arguments.length){
case 0:
return G__19165__0.call(this);
case 1:
return G__19165__1.call(this,result);
case 2:
return G__19165__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19165.cljs$core$IFn$_invoke$arity$0 = G__19165__0;
G__19165.cljs$core$IFn$_invoke$arity$1 = G__19165__1;
G__19165.cljs$core$IFn$_invoke$arity$2 = G__19165__2;
return G__19165;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__19187 = null;
var G__19187__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19187__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__19178 = result;
var G__19179 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19178,G__19179) : rf.call(null,G__19178,G__19179));
})());
})());
var G__19180 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19180) : rf.call(null,G__19180));
});
var G__19187__2 = (function (result,input){
var pval = (function (){var G__19181 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19181) : cljs.core.deref.call(null,G__19181));
})();
var val = (function (){var G__19182 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19182) : f.call(null,G__19182));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__19183 = result;
var G__19184 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19183,G__19184) : rf.call(null,G__19183,G__19184));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__19187 = function(result,input){
switch(arguments.length){
case 0:
return G__19187__0.call(this);
case 1:
return G__19187__1.call(this,result);
case 2:
return G__19187__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19187.cljs$core$IFn$_invoke$arity$0 = G__19187__0;
G__19187.cljs$core$IFn$_invoke$arity$1 = G__19187__1;
G__19187.cljs$core$IFn$_invoke$arity$2 = G__19187__2;
return G__19187;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__19185 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19185) : f.call(null,G__19185));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__19166_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__19186 = p1__19166_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19186) : f.call(null,G__19186));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__19196 = init;
var G__19197 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19196,G__19197) : f.call(null,G__19196,G__19197));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__19292 = null;
var G__19292__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__19292__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19250 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19250) : f.call(null,G__19250));
})()],null));
});
var G__19292__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19251 = x;
var G__19252 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19251,G__19252) : f.call(null,G__19251,G__19252));
})()],null));
});
var G__19292__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19253 = x;
var G__19254 = y;
var G__19255 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19253,G__19254,G__19255) : f.call(null,G__19253,G__19254,G__19255));
})()],null));
});
var G__19292__4 = (function() { 
var G__19293__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__19293 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19294__i = 0, G__19294__a = new Array(arguments.length -  3);
while (G__19294__i < G__19294__a.length) {G__19294__a[G__19294__i] = arguments[G__19294__i + 3]; ++G__19294__i;}
  args = new cljs.core.IndexedSeq(G__19294__a,0);
} 
return G__19293__delegate.call(this,x,y,z,args);};
G__19293.cljs$lang$maxFixedArity = 3;
G__19293.cljs$lang$applyTo = (function (arglist__19295){
var x = cljs.core.first(arglist__19295);
arglist__19295 = cljs.core.next(arglist__19295);
var y = cljs.core.first(arglist__19295);
arglist__19295 = cljs.core.next(arglist__19295);
var z = cljs.core.first(arglist__19295);
var args = cljs.core.rest(arglist__19295);
return G__19293__delegate(x,y,z,args);
});
G__19293.cljs$core$IFn$_invoke$arity$variadic = G__19293__delegate;
return G__19293;
})()
;
G__19292 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19292__0.call(this);
case 1:
return G__19292__1.call(this,x);
case 2:
return G__19292__2.call(this,x,y);
case 3:
return G__19292__3.call(this,x,y,z);
default:
var G__19296 = null;
if (arguments.length > 3) {
var G__19297__i = 0, G__19297__a = new Array(arguments.length -  3);
while (G__19297__i < G__19297__a.length) {G__19297__a[G__19297__i] = arguments[G__19297__i + 3]; ++G__19297__i;}
G__19296 = new cljs.core.IndexedSeq(G__19297__a,0);
}
return G__19292__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19292.cljs$lang$maxFixedArity = 3;
G__19292.cljs$lang$applyTo = G__19292__4.cljs$lang$applyTo;
G__19292.cljs$core$IFn$_invoke$arity$0 = G__19292__0;
G__19292.cljs$core$IFn$_invoke$arity$1 = G__19292__1;
G__19292.cljs$core$IFn$_invoke$arity$2 = G__19292__2;
G__19292.cljs$core$IFn$_invoke$arity$3 = G__19292__3;
G__19292.cljs$core$IFn$_invoke$arity$variadic = G__19292__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19292;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__19298 = null;
var G__19298__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__19298__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19256 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19256) : f.call(null,G__19256));
})(),(function (){var G__19257 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19257) : g.call(null,G__19257));
})()],null));
});
var G__19298__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19258 = x;
var G__19259 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19258,G__19259) : f.call(null,G__19258,G__19259));
})(),(function (){var G__19260 = x;
var G__19261 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19260,G__19261) : g.call(null,G__19260,G__19261));
})()],null));
});
var G__19298__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19262 = x;
var G__19263 = y;
var G__19264 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19262,G__19263,G__19264) : f.call(null,G__19262,G__19263,G__19264));
})(),(function (){var G__19265 = x;
var G__19266 = y;
var G__19267 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19265,G__19266,G__19267) : g.call(null,G__19265,G__19266,G__19267));
})()],null));
});
var G__19298__4 = (function() { 
var G__19299__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__19299 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19300__i = 0, G__19300__a = new Array(arguments.length -  3);
while (G__19300__i < G__19300__a.length) {G__19300__a[G__19300__i] = arguments[G__19300__i + 3]; ++G__19300__i;}
  args = new cljs.core.IndexedSeq(G__19300__a,0);
} 
return G__19299__delegate.call(this,x,y,z,args);};
G__19299.cljs$lang$maxFixedArity = 3;
G__19299.cljs$lang$applyTo = (function (arglist__19301){
var x = cljs.core.first(arglist__19301);
arglist__19301 = cljs.core.next(arglist__19301);
var y = cljs.core.first(arglist__19301);
arglist__19301 = cljs.core.next(arglist__19301);
var z = cljs.core.first(arglist__19301);
var args = cljs.core.rest(arglist__19301);
return G__19299__delegate(x,y,z,args);
});
G__19299.cljs$core$IFn$_invoke$arity$variadic = G__19299__delegate;
return G__19299;
})()
;
G__19298 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19298__0.call(this);
case 1:
return G__19298__1.call(this,x);
case 2:
return G__19298__2.call(this,x,y);
case 3:
return G__19298__3.call(this,x,y,z);
default:
var G__19302 = null;
if (arguments.length > 3) {
var G__19303__i = 0, G__19303__a = new Array(arguments.length -  3);
while (G__19303__i < G__19303__a.length) {G__19303__a[G__19303__i] = arguments[G__19303__i + 3]; ++G__19303__i;}
G__19302 = new cljs.core.IndexedSeq(G__19303__a,0);
}
return G__19298__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19298.cljs$lang$maxFixedArity = 3;
G__19298.cljs$lang$applyTo = G__19298__4.cljs$lang$applyTo;
G__19298.cljs$core$IFn$_invoke$arity$0 = G__19298__0;
G__19298.cljs$core$IFn$_invoke$arity$1 = G__19298__1;
G__19298.cljs$core$IFn$_invoke$arity$2 = G__19298__2;
G__19298.cljs$core$IFn$_invoke$arity$3 = G__19298__3;
G__19298.cljs$core$IFn$_invoke$arity$variadic = G__19298__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19298;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__19304 = null;
var G__19304__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__19304__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19268 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19268) : f.call(null,G__19268));
})(),(function (){var G__19269 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19269) : g.call(null,G__19269));
})(),(function (){var G__19270 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19270) : h.call(null,G__19270));
})()],null));
});
var G__19304__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19271 = x;
var G__19272 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19271,G__19272) : f.call(null,G__19271,G__19272));
})(),(function (){var G__19273 = x;
var G__19274 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19273,G__19274) : g.call(null,G__19273,G__19274));
})(),(function (){var G__19275 = x;
var G__19276 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19275,G__19276) : h.call(null,G__19275,G__19276));
})()],null));
});
var G__19304__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19277 = x;
var G__19278 = y;
var G__19279 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19277,G__19278,G__19279) : f.call(null,G__19277,G__19278,G__19279));
})(),(function (){var G__19280 = x;
var G__19281 = y;
var G__19282 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19280,G__19281,G__19282) : g.call(null,G__19280,G__19281,G__19282));
})(),(function (){var G__19283 = x;
var G__19284 = y;
var G__19285 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19283,G__19284,G__19285) : h.call(null,G__19283,G__19284,G__19285));
})()],null));
});
var G__19304__4 = (function() { 
var G__19305__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__19305 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19306__i = 0, G__19306__a = new Array(arguments.length -  3);
while (G__19306__i < G__19306__a.length) {G__19306__a[G__19306__i] = arguments[G__19306__i + 3]; ++G__19306__i;}
  args = new cljs.core.IndexedSeq(G__19306__a,0);
} 
return G__19305__delegate.call(this,x,y,z,args);};
G__19305.cljs$lang$maxFixedArity = 3;
G__19305.cljs$lang$applyTo = (function (arglist__19307){
var x = cljs.core.first(arglist__19307);
arglist__19307 = cljs.core.next(arglist__19307);
var y = cljs.core.first(arglist__19307);
arglist__19307 = cljs.core.next(arglist__19307);
var z = cljs.core.first(arglist__19307);
var args = cljs.core.rest(arglist__19307);
return G__19305__delegate(x,y,z,args);
});
G__19305.cljs$core$IFn$_invoke$arity$variadic = G__19305__delegate;
return G__19305;
})()
;
G__19304 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19304__0.call(this);
case 1:
return G__19304__1.call(this,x);
case 2:
return G__19304__2.call(this,x,y);
case 3:
return G__19304__3.call(this,x,y,z);
default:
var G__19308 = null;
if (arguments.length > 3) {
var G__19309__i = 0, G__19309__a = new Array(arguments.length -  3);
while (G__19309__i < G__19309__a.length) {G__19309__a[G__19309__i] = arguments[G__19309__i + 3]; ++G__19309__i;}
G__19308 = new cljs.core.IndexedSeq(G__19309__a,0);
}
return G__19304__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19304.cljs$lang$maxFixedArity = 3;
G__19304.cljs$lang$applyTo = G__19304__4.cljs$lang$applyTo;
G__19304.cljs$core$IFn$_invoke$arity$0 = G__19304__0;
G__19304.cljs$core$IFn$_invoke$arity$1 = G__19304__1;
G__19304.cljs$core$IFn$_invoke$arity$2 = G__19304__2;
G__19304.cljs$core$IFn$_invoke$arity$3 = G__19304__3;
G__19304.cljs$core$IFn$_invoke$arity$variadic = G__19304__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19304;
})()
});
var juxt__4 = (function() { 
var G__19310__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__19311 = null;
var G__19311__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19198_SHARP_,p2__19199_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19198_SHARP_,(function (){return (p2__19199_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__19199_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__19199_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19311__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19200_SHARP_,p2__19201_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19200_SHARP_,(function (){var G__19286 = x;
return (p2__19201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__19201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19286) : p2__19201_SHARP_.call(null,G__19286));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19311__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19202_SHARP_,p2__19203_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19202_SHARP_,(function (){var G__19287 = x;
var G__19288 = y;
return (p2__19203_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__19203_SHARP_.cljs$core$IFn$_invoke$arity$2(G__19287,G__19288) : p2__19203_SHARP_.call(null,G__19287,G__19288));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19311__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19204_SHARP_,p2__19205_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19204_SHARP_,(function (){var G__19289 = x;
var G__19290 = y;
var G__19291 = z;
return (p2__19205_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__19205_SHARP_.cljs$core$IFn$_invoke$arity$3(G__19289,G__19290,G__19291) : p2__19205_SHARP_.call(null,G__19289,G__19290,G__19291));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19311__4 = (function() { 
var G__19312__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19206_SHARP_,p2__19207_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19206_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__19207_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__19312 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19313__i = 0, G__19313__a = new Array(arguments.length -  3);
while (G__19313__i < G__19313__a.length) {G__19313__a[G__19313__i] = arguments[G__19313__i + 3]; ++G__19313__i;}
  args = new cljs.core.IndexedSeq(G__19313__a,0);
} 
return G__19312__delegate.call(this,x,y,z,args);};
G__19312.cljs$lang$maxFixedArity = 3;
G__19312.cljs$lang$applyTo = (function (arglist__19314){
var x = cljs.core.first(arglist__19314);
arglist__19314 = cljs.core.next(arglist__19314);
var y = cljs.core.first(arglist__19314);
arglist__19314 = cljs.core.next(arglist__19314);
var z = cljs.core.first(arglist__19314);
var args = cljs.core.rest(arglist__19314);
return G__19312__delegate(x,y,z,args);
});
G__19312.cljs$core$IFn$_invoke$arity$variadic = G__19312__delegate;
return G__19312;
})()
;
G__19311 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19311__0.call(this);
case 1:
return G__19311__1.call(this,x);
case 2:
return G__19311__2.call(this,x,y);
case 3:
return G__19311__3.call(this,x,y,z);
default:
var G__19315 = null;
if (arguments.length > 3) {
var G__19316__i = 0, G__19316__a = new Array(arguments.length -  3);
while (G__19316__i < G__19316__a.length) {G__19316__a[G__19316__i] = arguments[G__19316__i + 3]; ++G__19316__i;}
G__19315 = new cljs.core.IndexedSeq(G__19316__a,0);
}
return G__19311__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19311.cljs$lang$maxFixedArity = 3;
G__19311.cljs$lang$applyTo = G__19311__4.cljs$lang$applyTo;
G__19311.cljs$core$IFn$_invoke$arity$0 = G__19311__0;
G__19311.cljs$core$IFn$_invoke$arity$1 = G__19311__1;
G__19311.cljs$core$IFn$_invoke$arity$2 = G__19311__2;
G__19311.cljs$core$IFn$_invoke$arity$3 = G__19311__3;
G__19311.cljs$core$IFn$_invoke$arity$variadic = G__19311__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19311;
})()
;})(fs__$1))
};
var G__19310 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__19317__i = 0, G__19317__a = new Array(arguments.length -  3);
while (G__19317__i < G__19317__a.length) {G__19317__a[G__19317__i] = arguments[G__19317__i + 3]; ++G__19317__i;}
  fs = new cljs.core.IndexedSeq(G__19317__a,0);
} 
return G__19310__delegate.call(this,f,g,h,fs);};
G__19310.cljs$lang$maxFixedArity = 3;
G__19310.cljs$lang$applyTo = (function (arglist__19318){
var f = cljs.core.first(arglist__19318);
arglist__19318 = cljs.core.next(arglist__19318);
var g = cljs.core.first(arglist__19318);
arglist__19318 = cljs.core.next(arglist__19318);
var h = cljs.core.first(arglist__19318);
var fs = cljs.core.rest(arglist__19318);
return G__19310__delegate(f,g,h,fs);
});
G__19310.cljs$core$IFn$_invoke$arity$variadic = G__19310__delegate;
return G__19310;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__19319 = null;
if (arguments.length > 3) {
var G__19320__i = 0, G__19320__a = new Array(arguments.length -  3);
while (G__19320__i < G__19320__a.length) {G__19320__a[G__19320__i] = arguments[G__19320__i + 3]; ++G__19320__i;}
G__19319 = new cljs.core.IndexedSeq(G__19320__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__19319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__19321 = cljs.core.next(coll);
coll = G__19321;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__19322 = (n - (1));
var G__19323 = cljs.core.next(coll);
n = G__19322;
coll = G__19323;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__19327 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19327,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19327,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19327,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_19335 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__19336_19342 = cljs.core.first(coll);
var G__19337_19343 = writer;
var G__19338_19344 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19336_19342,G__19337_19343,G__19338_19344) : print_one.call(null,G__19336_19342,G__19337_19343,G__19338_19344));
} else {
}

var coll_19345__$1 = cljs.core.next(coll);
var n_19346 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_19345__$1) && (((n_19346 == null)) || (!((n_19346 === (0)))))){
cljs.core._write(writer,sep);

var G__19339_19347 = cljs.core.first(coll_19345__$1);
var G__19340_19348 = writer;
var G__19341_19349 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19339_19347,G__19340_19348,G__19341_19349) : print_one.call(null,G__19339_19347,G__19340_19348,G__19341_19349));

var G__19350 = cljs.core.next(coll_19345__$1);
var G__19351 = (n_19346 - (1));
coll_19345__$1 = G__19350;
n_19346 = G__19351;
continue;
} else {
if((cljs.core.seq(coll_19345__$1)) && ((n_19346 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_19335;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__19356 = cljs.core.seq(ss);
var chunk__19357 = null;
var count__19358 = (0);
var i__19359 = (0);
while(true){
if((i__19359 < count__19358)){
var s = chunk__19357.cljs$core$IIndexed$_nth$arity$2(null,i__19359);
cljs.core._write(writer,s);

var G__19360 = seq__19356;
var G__19361 = chunk__19357;
var G__19362 = count__19358;
var G__19363 = (i__19359 + (1));
seq__19356 = G__19360;
chunk__19357 = G__19361;
count__19358 = G__19362;
i__19359 = G__19363;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19356);
if(temp__4126__auto__){
var seq__19356__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19356__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__19356__$1);
var G__19364 = cljs.core.chunk_rest(seq__19356__$1);
var G__19365 = c__4370__auto__;
var G__19366 = cljs.core.count(c__4370__auto__);
var G__19367 = (0);
seq__19356 = G__19364;
chunk__19357 = G__19365;
count__19358 = G__19366;
i__19359 = G__19367;
continue;
} else {
var s = cljs.core.first(seq__19356__$1);
cljs.core._write(writer,s);

var G__19368 = cljs.core.next(seq__19356__$1);
var G__19369 = null;
var G__19370 = (0);
var G__19371 = (0);
seq__19356 = G__19368;
chunk__19357 = G__19369;
count__19358 = G__19370;
i__19359 = G__19371;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__19372__i = 0, G__19372__a = new Array(arguments.length -  1);
while (G__19372__i < G__19372__a.length) {G__19372__a[G__19372__i] = arguments[G__19372__i + 1]; ++G__19372__i;}
  ss = new cljs.core.IndexedSeq(G__19372__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__19373){
var writer = cljs.core.first(arglist__19373);
var ss = cljs.core.rest(arglist__19373);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj19375 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj19375;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__19378 = "[\\\\\"\b\f\n\r\t]";
var G__19379 = "g";
return RegExp(G__19378,G__19379);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3571__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3571__auto__)){
var and__3571__auto____$1 = (function (){var G__19393 = obj;
if(G__19393){
var bit__4264__auto__ = (G__19393.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4264__auto__) || (G__19393.cljs$core$IMeta$)){
return true;
} else {
if((!G__19393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19393);
}
})();
if(and__3571__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__19394 = obj;
if(G__19394){
var bit__4257__auto__ = (G__19394.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4257__auto__) || (G__19394.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__19395 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__19396 = pr_writer;
var G__19397 = writer;
var G__19398 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__19395,G__19396,G__19397,G__19398) : cljs.core.print_map.call(null,G__19395,G__19396,G__19397,G__19398));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__19399 = obj;
return goog.isString(G__19399);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__19401 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__19401;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__19400 = obj;
if(G__19400){
var bit__4264__auto__ = (G__19400.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4264__auto__) || (G__19400.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__19400.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__19400);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__19400);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__19406 = cljs.core.seq(cljs.core.next(objs));
var chunk__19407 = null;
var count__19408 = (0);
var i__19409 = (0);
while(true){
if((i__19409 < count__19408)){
var obj = chunk__19407.cljs$core$IIndexed$_nth$arity$2(null,i__19409);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__19410 = seq__19406;
var G__19411 = chunk__19407;
var G__19412 = count__19408;
var G__19413 = (i__19409 + (1));
seq__19406 = G__19410;
chunk__19407 = G__19411;
count__19408 = G__19412;
i__19409 = G__19413;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19406);
if(temp__4126__auto__){
var seq__19406__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19406__$1)){
var c__4370__auto__ = cljs.core.chunk_first(seq__19406__$1);
var G__19414 = cljs.core.chunk_rest(seq__19406__$1);
var G__19415 = c__4370__auto__;
var G__19416 = cljs.core.count(c__4370__auto__);
var G__19417 = (0);
seq__19406 = G__19414;
chunk__19407 = G__19415;
count__19408 = G__19416;
i__19409 = G__19417;
continue;
} else {
var obj = cljs.core.first(seq__19406__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__19418 = cljs.core.next(seq__19406__$1);
var G__19419 = null;
var G__19420 = (0);
var G__19421 = (0);
seq__19406 = G__19418;
chunk__19407 = G__19419;
count__19408 = G__19420;
i__19409 = G__19421;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19422__i = 0, G__19422__a = new Array(arguments.length -  0);
while (G__19422__i < G__19422__a.length) {G__19422__a[G__19422__i] = arguments[G__19422__i + 0]; ++G__19422__i;}
  objs = new cljs.core.IndexedSeq(G__19422__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__19423){
var objs = cljs.core.seq(arglist__19423);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19424__i = 0, G__19424__a = new Array(arguments.length -  0);
while (G__19424__i < G__19424__a.length) {G__19424__a[G__19424__i] = arguments[G__19424__i + 0]; ++G__19424__i;}
  objs = new cljs.core.IndexedSeq(G__19424__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__19425){
var objs = cljs.core.seq(arglist__19425);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19426__i = 0, G__19426__a = new Array(arguments.length -  0);
while (G__19426__i < G__19426__a.length) {G__19426__a[G__19426__i] = arguments[G__19426__i + 0]; ++G__19426__i;}
  objs = new cljs.core.IndexedSeq(G__19426__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__19427){
var objs = cljs.core.seq(arglist__19427);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19428__i = 0, G__19428__a = new Array(arguments.length -  0);
while (G__19428__i < G__19428__a.length) {G__19428__a[G__19428__i] = arguments[G__19428__i + 0]; ++G__19428__i;}
  objs = new cljs.core.IndexedSeq(G__19428__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__19429){
var objs = cljs.core.seq(arglist__19429);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19430__i = 0, G__19430__a = new Array(arguments.length -  0);
while (G__19430__i < G__19430__a.length) {G__19430__a[G__19430__i] = arguments[G__19430__i + 0]; ++G__19430__i;}
  objs = new cljs.core.IndexedSeq(G__19430__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__19431){
var objs = cljs.core.seq(arglist__19431);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19432__i = 0, G__19432__a = new Array(arguments.length -  0);
while (G__19432__i < G__19432__a.length) {G__19432__a[G__19432__i] = arguments[G__19432__i + 0]; ++G__19432__i;}
  objs = new cljs.core.IndexedSeq(G__19432__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__19433){
var objs = cljs.core.seq(arglist__19433);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19434__i = 0, G__19434__a = new Array(arguments.length -  0);
while (G__19434__i < G__19434__a.length) {G__19434__a[G__19434__i] = arguments[G__19434__i + 0]; ++G__19434__i;}
  objs = new cljs.core.IndexedSeq(G__19434__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__19435){
var objs = cljs.core.seq(arglist__19435);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__19436__i = 0, G__19436__a = new Array(arguments.length -  0);
while (G__19436__i < G__19436__a.length) {G__19436__a[G__19436__i] = arguments[G__19436__i + 0]; ++G__19436__i;}
  objs = new cljs.core.IndexedSeq(G__19436__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__19437){
var objs = cljs.core.seq(arglist__19437);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__19444_19450 = cljs.core.key(e);
var G__19445_19451 = w;
var G__19446_19452 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19444_19450,G__19445_19451,G__19446_19452) : print_one.call(null,G__19444_19450,G__19445_19451,G__19446_19452));

cljs.core._write(w," ");

var G__19447 = cljs.core.val(e);
var G__19448 = w;
var G__19449 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19447,G__19448,G__19449) : print_one.call(null,G__19447,G__19448,G__19449));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__19453__i = 0, G__19453__a = new Array(arguments.length -  2);
while (G__19453__i < G__19453__a.length) {G__19453__a[G__19453__i] = arguments[G__19453__i + 2]; ++G__19453__i;}
  args = new cljs.core.IndexedSeq(G__19453__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__19454){
var iref = cljs.core.first(arglist__19454);
arglist__19454 = cljs.core.next(arglist__19454);
var f = cljs.core.first(arglist__19454);
var args = cljs.core.rest(arglist__19454);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__19457 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19457) : cljs.core.atom.call(null,G__19457));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__19459 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19459) : cljs.core.deref.call(null,G__19459));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__19460_SHARP_,p2__19461_SHARP_){
var ret = (function (){var G__19464 = p1__19460_SHARP_;
var G__19465 = p2__19461_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19464,G__19465) : rf.call(null,G__19464,G__19465));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__19468 = null;
var G__19468__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19468__1 = (function (result){
var G__19467 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19467) : rf.call(null,G__19467));
});
var G__19468__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__19468 = function(result,input){
switch(arguments.length){
case 0:
return G__19468__0.call(this);
case 1:
return G__19468__1.call(this,result);
case 2:
return G__19468__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19468.cljs$core$IFn$_invoke$arity$0 = G__19468__0;
G__19468.cljs$core$IFn$_invoke$arity$1 = G__19468__1;
G__19468.cljs$core$IFn$_invoke$arity$2 = G__19468__2;
return G__19468;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__19477 = null;
var G__19477__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19477__1 = (function (result){
var G__19473 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19473) : rf.call(null,G__19473));
});
var G__19477__2 = (function (result,input){
var prior = (function (){var G__19474 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19474) : cljs.core.deref.call(null,G__19474));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__19475 = result;
var G__19476 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19475,G__19476) : rf.call(null,G__19475,G__19476));
}
});
G__19477 = function(result,input){
switch(arguments.length){
case 0:
return G__19477__0.call(this);
case 1:
return G__19477__1.call(this,result);
case 2:
return G__19477__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19477.cljs$core$IFn$_invoke$arity$0 = G__19477__0;
G__19477.cljs$core$IFn$_invoke$arity$1 = G__19477__1;
G__19477.cljs$core$IFn$_invoke$arity$2 = G__19477__2;
return G__19477;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4561__auto__ = this;
return cljs.core.es6_iterator(this__4561__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__19479_SHARP_,p2__19478_SHARP_){
var G__19481 = p2__19478_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__19481) : proc.call(null,G__19481));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj19483 = {};
return obj19483;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._clj__GT_js[(function (){var G__19487 = x__4227__auto__;
return goog.typeOf(G__19487);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._key__GT_js[(function (){var G__19491 = x__4227__auto__;
return goog.typeOf(G__19491);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__19494 = k;
if(G__19494){
var bit__4264__auto__ = null;
if(cljs.core.truth_((function (){var or__3583__auto__ = bit__4264__auto__;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return G__19494.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__19494.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__19494);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__19494);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__19495 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__19495) : cljs.core.clj__GT_js.call(null,G__19495));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__19511 = x;
if(G__19511){
var bit__4264__auto__ = null;
if(cljs.core.truth_((function (){var or__3583__auto__ = bit__4264__auto__;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return G__19511.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__19511.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__19511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__19511);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj19513 = {};
return obj19513;
})();
var seq__19514_19524 = cljs.core.seq(x);
var chunk__19515_19525 = null;
var count__19516_19526 = (0);
var i__19517_19527 = (0);
while(true){
if((i__19517_19527 < count__19516_19526)){
var vec__19518_19528 = chunk__19515_19525.cljs$core$IIndexed$_nth$arity$2(null,i__19517_19527);
var k_19529 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19518_19528,(0),null);
var v_19530 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19518_19528,(1),null);
(m[cljs.core.key__GT_js(k_19529)] = clj__GT_js(v_19530));

var G__19531 = seq__19514_19524;
var G__19532 = chunk__19515_19525;
var G__19533 = count__19516_19526;
var G__19534 = (i__19517_19527 + (1));
seq__19514_19524 = G__19531;
chunk__19515_19525 = G__19532;
count__19516_19526 = G__19533;
i__19517_19527 = G__19534;
continue;
} else {
var temp__4126__auto___19535 = cljs.core.seq(seq__19514_19524);
if(temp__4126__auto___19535){
var seq__19514_19536__$1 = temp__4126__auto___19535;
if(cljs.core.chunked_seq_QMARK_(seq__19514_19536__$1)){
var c__4370__auto___19537 = cljs.core.chunk_first(seq__19514_19536__$1);
var G__19538 = cljs.core.chunk_rest(seq__19514_19536__$1);
var G__19539 = c__4370__auto___19537;
var G__19540 = cljs.core.count(c__4370__auto___19537);
var G__19541 = (0);
seq__19514_19524 = G__19538;
chunk__19515_19525 = G__19539;
count__19516_19526 = G__19540;
i__19517_19527 = G__19541;
continue;
} else {
var vec__19519_19542 = cljs.core.first(seq__19514_19536__$1);
var k_19543 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19519_19542,(0),null);
var v_19544 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19519_19542,(1),null);
(m[cljs.core.key__GT_js(k_19543)] = clj__GT_js(v_19544));

var G__19545 = cljs.core.next(seq__19514_19536__$1);
var G__19546 = null;
var G__19547 = (0);
var G__19548 = (0);
seq__19514_19524 = G__19545;
chunk__19515_19525 = G__19546;
count__19516_19526 = G__19547;
i__19517_19527 = G__19548;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__19520_19549 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__19521_19550 = null;
var count__19522_19551 = (0);
var i__19523_19552 = (0);
while(true){
if((i__19523_19552 < count__19522_19551)){
var x_19553__$1 = chunk__19521_19550.cljs$core$IIndexed$_nth$arity$2(null,i__19523_19552);
arr.push(x_19553__$1);

var G__19554 = seq__19520_19549;
var G__19555 = chunk__19521_19550;
var G__19556 = count__19522_19551;
var G__19557 = (i__19523_19552 + (1));
seq__19520_19549 = G__19554;
chunk__19521_19550 = G__19555;
count__19522_19551 = G__19556;
i__19523_19552 = G__19557;
continue;
} else {
var temp__4126__auto___19558 = cljs.core.seq(seq__19520_19549);
if(temp__4126__auto___19558){
var seq__19520_19559__$1 = temp__4126__auto___19558;
if(cljs.core.chunked_seq_QMARK_(seq__19520_19559__$1)){
var c__4370__auto___19560 = cljs.core.chunk_first(seq__19520_19559__$1);
var G__19561 = cljs.core.chunk_rest(seq__19520_19559__$1);
var G__19562 = c__4370__auto___19560;
var G__19563 = cljs.core.count(c__4370__auto___19560);
var G__19564 = (0);
seq__19520_19549 = G__19561;
chunk__19521_19550 = G__19562;
count__19522_19551 = G__19563;
i__19523_19552 = G__19564;
continue;
} else {
var x_19565__$1 = cljs.core.first(seq__19520_19559__$1);
arr.push(x_19565__$1);

var G__19566 = cljs.core.next(seq__19520_19559__$1);
var G__19567 = null;
var G__19568 = (0);
var G__19569 = (0);
seq__19520_19549 = G__19566;
chunk__19521_19550 = G__19567;
count__19522_19551 = G__19568;
i__19523_19552 = G__19569;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj19571 = {};
return obj19571;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3571__auto__ = x;
if(and__3571__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3571__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4227__auto__ = (((x == null))?null:x);
return (function (){var or__3583__auto__ = (cljs.core._js__GT_clj[(function (){var G__19575 = x__4227__auto__;
return goog.typeOf(G__19575);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$11,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__19632__delegate = function (x,opts){
var map__19605 = opts;
var map__19605__$1 = ((cljs.core.seq_QMARK_(map__19605))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__19605):map__19605);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19605__$1,cljs.core.constant$keyword$11);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__19605,map__19605__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__19621 = x__$1;
if(G__19621){
var bit__4264__auto__ = null;
if(cljs.core.truth_((function (){var or__3583__auto__ = bit__4264__auto__;
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return G__19621.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__19621.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__19621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__19621);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4339__auto__ = ((function (map__19605,map__19605__$1,keywordize_keys,keyfn){
return (function iter__19622(s__19623){
return (new cljs.core.LazySeq(null,((function (map__19605,map__19605__$1,keywordize_keys,keyfn){
return (function (){
var s__19623__$1 = s__19623;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__19623__$1);
if(temp__4126__auto__){
var s__19623__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__19623__$2)){
var c__4337__auto__ = cljs.core.chunk_first(s__19623__$2);
var size__4338__auto__ = cljs.core.count(c__4337__auto__);
var b__19625 = cljs.core.chunk_buffer(size__4338__auto__);
if((function (){var i__19624 = (0);
while(true){
if((i__19624 < size__4338__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4337__auto__,i__19624);
cljs.core.chunk_append(b__19625,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__19630 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19630) : keyfn.call(null,G__19630));
})(),thisfn((x__$1[k]))], null));

var G__19633 = (i__19624 + (1));
i__19624 = G__19633;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__19625),iter__19622(cljs.core.chunk_rest(s__19623__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__19625),null);
}
} else {
var k = cljs.core.first(s__19623__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__19631 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19631) : keyfn.call(null,G__19631));
})(),thisfn((x__$1[k]))], null),iter__19622(cljs.core.rest(s__19623__$2)));
}
} else {
return null;
}
break;
}
});})(map__19605,map__19605__$1,keywordize_keys,keyfn))
,null,null));
});})(map__19605,map__19605__$1,keywordize_keys,keyfn))
;
return iter__4339__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__19605,map__19605__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__19632 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__19634__i = 0, G__19634__a = new Array(arguments.length -  1);
while (G__19634__i < G__19634__a.length) {G__19634__a[G__19634__i] = arguments[G__19634__i + 1]; ++G__19634__i;}
  opts = new cljs.core.IndexedSeq(G__19634__a,0);
} 
return G__19632__delegate.call(this,x,opts);};
G__19632.cljs$lang$maxFixedArity = 1;
G__19632.cljs$lang$applyTo = (function (arglist__19635){
var x = cljs.core.first(arglist__19635);
var opts = cljs.core.rest(arglist__19635);
return G__19632__delegate(x,opts);
});
G__19632.cljs$core$IFn$_invoke$arity$variadic = G__19632__delegate;
return G__19632;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__19636 = null;
if (arguments.length > 1) {
var G__19637__i = 0, G__19637__a = new Array(arguments.length -  1);
while (G__19637__i < G__19637__a.length) {G__19637__a[G__19637__i] = arguments[G__19637__i + 1]; ++G__19637__i;}
G__19636 = new cljs.core.IndexedSeq(G__19637__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__19640 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19640) : cljs.core.atom.call(null,G__19640));
})();
return ((function (mem){
return (function() { 
var G__19642__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__19641 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19641) : cljs.core.deref.call(null,G__19641));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__19642 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19643__i = 0, G__19643__a = new Array(arguments.length -  0);
while (G__19643__i < G__19643__a.length) {G__19643__a[G__19643__i] = arguments[G__19643__i + 0]; ++G__19643__i;}
  args = new cljs.core.IndexedSeq(G__19643__a,0);
} 
return G__19642__delegate.call(this,args);};
G__19642.cljs$lang$maxFixedArity = 0;
G__19642.cljs$lang$applyTo = (function (arglist__19644){
var args = cljs.core.seq(arglist__19644);
return G__19642__delegate(args);
});
G__19642.cljs$core$IFn$_invoke$arity$variadic = G__19642__delegate;
return G__19642;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__19646 = ret;
f = G__19646;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__19647__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__19647 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__19648__i = 0, G__19648__a = new Array(arguments.length -  1);
while (G__19648__i < G__19648__a.length) {G__19648__a[G__19648__i] = arguments[G__19648__i + 1]; ++G__19648__i;}
  args = new cljs.core.IndexedSeq(G__19648__a,0);
} 
return G__19647__delegate.call(this,f,args);};
G__19647.cljs$lang$maxFixedArity = 1;
G__19647.cljs$lang$applyTo = (function (arglist__19649){
var f = cljs.core.first(arglist__19649);
var args = cljs.core.rest(arglist__19649);
return G__19647__delegate(f,args);
});
G__19647.cljs$core$IFn$_invoke$arity$variadic = G__19647__delegate;
return G__19647;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__19650 = null;
if (arguments.length > 1) {
var G__19651__i = 0, G__19651__a = new Array(arguments.length -  1);
while (G__19651__i < G__19651__a.length) {G__19651__a[G__19651__i] = arguments[G__19651__i + 1]; ++G__19651__i;}
G__19650 = new cljs.core.IndexedSeq(G__19651__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__19650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__19654 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19654) : Math.floor.call(null,G__19654));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__19656 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19656) : f.call(null,G__19656));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$13,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$14,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__19658 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19658) : cljs.core.atom.call(null,G__19658));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__19659__i = 0, G__19659__a = new Array(arguments.length -  1);
while (G__19659__i < G__19659__a.length) {G__19659__a[G__19659__i] = arguments[G__19659__i + 1]; ++G__19659__i;}
  args = new cljs.core.IndexedSeq(G__19659__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__19660){
var f = cljs.core.first(arglist__19660);
var args = cljs.core.rest(arglist__19660);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__19725 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19725) : cljs.core.deref.call(null,G__19725));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3583__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
var and__3571__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3571__auto__){
var and__3571__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3571__auto____$1){
var and__3571__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3571__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__19750 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__19748 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__19748) : child.call(null,G__19748));
})(),(function (){var G__19749 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__19749) : parent.call(null,G__19749));
})());
var G__19751 = (i + (1));
ret = G__19750;
i = G__19751;
continue;
}
break;
}
} else {
return and__3571__auto____$2;
}
} else {
return and__3571__auto____$1;
}
} else {
return and__3571__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__19755 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19755) : cljs.core.deref.call(null,G__19755));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__19759 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19759) : cljs.core.deref.call(null,G__19759));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__19763 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19763) : cljs.core.deref.call(null,G__19763));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__19772 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__19772) : targets.call(null,G__19772));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__19773 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__19773) : sources.call(null,G__19773));
})()));
});})(tp,td,ta))
;
var or__3583__auto__ = ((cljs.core.contains_QMARK_((function (){var G__19777 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__19777) : tp.call(null,G__19777));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__19778 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__19778) : ta.call(null,G__19778));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__19779 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__19779) : ta.call(null,G__19779));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$14,tf(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$13,tf(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__19786 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__19786) : parentMap.call(null,G__19786));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__19787 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__19787) : parentMap.call(null,G__19787));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__19780_SHARP_){
return cljs.core.cons(cljs.core.first(p1__19780_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__19780_SHARP_),cljs.core.second(p1__19780_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__19788 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__19788) : parentMap.call(null,G__19788));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__19781_SHARP_,p2__19782_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__19781_SHARP_,p2__19782_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__19791 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19791) : cljs.core.deref.call(null,G__19791));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__19792 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19792) : cljs.core.deref.call(null,G__19792));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__19808 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19808) : cljs.core.deref.call(null,G__19808));
})().call(null,x);
var or__3583__auto__ = (cljs.core.truth_((function (){var and__3571__auto__ = xprefs;
if(cljs.core.truth_(and__3571__auto__)){
var G__19810 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__19810) : xprefs.call(null,G__19810));
} else {
return and__3571__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__19811 = cljs.core.rest(ps);
ps = G__19811;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3583__auto____$1)){
return or__3583__auto____$1;
} else {
var or__3583__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__19812 = cljs.core.rest(ps);
ps = G__19812;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3583__auto____$2)){
return or__3583__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3583__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3583__auto__)){
return or__3583__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__19826){
var vec__19827 = p__19826;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827,(1),null);
var e = vec__19827;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__19828 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19828) : cljs.core.deref.call(null,G__19828));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3583__auto__ = (be == null);
if(or__3583__auto__){
return or__3583__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__19829 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19829) : cljs.core.deref.call(null,G__19829));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__19830 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19830) : cljs.core.deref.call(null,G__19830));
})(),(function (){var G__19831 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19831) : cljs.core.deref.call(null,G__19831));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj19833 = {};
return obj19833;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._reset[(function (){var G__19837 = x__4227__auto__;
return goog.typeOf(G__19837);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._reset["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._add_method[(function (){var G__19841 = x__4227__auto__;
return goog.typeOf(G__19841);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._add_method["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._remove_method[(function (){var G__19845 = x__4227__auto__;
return goog.typeOf(G__19845);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._prefer_method[(function (){var G__19849 = x__4227__auto__;
return goog.typeOf(G__19849);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._get_method[(function (){var G__19853 = x__4227__auto__;
return goog.typeOf(G__19853);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._get_method["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._methods[(function (){var G__19857 = x__4227__auto__;
return goog.typeOf(G__19857);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._methods["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3571__auto__ = mf;
if(and__3571__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3571__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4227__auto__ = (((mf == null))?null:mf);
return (function (){var or__3583__auto__ = (cljs.core._prefers[(function (){var G__19861 = x__4227__auto__;
return goog.typeOf(G__19861);
})()]);
if(or__3583__auto__){
return or__3583__auto__;
} else {
var or__3583__auto____$1 = (cljs.core._prefers["_"]);
if(or__3583__auto____$1){
return or__3583__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__19863 = this$__$1;
return goog.getUid(G__19863);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__19864 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19864) : cljs.core.deref.call(null,G__19864));
})(),(function (){var G__19865 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19865) : cljs.core.deref.call(null,G__19865));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__19866 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19866) : cljs.core.deref.call(null,G__19866));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__19867 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19867) : cljs.core.deref.call(null,G__19867));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__19868 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19868) : cljs.core.deref.call(null,G__19868));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__19869 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19869) : cljs.core.deref.call(null,G__19869));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__20710 = null;
var G__20710__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__20710__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19870 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__19870) : self__.dispatch_fn.call(null,G__19870));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19871 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__19871) : target_fn.call(null,G__19871));
});
var G__20710__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19872 = a;
var G__19873 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__19872,G__19873) : self__.dispatch_fn.call(null,G__19872,G__19873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19874 = a;
var G__19875 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__19874,G__19875) : target_fn.call(null,G__19874,G__19875));
});
var G__20710__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19876 = a;
var G__19877 = b;
var G__19878 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__19876,G__19877,G__19878) : self__.dispatch_fn.call(null,G__19876,G__19877,G__19878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19879 = a;
var G__19880 = b;
var G__19881 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__19879,G__19880,G__19881) : target_fn.call(null,G__19879,G__19880,G__19881));
});
var G__20710__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19882 = a;
var G__19883 = b;
var G__19884 = c;
var G__19885 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__19882,G__19883,G__19884,G__19885) : self__.dispatch_fn.call(null,G__19882,G__19883,G__19884,G__19885));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19886 = a;
var G__19887 = b;
var G__19888 = c;
var G__19889 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__19886,G__19887,G__19888,G__19889) : target_fn.call(null,G__19886,G__19887,G__19888,G__19889));
});
var G__20710__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19890 = a;
var G__19891 = b;
var G__19892 = c;
var G__19893 = d;
var G__19894 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__19890,G__19891,G__19892,G__19893,G__19894) : self__.dispatch_fn.call(null,G__19890,G__19891,G__19892,G__19893,G__19894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19895 = a;
var G__19896 = b;
var G__19897 = c;
var G__19898 = d;
var G__19899 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__19895,G__19896,G__19897,G__19898,G__19899) : target_fn.call(null,G__19895,G__19896,G__19897,G__19898,G__19899));
});
var G__20710__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19900 = a;
var G__19901 = b;
var G__19902 = c;
var G__19903 = d;
var G__19904 = e;
var G__19905 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__19900,G__19901,G__19902,G__19903,G__19904,G__19905) : self__.dispatch_fn.call(null,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19906 = a;
var G__19907 = b;
var G__19908 = c;
var G__19909 = d;
var G__19910 = e;
var G__19911 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__19906,G__19907,G__19908,G__19909,G__19910,G__19911) : target_fn.call(null,G__19906,G__19907,G__19908,G__19909,G__19910,G__19911));
});
var G__20710__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19912 = a;
var G__19913 = b;
var G__19914 = c;
var G__19915 = d;
var G__19916 = e;
var G__19917 = f;
var G__19918 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918) : self__.dispatch_fn.call(null,G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19919 = a;
var G__19920 = b;
var G__19921 = c;
var G__19922 = d;
var G__19923 = e;
var G__19924 = f;
var G__19925 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__19919,G__19920,G__19921,G__19922,G__19923,G__19924,G__19925) : target_fn.call(null,G__19919,G__19920,G__19921,G__19922,G__19923,G__19924,G__19925));
});
var G__20710__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19926 = a;
var G__19927 = b;
var G__19928 = c;
var G__19929 = d;
var G__19930 = e;
var G__19931 = f;
var G__19932 = g;
var G__19933 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__19926,G__19927,G__19928,G__19929,G__19930,G__19931,G__19932,G__19933) : self__.dispatch_fn.call(null,G__19926,G__19927,G__19928,G__19929,G__19930,G__19931,G__19932,G__19933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19934 = a;
var G__19935 = b;
var G__19936 = c;
var G__19937 = d;
var G__19938 = e;
var G__19939 = f;
var G__19940 = g;
var G__19941 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__19934,G__19935,G__19936,G__19937,G__19938,G__19939,G__19940,G__19941) : target_fn.call(null,G__19934,G__19935,G__19936,G__19937,G__19938,G__19939,G__19940,G__19941));
});
var G__20710__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19942 = a;
var G__19943 = b;
var G__19944 = c;
var G__19945 = d;
var G__19946 = e;
var G__19947 = f;
var G__19948 = g;
var G__19949 = h;
var G__19950 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949,G__19950) : self__.dispatch_fn.call(null,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949,G__19950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19951 = a;
var G__19952 = b;
var G__19953 = c;
var G__19954 = d;
var G__19955 = e;
var G__19956 = f;
var G__19957 = g;
var G__19958 = h;
var G__19959 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__19951,G__19952,G__19953,G__19954,G__19955,G__19956,G__19957,G__19958,G__19959) : target_fn.call(null,G__19951,G__19952,G__19953,G__19954,G__19955,G__19956,G__19957,G__19958,G__19959));
});
var G__20710__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19960 = a;
var G__19961 = b;
var G__19962 = c;
var G__19963 = d;
var G__19964 = e;
var G__19965 = f;
var G__19966 = g;
var G__19967 = h;
var G__19968 = i;
var G__19969 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967,G__19968,G__19969) : self__.dispatch_fn.call(null,G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967,G__19968,G__19969));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19970 = a;
var G__19971 = b;
var G__19972 = c;
var G__19973 = d;
var G__19974 = e;
var G__19975 = f;
var G__19976 = g;
var G__19977 = h;
var G__19978 = i;
var G__19979 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__19970,G__19971,G__19972,G__19973,G__19974,G__19975,G__19976,G__19977,G__19978,G__19979) : target_fn.call(null,G__19970,G__19971,G__19972,G__19973,G__19974,G__19975,G__19976,G__19977,G__19978,G__19979));
});
var G__20710__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__19980 = a;
var G__19981 = b;
var G__19982 = c;
var G__19983 = d;
var G__19984 = e;
var G__19985 = f;
var G__19986 = g;
var G__19987 = h;
var G__19988 = i;
var G__19989 = j;
var G__19990 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986,G__19987,G__19988,G__19989,G__19990) : self__.dispatch_fn.call(null,G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986,G__19987,G__19988,G__19989,G__19990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19991 = a;
var G__19992 = b;
var G__19993 = c;
var G__19994 = d;
var G__19995 = e;
var G__19996 = f;
var G__19997 = g;
var G__19998 = h;
var G__19999 = i;
var G__20000 = j;
var G__20001 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997,G__19998,G__19999,G__20000,G__20001) : target_fn.call(null,G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997,G__19998,G__19999,G__20000,G__20001));
});
var G__20710__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20002 = a;
var G__20003 = b;
var G__20004 = c;
var G__20005 = d;
var G__20006 = e;
var G__20007 = f;
var G__20008 = g;
var G__20009 = h;
var G__20010 = i;
var G__20011 = j;
var G__20012 = k;
var G__20013 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__20002,G__20003,G__20004,G__20005,G__20006,G__20007,G__20008,G__20009,G__20010,G__20011,G__20012,G__20013) : self__.dispatch_fn.call(null,G__20002,G__20003,G__20004,G__20005,G__20006,G__20007,G__20008,G__20009,G__20010,G__20011,G__20012,G__20013));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20014 = a;
var G__20015 = b;
var G__20016 = c;
var G__20017 = d;
var G__20018 = e;
var G__20019 = f;
var G__20020 = g;
var G__20021 = h;
var G__20022 = i;
var G__20023 = j;
var G__20024 = k;
var G__20025 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022,G__20023,G__20024,G__20025) : target_fn.call(null,G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022,G__20023,G__20024,G__20025));
});
var G__20710__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20026 = a;
var G__20027 = b;
var G__20028 = c;
var G__20029 = d;
var G__20030 = e;
var G__20031 = f;
var G__20032 = g;
var G__20033 = h;
var G__20034 = i;
var G__20035 = j;
var G__20036 = k;
var G__20037 = l;
var G__20038 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__20026,G__20027,G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036,G__20037,G__20038) : self__.dispatch_fn.call(null,G__20026,G__20027,G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036,G__20037,G__20038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20039 = a;
var G__20040 = b;
var G__20041 = c;
var G__20042 = d;
var G__20043 = e;
var G__20044 = f;
var G__20045 = g;
var G__20046 = h;
var G__20047 = i;
var G__20048 = j;
var G__20049 = k;
var G__20050 = l;
var G__20051 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051) : target_fn.call(null,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051));
});
var G__20710__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20052 = a;
var G__20053 = b;
var G__20054 = c;
var G__20055 = d;
var G__20056 = e;
var G__20057 = f;
var G__20058 = g;
var G__20059 = h;
var G__20060 = i;
var G__20061 = j;
var G__20062 = k;
var G__20063 = l;
var G__20064 = m;
var G__20065 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059,G__20060,G__20061,G__20062,G__20063,G__20064,G__20065) : self__.dispatch_fn.call(null,G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059,G__20060,G__20061,G__20062,G__20063,G__20064,G__20065));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20066 = a;
var G__20067 = b;
var G__20068 = c;
var G__20069 = d;
var G__20070 = e;
var G__20071 = f;
var G__20072 = g;
var G__20073 = h;
var G__20074 = i;
var G__20075 = j;
var G__20076 = k;
var G__20077 = l;
var G__20078 = m;
var G__20079 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__20066,G__20067,G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079) : target_fn.call(null,G__20066,G__20067,G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079));
});
var G__20710__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20080 = a;
var G__20081 = b;
var G__20082 = c;
var G__20083 = d;
var G__20084 = e;
var G__20085 = f;
var G__20086 = g;
var G__20087 = h;
var G__20088 = i;
var G__20089 = j;
var G__20090 = k;
var G__20091 = l;
var G__20092 = m;
var G__20093 = n;
var G__20094 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__20080,G__20081,G__20082,G__20083,G__20084,G__20085,G__20086,G__20087,G__20088,G__20089,G__20090,G__20091,G__20092,G__20093,G__20094) : self__.dispatch_fn.call(null,G__20080,G__20081,G__20082,G__20083,G__20084,G__20085,G__20086,G__20087,G__20088,G__20089,G__20090,G__20091,G__20092,G__20093,G__20094));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20095 = a;
var G__20096 = b;
var G__20097 = c;
var G__20098 = d;
var G__20099 = e;
var G__20100 = f;
var G__20101 = g;
var G__20102 = h;
var G__20103 = i;
var G__20104 = j;
var G__20105 = k;
var G__20106 = l;
var G__20107 = m;
var G__20108 = n;
var G__20109 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__20095,G__20096,G__20097,G__20098,G__20099,G__20100,G__20101,G__20102,G__20103,G__20104,G__20105,G__20106,G__20107,G__20108,G__20109) : target_fn.call(null,G__20095,G__20096,G__20097,G__20098,G__20099,G__20100,G__20101,G__20102,G__20103,G__20104,G__20105,G__20106,G__20107,G__20108,G__20109));
});
var G__20710__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20110 = a;
var G__20111 = b;
var G__20112 = c;
var G__20113 = d;
var G__20114 = e;
var G__20115 = f;
var G__20116 = g;
var G__20117 = h;
var G__20118 = i;
var G__20119 = j;
var G__20120 = k;
var G__20121 = l;
var G__20122 = m;
var G__20123 = n;
var G__20124 = o;
var G__20125 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__20110,G__20111,G__20112,G__20113,G__20114,G__20115,G__20116,G__20117,G__20118,G__20119,G__20120,G__20121,G__20122,G__20123,G__20124,G__20125) : self__.dispatch_fn.call(null,G__20110,G__20111,G__20112,G__20113,G__20114,G__20115,G__20116,G__20117,G__20118,G__20119,G__20120,G__20121,G__20122,G__20123,G__20124,G__20125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20126 = a;
var G__20127 = b;
var G__20128 = c;
var G__20129 = d;
var G__20130 = e;
var G__20131 = f;
var G__20132 = g;
var G__20133 = h;
var G__20134 = i;
var G__20135 = j;
var G__20136 = k;
var G__20137 = l;
var G__20138 = m;
var G__20139 = n;
var G__20140 = o;
var G__20141 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__20126,G__20127,G__20128,G__20129,G__20130,G__20131,G__20132,G__20133,G__20134,G__20135,G__20136,G__20137,G__20138,G__20139,G__20140,G__20141) : target_fn.call(null,G__20126,G__20127,G__20128,G__20129,G__20130,G__20131,G__20132,G__20133,G__20134,G__20135,G__20136,G__20137,G__20138,G__20139,G__20140,G__20141));
});
var G__20710__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20142 = a;
var G__20143 = b;
var G__20144 = c;
var G__20145 = d;
var G__20146 = e;
var G__20147 = f;
var G__20148 = g;
var G__20149 = h;
var G__20150 = i;
var G__20151 = j;
var G__20152 = k;
var G__20153 = l;
var G__20154 = m;
var G__20155 = n;
var G__20156 = o;
var G__20157 = p;
var G__20158 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__20142,G__20143,G__20144,G__20145,G__20146,G__20147,G__20148,G__20149,G__20150,G__20151,G__20152,G__20153,G__20154,G__20155,G__20156,G__20157,G__20158) : self__.dispatch_fn.call(null,G__20142,G__20143,G__20144,G__20145,G__20146,G__20147,G__20148,G__20149,G__20150,G__20151,G__20152,G__20153,G__20154,G__20155,G__20156,G__20157,G__20158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20159 = a;
var G__20160 = b;
var G__20161 = c;
var G__20162 = d;
var G__20163 = e;
var G__20164 = f;
var G__20165 = g;
var G__20166 = h;
var G__20167 = i;
var G__20168 = j;
var G__20169 = k;
var G__20170 = l;
var G__20171 = m;
var G__20172 = n;
var G__20173 = o;
var G__20174 = p;
var G__20175 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__20159,G__20160,G__20161,G__20162,G__20163,G__20164,G__20165,G__20166,G__20167,G__20168,G__20169,G__20170,G__20171,G__20172,G__20173,G__20174,G__20175) : target_fn.call(null,G__20159,G__20160,G__20161,G__20162,G__20163,G__20164,G__20165,G__20166,G__20167,G__20168,G__20169,G__20170,G__20171,G__20172,G__20173,G__20174,G__20175));
});
var G__20710__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20176 = a;
var G__20177 = b;
var G__20178 = c;
var G__20179 = d;
var G__20180 = e;
var G__20181 = f;
var G__20182 = g;
var G__20183 = h;
var G__20184 = i;
var G__20185 = j;
var G__20186 = k;
var G__20187 = l;
var G__20188 = m;
var G__20189 = n;
var G__20190 = o;
var G__20191 = p;
var G__20192 = q;
var G__20193 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__20176,G__20177,G__20178,G__20179,G__20180,G__20181,G__20182,G__20183,G__20184,G__20185,G__20186,G__20187,G__20188,G__20189,G__20190,G__20191,G__20192,G__20193) : self__.dispatch_fn.call(null,G__20176,G__20177,G__20178,G__20179,G__20180,G__20181,G__20182,G__20183,G__20184,G__20185,G__20186,G__20187,G__20188,G__20189,G__20190,G__20191,G__20192,G__20193));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20194 = a;
var G__20195 = b;
var G__20196 = c;
var G__20197 = d;
var G__20198 = e;
var G__20199 = f;
var G__20200 = g;
var G__20201 = h;
var G__20202 = i;
var G__20203 = j;
var G__20204 = k;
var G__20205 = l;
var G__20206 = m;
var G__20207 = n;
var G__20208 = o;
var G__20209 = p;
var G__20210 = q;
var G__20211 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__20194,G__20195,G__20196,G__20197,G__20198,G__20199,G__20200,G__20201,G__20202,G__20203,G__20204,G__20205,G__20206,G__20207,G__20208,G__20209,G__20210,G__20211) : target_fn.call(null,G__20194,G__20195,G__20196,G__20197,G__20198,G__20199,G__20200,G__20201,G__20202,G__20203,G__20204,G__20205,G__20206,G__20207,G__20208,G__20209,G__20210,G__20211));
});
var G__20710__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20212 = a;
var G__20213 = b;
var G__20214 = c;
var G__20215 = d;
var G__20216 = e;
var G__20217 = f;
var G__20218 = g;
var G__20219 = h;
var G__20220 = i;
var G__20221 = j;
var G__20222 = k;
var G__20223 = l;
var G__20224 = m;
var G__20225 = n;
var G__20226 = o;
var G__20227 = p;
var G__20228 = q;
var G__20229 = r;
var G__20230 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__20212,G__20213,G__20214,G__20215,G__20216,G__20217,G__20218,G__20219,G__20220,G__20221,G__20222,G__20223,G__20224,G__20225,G__20226,G__20227,G__20228,G__20229,G__20230) : self__.dispatch_fn.call(null,G__20212,G__20213,G__20214,G__20215,G__20216,G__20217,G__20218,G__20219,G__20220,G__20221,G__20222,G__20223,G__20224,G__20225,G__20226,G__20227,G__20228,G__20229,G__20230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20231 = a;
var G__20232 = b;
var G__20233 = c;
var G__20234 = d;
var G__20235 = e;
var G__20236 = f;
var G__20237 = g;
var G__20238 = h;
var G__20239 = i;
var G__20240 = j;
var G__20241 = k;
var G__20242 = l;
var G__20243 = m;
var G__20244 = n;
var G__20245 = o;
var G__20246 = p;
var G__20247 = q;
var G__20248 = r;
var G__20249 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__20231,G__20232,G__20233,G__20234,G__20235,G__20236,G__20237,G__20238,G__20239,G__20240,G__20241,G__20242,G__20243,G__20244,G__20245,G__20246,G__20247,G__20248,G__20249) : target_fn.call(null,G__20231,G__20232,G__20233,G__20234,G__20235,G__20236,G__20237,G__20238,G__20239,G__20240,G__20241,G__20242,G__20243,G__20244,G__20245,G__20246,G__20247,G__20248,G__20249));
});
var G__20710__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20250 = a;
var G__20251 = b;
var G__20252 = c;
var G__20253 = d;
var G__20254 = e;
var G__20255 = f;
var G__20256 = g;
var G__20257 = h;
var G__20258 = i;
var G__20259 = j;
var G__20260 = k;
var G__20261 = l;
var G__20262 = m;
var G__20263 = n;
var G__20264 = o;
var G__20265 = p;
var G__20266 = q;
var G__20267 = r;
var G__20268 = s;
var G__20269 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__20250,G__20251,G__20252,G__20253,G__20254,G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268,G__20269) : self__.dispatch_fn.call(null,G__20250,G__20251,G__20252,G__20253,G__20254,G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268,G__20269));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20270 = a;
var G__20271 = b;
var G__20272 = c;
var G__20273 = d;
var G__20274 = e;
var G__20275 = f;
var G__20276 = g;
var G__20277 = h;
var G__20278 = i;
var G__20279 = j;
var G__20280 = k;
var G__20281 = l;
var G__20282 = m;
var G__20283 = n;
var G__20284 = o;
var G__20285 = p;
var G__20286 = q;
var G__20287 = r;
var G__20288 = s;
var G__20289 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289) : target_fn.call(null,G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289));
});
var G__20710__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__20710 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20710__1.call(this,self__);
case 2:
return G__20710__2.call(this,self__,a);
case 3:
return G__20710__3.call(this,self__,a,b);
case 4:
return G__20710__4.call(this,self__,a,b,c);
case 5:
return G__20710__5.call(this,self__,a,b,c,d);
case 6:
return G__20710__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20710__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20710__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20710__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20710__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20710__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20710__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20710__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20710__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20710__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20710__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20710__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20710__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20710__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20710__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20710__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20710__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20710.cljs$core$IFn$_invoke$arity$1 = G__20710__1;
G__20710.cljs$core$IFn$_invoke$arity$2 = G__20710__2;
G__20710.cljs$core$IFn$_invoke$arity$3 = G__20710__3;
G__20710.cljs$core$IFn$_invoke$arity$4 = G__20710__4;
G__20710.cljs$core$IFn$_invoke$arity$5 = G__20710__5;
G__20710.cljs$core$IFn$_invoke$arity$6 = G__20710__6;
G__20710.cljs$core$IFn$_invoke$arity$7 = G__20710__7;
G__20710.cljs$core$IFn$_invoke$arity$8 = G__20710__8;
G__20710.cljs$core$IFn$_invoke$arity$9 = G__20710__9;
G__20710.cljs$core$IFn$_invoke$arity$10 = G__20710__10;
G__20710.cljs$core$IFn$_invoke$arity$11 = G__20710__11;
G__20710.cljs$core$IFn$_invoke$arity$12 = G__20710__12;
G__20710.cljs$core$IFn$_invoke$arity$13 = G__20710__13;
G__20710.cljs$core$IFn$_invoke$arity$14 = G__20710__14;
G__20710.cljs$core$IFn$_invoke$arity$15 = G__20710__15;
G__20710.cljs$core$IFn$_invoke$arity$16 = G__20710__16;
G__20710.cljs$core$IFn$_invoke$arity$17 = G__20710__17;
G__20710.cljs$core$IFn$_invoke$arity$18 = G__20710__18;
G__20710.cljs$core$IFn$_invoke$arity$19 = G__20710__19;
G__20710.cljs$core$IFn$_invoke$arity$20 = G__20710__20;
G__20710.cljs$core$IFn$_invoke$arity$21 = G__20710__21;
G__20710.cljs$core$IFn$_invoke$arity$22 = G__20710__22;
return G__20710;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args19862){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19862)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20290 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__20290) : self__.dispatch_fn.call(null,G__20290));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20291 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__20291) : target_fn.call(null,G__20291));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20292 = a;
var G__20293 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__20292,G__20293) : self__.dispatch_fn.call(null,G__20292,G__20293));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20294 = a;
var G__20295 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__20294,G__20295) : target_fn.call(null,G__20294,G__20295));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20296 = a;
var G__20297 = b;
var G__20298 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__20296,G__20297,G__20298) : self__.dispatch_fn.call(null,G__20296,G__20297,G__20298));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20299 = a;
var G__20300 = b;
var G__20301 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__20299,G__20300,G__20301) : target_fn.call(null,G__20299,G__20300,G__20301));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20302 = a;
var G__20303 = b;
var G__20304 = c;
var G__20305 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__20302,G__20303,G__20304,G__20305) : self__.dispatch_fn.call(null,G__20302,G__20303,G__20304,G__20305));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20306 = a;
var G__20307 = b;
var G__20308 = c;
var G__20309 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__20306,G__20307,G__20308,G__20309) : target_fn.call(null,G__20306,G__20307,G__20308,G__20309));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20310 = a;
var G__20311 = b;
var G__20312 = c;
var G__20313 = d;
var G__20314 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__20310,G__20311,G__20312,G__20313,G__20314) : self__.dispatch_fn.call(null,G__20310,G__20311,G__20312,G__20313,G__20314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20315 = a;
var G__20316 = b;
var G__20317 = c;
var G__20318 = d;
var G__20319 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__20315,G__20316,G__20317,G__20318,G__20319) : target_fn.call(null,G__20315,G__20316,G__20317,G__20318,G__20319));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20320 = a;
var G__20321 = b;
var G__20322 = c;
var G__20323 = d;
var G__20324 = e;
var G__20325 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__20320,G__20321,G__20322,G__20323,G__20324,G__20325) : self__.dispatch_fn.call(null,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20326 = a;
var G__20327 = b;
var G__20328 = c;
var G__20329 = d;
var G__20330 = e;
var G__20331 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__20326,G__20327,G__20328,G__20329,G__20330,G__20331) : target_fn.call(null,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20332 = a;
var G__20333 = b;
var G__20334 = c;
var G__20335 = d;
var G__20336 = e;
var G__20337 = f;
var G__20338 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338) : self__.dispatch_fn.call(null,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20339 = a;
var G__20340 = b;
var G__20341 = c;
var G__20342 = d;
var G__20343 = e;
var G__20344 = f;
var G__20345 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345) : target_fn.call(null,G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20346 = a;
var G__20347 = b;
var G__20348 = c;
var G__20349 = d;
var G__20350 = e;
var G__20351 = f;
var G__20352 = g;
var G__20353 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353) : self__.dispatch_fn.call(null,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20354 = a;
var G__20355 = b;
var G__20356 = c;
var G__20357 = d;
var G__20358 = e;
var G__20359 = f;
var G__20360 = g;
var G__20361 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361) : target_fn.call(null,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20362 = a;
var G__20363 = b;
var G__20364 = c;
var G__20365 = d;
var G__20366 = e;
var G__20367 = f;
var G__20368 = g;
var G__20369 = h;
var G__20370 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370) : self__.dispatch_fn.call(null,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20371 = a;
var G__20372 = b;
var G__20373 = c;
var G__20374 = d;
var G__20375 = e;
var G__20376 = f;
var G__20377 = g;
var G__20378 = h;
var G__20379 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__20371,G__20372,G__20373,G__20374,G__20375,G__20376,G__20377,G__20378,G__20379) : target_fn.call(null,G__20371,G__20372,G__20373,G__20374,G__20375,G__20376,G__20377,G__20378,G__20379));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20380 = a;
var G__20381 = b;
var G__20382 = c;
var G__20383 = d;
var G__20384 = e;
var G__20385 = f;
var G__20386 = g;
var G__20387 = h;
var G__20388 = i;
var G__20389 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389) : self__.dispatch_fn.call(null,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20390 = a;
var G__20391 = b;
var G__20392 = c;
var G__20393 = d;
var G__20394 = e;
var G__20395 = f;
var G__20396 = g;
var G__20397 = h;
var G__20398 = i;
var G__20399 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__20390,G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397,G__20398,G__20399) : target_fn.call(null,G__20390,G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397,G__20398,G__20399));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20400 = a;
var G__20401 = b;
var G__20402 = c;
var G__20403 = d;
var G__20404 = e;
var G__20405 = f;
var G__20406 = g;
var G__20407 = h;
var G__20408 = i;
var G__20409 = j;
var G__20410 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410) : self__.dispatch_fn.call(null,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20411 = a;
var G__20412 = b;
var G__20413 = c;
var G__20414 = d;
var G__20415 = e;
var G__20416 = f;
var G__20417 = g;
var G__20418 = h;
var G__20419 = i;
var G__20420 = j;
var G__20421 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__20411,G__20412,G__20413,G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421) : target_fn.call(null,G__20411,G__20412,G__20413,G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20422 = a;
var G__20423 = b;
var G__20424 = c;
var G__20425 = d;
var G__20426 = e;
var G__20427 = f;
var G__20428 = g;
var G__20429 = h;
var G__20430 = i;
var G__20431 = j;
var G__20432 = k;
var G__20433 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433) : self__.dispatch_fn.call(null,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20434 = a;
var G__20435 = b;
var G__20436 = c;
var G__20437 = d;
var G__20438 = e;
var G__20439 = f;
var G__20440 = g;
var G__20441 = h;
var G__20442 = i;
var G__20443 = j;
var G__20444 = k;
var G__20445 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__20434,G__20435,G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445) : target_fn.call(null,G__20434,G__20435,G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20446 = a;
var G__20447 = b;
var G__20448 = c;
var G__20449 = d;
var G__20450 = e;
var G__20451 = f;
var G__20452 = g;
var G__20453 = h;
var G__20454 = i;
var G__20455 = j;
var G__20456 = k;
var G__20457 = l;
var G__20458 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__20446,G__20447,G__20448,G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458) : self__.dispatch_fn.call(null,G__20446,G__20447,G__20448,G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20459 = a;
var G__20460 = b;
var G__20461 = c;
var G__20462 = d;
var G__20463 = e;
var G__20464 = f;
var G__20465 = g;
var G__20466 = h;
var G__20467 = i;
var G__20468 = j;
var G__20469 = k;
var G__20470 = l;
var G__20471 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__20459,G__20460,G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470,G__20471) : target_fn.call(null,G__20459,G__20460,G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470,G__20471));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20472 = a;
var G__20473 = b;
var G__20474 = c;
var G__20475 = d;
var G__20476 = e;
var G__20477 = f;
var G__20478 = g;
var G__20479 = h;
var G__20480 = i;
var G__20481 = j;
var G__20482 = k;
var G__20483 = l;
var G__20484 = m;
var G__20485 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__20472,G__20473,G__20474,G__20475,G__20476,G__20477,G__20478,G__20479,G__20480,G__20481,G__20482,G__20483,G__20484,G__20485) : self__.dispatch_fn.call(null,G__20472,G__20473,G__20474,G__20475,G__20476,G__20477,G__20478,G__20479,G__20480,G__20481,G__20482,G__20483,G__20484,G__20485));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20486 = a;
var G__20487 = b;
var G__20488 = c;
var G__20489 = d;
var G__20490 = e;
var G__20491 = f;
var G__20492 = g;
var G__20493 = h;
var G__20494 = i;
var G__20495 = j;
var G__20496 = k;
var G__20497 = l;
var G__20498 = m;
var G__20499 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__20486,G__20487,G__20488,G__20489,G__20490,G__20491,G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498,G__20499) : target_fn.call(null,G__20486,G__20487,G__20488,G__20489,G__20490,G__20491,G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498,G__20499));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20500 = a;
var G__20501 = b;
var G__20502 = c;
var G__20503 = d;
var G__20504 = e;
var G__20505 = f;
var G__20506 = g;
var G__20507 = h;
var G__20508 = i;
var G__20509 = j;
var G__20510 = k;
var G__20511 = l;
var G__20512 = m;
var G__20513 = n;
var G__20514 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__20500,G__20501,G__20502,G__20503,G__20504,G__20505,G__20506,G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514) : self__.dispatch_fn.call(null,G__20500,G__20501,G__20502,G__20503,G__20504,G__20505,G__20506,G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20515 = a;
var G__20516 = b;
var G__20517 = c;
var G__20518 = d;
var G__20519 = e;
var G__20520 = f;
var G__20521 = g;
var G__20522 = h;
var G__20523 = i;
var G__20524 = j;
var G__20525 = k;
var G__20526 = l;
var G__20527 = m;
var G__20528 = n;
var G__20529 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__20515,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522,G__20523,G__20524,G__20525,G__20526,G__20527,G__20528,G__20529) : target_fn.call(null,G__20515,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522,G__20523,G__20524,G__20525,G__20526,G__20527,G__20528,G__20529));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20530 = a;
var G__20531 = b;
var G__20532 = c;
var G__20533 = d;
var G__20534 = e;
var G__20535 = f;
var G__20536 = g;
var G__20537 = h;
var G__20538 = i;
var G__20539 = j;
var G__20540 = k;
var G__20541 = l;
var G__20542 = m;
var G__20543 = n;
var G__20544 = o;
var G__20545 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536,G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545) : self__.dispatch_fn.call(null,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536,G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20546 = a;
var G__20547 = b;
var G__20548 = c;
var G__20549 = d;
var G__20550 = e;
var G__20551 = f;
var G__20552 = g;
var G__20553 = h;
var G__20554 = i;
var G__20555 = j;
var G__20556 = k;
var G__20557 = l;
var G__20558 = m;
var G__20559 = n;
var G__20560 = o;
var G__20561 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561) : target_fn.call(null,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20562 = a;
var G__20563 = b;
var G__20564 = c;
var G__20565 = d;
var G__20566 = e;
var G__20567 = f;
var G__20568 = g;
var G__20569 = h;
var G__20570 = i;
var G__20571 = j;
var G__20572 = k;
var G__20573 = l;
var G__20574 = m;
var G__20575 = n;
var G__20576 = o;
var G__20577 = p;
var G__20578 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578) : self__.dispatch_fn.call(null,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20579 = a;
var G__20580 = b;
var G__20581 = c;
var G__20582 = d;
var G__20583 = e;
var G__20584 = f;
var G__20585 = g;
var G__20586 = h;
var G__20587 = i;
var G__20588 = j;
var G__20589 = k;
var G__20590 = l;
var G__20591 = m;
var G__20592 = n;
var G__20593 = o;
var G__20594 = p;
var G__20595 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591,G__20592,G__20593,G__20594,G__20595) : target_fn.call(null,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591,G__20592,G__20593,G__20594,G__20595));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20596 = a;
var G__20597 = b;
var G__20598 = c;
var G__20599 = d;
var G__20600 = e;
var G__20601 = f;
var G__20602 = g;
var G__20603 = h;
var G__20604 = i;
var G__20605 = j;
var G__20606 = k;
var G__20607 = l;
var G__20608 = m;
var G__20609 = n;
var G__20610 = o;
var G__20611 = p;
var G__20612 = q;
var G__20613 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605,G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613) : self__.dispatch_fn.call(null,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605,G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20614 = a;
var G__20615 = b;
var G__20616 = c;
var G__20617 = d;
var G__20618 = e;
var G__20619 = f;
var G__20620 = g;
var G__20621 = h;
var G__20622 = i;
var G__20623 = j;
var G__20624 = k;
var G__20625 = l;
var G__20626 = m;
var G__20627 = n;
var G__20628 = o;
var G__20629 = p;
var G__20630 = q;
var G__20631 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631) : target_fn.call(null,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20632 = a;
var G__20633 = b;
var G__20634 = c;
var G__20635 = d;
var G__20636 = e;
var G__20637 = f;
var G__20638 = g;
var G__20639 = h;
var G__20640 = i;
var G__20641 = j;
var G__20642 = k;
var G__20643 = l;
var G__20644 = m;
var G__20645 = n;
var G__20646 = o;
var G__20647 = p;
var G__20648 = q;
var G__20649 = r;
var G__20650 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__20632,G__20633,G__20634,G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650) : self__.dispatch_fn.call(null,G__20632,G__20633,G__20634,G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20651 = a;
var G__20652 = b;
var G__20653 = c;
var G__20654 = d;
var G__20655 = e;
var G__20656 = f;
var G__20657 = g;
var G__20658 = h;
var G__20659 = i;
var G__20660 = j;
var G__20661 = k;
var G__20662 = l;
var G__20663 = m;
var G__20664 = n;
var G__20665 = o;
var G__20666 = p;
var G__20667 = q;
var G__20668 = r;
var G__20669 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669) : target_fn.call(null,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20670 = a;
var G__20671 = b;
var G__20672 = c;
var G__20673 = d;
var G__20674 = e;
var G__20675 = f;
var G__20676 = g;
var G__20677 = h;
var G__20678 = i;
var G__20679 = j;
var G__20680 = k;
var G__20681 = l;
var G__20682 = m;
var G__20683 = n;
var G__20684 = o;
var G__20685 = p;
var G__20686 = q;
var G__20687 = r;
var G__20688 = s;
var G__20689 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__20670,G__20671,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689) : self__.dispatch_fn.call(null,G__20670,G__20671,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20690 = a;
var G__20691 = b;
var G__20692 = c;
var G__20693 = d;
var G__20694 = e;
var G__20695 = f;
var G__20696 = g;
var G__20697 = h;
var G__20698 = i;
var G__20699 = j;
var G__20700 = k;
var G__20701 = l;
var G__20702 = m;
var G__20703 = n;
var G__20704 = o;
var G__20705 = p;
var G__20706 = q;
var G__20707 = r;
var G__20708 = s;
var G__20709 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709) : target_fn.call(null,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20711 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__20711);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4170__auto__,writer__4171__auto__,opt__4172__auto__){
return cljs.core._write(writer__4171__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__20716 = msg;
return Error(G__20716);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__20721 = x;
var G__20722 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__20721,G__20722) : pred.call(null,G__20721,G__20722));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__20723 = y;
var G__20724 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__20723,G__20724) : pred.call(null,G__20723,G__20724));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$15;
} else {
return cljs.core.constant$keyword$16;
}
});
